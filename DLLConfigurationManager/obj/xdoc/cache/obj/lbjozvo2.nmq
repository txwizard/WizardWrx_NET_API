id: WizardWrx.DLLConfigurationManager
language: CSharp
name:
  Default: WizardWrx.DLLConfigurationManager
qualifiedName:
  Default: WizardWrx.DLLConfigurationManager
type: Assembly
modifiers: {}
items:
- id: WizardWrx.DLLConfigurationManager
  commentId: N:WizardWrx.DLLConfigurationManager
  language: CSharp
  name:
    CSharp: WizardWrx.DLLConfigurationManager
    VB: WizardWrx.DLLConfigurationManager
  nameWithType:
    CSharp: WizardWrx.DLLConfigurationManager
    VB: WizardWrx.DLLConfigurationManager
  qualifiedName:
    CSharp: WizardWrx.DLLConfigurationManager
    VB: WizardWrx.DLLConfigurationManager
  type: Namespace
  assemblies:
  - WizardWrx.DLLConfigurationManager
  modifiers: {}
  items:
  - id: WizardWrx.DLLConfigurationManager.ExceptionLogger
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger
    language: CSharp
    name:
      CSharp: ExceptionLogger
      VB: ExceptionLogger
    nameWithType:
      CSharp: ExceptionLogger
      VB: ExceptionLogger
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger
      VB: WizardWrx.DLLConfigurationManager.ExceptionLogger
    type: Class
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: ExceptionLogger
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
      startLine: 403
    summary: "\nThis Singleton class exposes methods for formatting data from instances\nof the System.Exception class, and commonly used derived classes, and\ndisplaying the formatted data on a console (strictly speaking, on\nSTDOUT, which can be redirected to a file), and recording them in a\nWindows event log.\n\nUnlike most of the classes defined in this library, this class may be\ninherited.\n\nAll methods of this class are thread-safe. See Remarks.\n"
    remarks: "\nThis class was developed to report exceptions in a multi threaded console\napplication. Its methods were designed to report messages in a manner\nthat is thread-safe, yet keeps each message intact.\n\nBoth objectives are achieved fairly easily.\n\n1) All methods use only local variables. The only class level static\ndata is a handful of constants, which are, by definition, read only, and\nthe private SyncRoot object used to synchronize access to the object and\nits properties. This satisfies the first condition of thread safety,\nbecause all methods have exclusive access to all of their data.\n\n2) Each message is built up, line by line, by appending to an instance\nof a StringBuilder class, using its AppendFormat method, which behaves\nlike the static Format method of the System.String class. Although the\nAppendFormat method is an instance method, since the associated instance\nis local, thread safety remains intact. See Reference 1.\n\n2) A single call to TextWriter.Synchronized ( Console.Out ).WriteLine\nor TextWriter.Synchronized ( Console.Error ).WriteLine writes the\nmessage, all at once, onto the console, preserving its integrity. Since\nthe only event that uses a shared resource is called once only, and that\ncall is synchronized, the message display is intact.\n\nSince each method uses the shared resource, access to the console\nStandard Error (STDERR) stream, once only, and does so in a synchronized\n(thread-safe) way, the entire method is thread-safe.\n\nAs a reminder to include WizardWrx.DLLServices2.dll in your projects, I\nleft this class in the WizardWrx.DLLServices2 namespace. Only symbolic\nconstants got promoted to the root namespace.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ExceptionLogger : GenericSingletonBase<ExceptionLogger>'
        VB: >-
          Public Class ExceptionLogger

              Inherits GenericSingletonBase(Of ExceptionLogger)
    seealso:
    - linkId: WizardWrx.Core.PropertyDefaults
      commentId: T:WizardWrx.Core.PropertyDefaults
    inheritance:
    - System.Object
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}
    inheritedMembers:
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.s_genTheOnlyInstance
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.TheOnlyInstance
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
      language: CSharp
      name:
        CSharp: WIZARDWRX_EVENT_SOURCE_ID
        VB: WIZARDWRX_EVENT_SOURCE_ID
      nameWithType:
        CSharp: ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
        VB: ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.WIZARDWRX_EVENT_SOURCE_ID
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: WIZARDWRX_EVENT_SOURCE_ID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 689
      summary: "\nThis string defines a default event source ID, WizardWrx, which I\nregister on behalf of my own applications.\n"
      example: []
      syntax:
        content:
          CSharp: public const string WIZARDWRX_EVENT_SOURCE_ID = "WizardWrx"
          VB: Public Const WIZARDWRX_EVENT_SOURCE_ID As String = "WizardWrx"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
      language: CSharp
      name:
        CSharp: AppEventSourceID
        VB: AppEventSourceID
      nameWithType:
        CSharp: ExceptionLogger.AppEventSourceID
        VB: ExceptionLogger.AppEventSourceID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppEventSourceID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 786
      summary: "\nAlong with the EventLoggingState property, this property governs\nrecording of events in the Windows Application Event Log or in a\ncustom event log of your choice.\n\nThe value of this property is the event source ID string to use. To\nsimplify applications, this property has a default value, defined by\nWIZARDWRX_EVENT_SOURCE_ID.\n\nIMPORTANT: Each event source ID string is machine specific, and each\nmaps to one, and only one, event log, which is designated when the\nsource is registered, as it must be before its first use.\n"
      example: []
      syntax:
        content:
          CSharp: public string AppEventSourceID { get; set; }
          VB: Public Property AppEventSourceID As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
      language: CSharp
      name:
        CSharp: ApplicationSubsystem
        VB: ApplicationSubsystem
      nameWithType:
        CSharp: ExceptionLogger.ApplicationSubsystem
        VB: ExceptionLogger.ApplicationSubsystem
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ApplicationSubsystem
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 818
      summary: "\nThe value of this property is the actual subsystem ID reported by a\nfully managed function that yields the same result as the usual\nnative (unmanaged) method.\n"
      remarks: "\nThis property uses GetExeSubsystem in lieu of GetProcessSubsystem to\ncircumvent an anomaly in the Visual Studio debugging engine, which\ncauses that function to return 2 (Windows GUI subsystem) when you\nuse the Visual Studio Hosting Process, which runs in the Windows\nsubsystem. The cause of this behavior is that the Visual Studio\nHosting Process trades places with the process under study, becoming\nthe first executable file loaded into the active process.\n"
      example: []
      syntax:
        content:
          CSharp: public PESubsystemInfo.PESubsystemID ApplicationSubsystem { get; }
          VB: Public ReadOnly Property ApplicationSubsystem As PESubsystemInfo.PESubsystemID
        parameters: []
        return:
          type: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
      language: CSharp
      name:
        CSharp: ErrorMessageColors
        VB: ErrorMessageColors
      nameWithType:
        CSharp: ExceptionLogger.ErrorMessageColors
        VB: ExceptionLogger.ErrorMessageColors
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ErrorMessageColors
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 839
      summary: "\nSet this property to cause error messages to be displayed in a\ndistinctive pair of foreground and background colors.\n\nUnless the AppSubsystem property is Console or CUI, this property is\nmeaningless.\n\nUnlike other properties, ErrorMessageColors must be set directly,\nand it may be changed at any time.\n"
      remarks: "\nA hidden MessageInColor is maintained in tandem with this property,\nfor use with STDERR. In this way, messages written to either STDOUT\nor STDERR use the same color scheme.\n"
      example: []
      syntax:
        content:
          CSharp: public ErrorMessagesInColor ErrorMessageColors { get; set; }
          VB: Public Property ErrorMessageColors As ErrorMessagesInColor
        parameters: []
        return:
          type: WizardWrx.ConsoleStreams.ErrorMessagesInColor
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
      language: CSharp
      name:
        CSharp: OptionFlags
        VB: OptionFlags
      nameWithType:
        CSharp: ExceptionLogger.OptionFlags
        VB: ExceptionLogger.OptionFlags
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: OptionFlags
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 882
      summary: "\nGets or sets the new OutputOptions enumeration, which supersedes the\nobsolete individual flags.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions OptionFlags { get; set; }
          VB: Public Property OptionFlags As ExceptionLogger.OutputOptions
        parameters: []
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
      language: CSharp
      name:
        CSharp: StdErrIsRedirected
        VB: StdErrIsRedirected
      nameWithType:
        CSharp: ExceptionLogger.StdErrIsRedirected
        VB: ExceptionLogger.StdErrIsRedirected
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StdErrIsRedirected
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 905
      summary: "\nReturn TRUE if the Standard Error console stream was redirected by\nthe shell. Otherwise, the return value is FALSE.\n\nThis flag is meaningless unless the ApplicationSubsystem property\nvalue is equal to ProcessSubsystem.Console, indicating that the\ncalling process is running in the Windows Character Mode (CUI)\nsubsystem.\n"
      example: []
      syntax:
        content:
          CSharp: public bool StdErrIsRedirected { get; }
          VB: Public ReadOnly Property StdErrIsRedirected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
      language: CSharp
      name:
        CSharp: StdOutIsRedirected
        VB: StdOutIsRedirected
      nameWithType:
        CSharp: ExceptionLogger.StdOutIsRedirected
        VB: ExceptionLogger.StdOutIsRedirected
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StdOutIsRedirected
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 919
      summary: "\nReturn TRUE if the Standard Output console stream was redirected by\nthe shell. Otherwise, the return value is FALSE.\n\nThis flag is meaningless unless the ApplicationSubsystem property\nvalue is equal to ProcessSubsystem.Console, indicating that the\ncalling process is running in the Windows Character Mode (CUI)\nsubsystem.\n"
      example: []
      syntax:
        content:
          CSharp: public bool StdOutIsRedirected { get; }
          VB: Public ReadOnly Property StdOutIsRedirected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance
      language: CSharp
      name:
        CSharp: GetTheSingleInstance()
        VB: GetTheSingleInstance()
      nameWithType:
        CSharp: ExceptionLogger.GetTheSingleInstance()
        VB: ExceptionLogger.GetTheSingleInstance()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 948
      summary: "\nCall this static method from anywhere to get a reference to the\nExceptionLogger singleton.\n"
      remarks: "\nAll overloads call this method, caching the returned reference in a\nlocal variable, before they override one or more of its default\nproperty values. When all overrides have been processed, the cached\nreference is returned through the overload that took the call.\n\nThis roundabout procedure is necessary because the properties cannot\nbe set until the object has been created. The most straightforward\nway to do this is to call the default method, which performs a task\nusually performed by a default constructor in this implementation of\nthe singleton design pattern.\n"
      example: []
      syntax:
        content:
          CSharp: public static ExceptionLogger GetTheSingleInstance()
          VB: Public Shared Function GetTheSingleInstance As ExceptionLogger
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      language: CSharp
      name:
        CSharp: GetTheSingleInstance(ExceptionLogger.OutputOptions)
        VB: GetTheSingleInstance(ExceptionLogger.OutputOptions)
      nameWithType:
        CSharp: ExceptionLogger.GetTheSingleInstance(ExceptionLogger.OutputOptions)
        VB: ExceptionLogger.GetTheSingleInstance(ExceptionLogger.OutputOptions)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 973
      summary: "\nCall this static method from anywhere to get a reference to the\nExceptionLogger singleton and set its OptionFlags property.\n"
      example: []
      syntax:
        content:
          CSharp: public static ExceptionLogger GetTheSingleInstance(ExceptionLogger.OutputOptions penmOutputOptions)
          VB: Public Shared Function GetTheSingleInstance(penmOutputOptions As ExceptionLogger.OutputOptions) As ExceptionLogger
        parameters:
        - id: penmOutputOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe OutputOptions enumeration is organized for use as a bit mask.\nSet its flags as desired to control the format and content of output\ngenerated by the ReportException methods.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID,WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions,System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID,WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions,System.String)
      language: CSharp
      name:
        CSharp: GetTheSingleInstance(PESubsystemInfo.PESubsystemID, ExceptionLogger.OutputOptions, String)
        VB: GetTheSingleInstance(PESubsystemInfo.PESubsystemID, ExceptionLogger.OutputOptions, String)
      nameWithType:
        CSharp: ExceptionLogger.GetTheSingleInstance(PESubsystemInfo.PESubsystemID, ExceptionLogger.OutputOptions, String)
        VB: ExceptionLogger.GetTheSingleInstance(PESubsystemInfo.PESubsystemID, ExceptionLogger.OutputOptions, String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID, WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions, System.String)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID, WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions, System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1015
      summary: "\nCall this static method from anywhere to get a reference to the\nExceptionLogger singleton and set its ProcessSubsystem,\nOptionFlags, and AppEventSourceID properties.\n"
      remarks: "\nThis method looks entirely forward, which means that it doesn&apos;t\nbother with the obsolete properties.\n"
      example: []
      syntax:
        content:
          CSharp: public static ExceptionLogger GetTheSingleInstance(PESubsystemInfo.PESubsystemID penmProcessSubsystem, ExceptionLogger.OutputOptions penmOutputOptions, string pstrEventSourceID)
          VB: Public Shared Function GetTheSingleInstance(penmProcessSubsystem As PESubsystemInfo.PESubsystemID, penmOutputOptions As ExceptionLogger.OutputOptions, pstrEventSourceID As String) As ExceptionLogger
        parameters:
        - id: penmProcessSubsystem
          type: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
          description: "\nUse this member of the ProcessSubsystem enumeration to modify the\ndefault behavior of the exception logging methods, by enabling\nconsole output if the calling application has one.\n"
        - id: penmOutputOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe OutputOptions enumeration is organized for use as a bit mask.\nSet its flags as desired to control the format and content of output\ngenerated by the ReportException methods.\n"
        - id: pstrEventSourceID
          type: System.String
          description: "\nUse this string to override the default event source ID,  which is\nWIZARDWRX_EVENT_SOURCE_ID.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions,System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions,System.String)
      language: CSharp
      name:
        CSharp: GetTheSingleInstance(ExceptionLogger.OutputOptions, String)
        VB: GetTheSingleInstance(ExceptionLogger.OutputOptions, String)
      nameWithType:
        CSharp: ExceptionLogger.GetTheSingleInstance(ExceptionLogger.OutputOptions, String)
        VB: ExceptionLogger.GetTheSingleInstance(ExceptionLogger.OutputOptions, String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions, System.String)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions, System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1054
      summary: "\nCall this static method from anywhere to get a reference to the\nExceptionLogger singleton and set its ProcessSubsystem,\nOptionFlags, and AppEventSourceID properties.\n"
      remarks: "\nThis method looks entirely forward, which means that it doesn&apos;t\nbother with the obsolete properties.\n"
      example: []
      syntax:
        content:
          CSharp: public static ExceptionLogger GetTheSingleInstance(ExceptionLogger.OutputOptions penmOutputOptions, string pstrEventSourceID)
          VB: Public Shared Function GetTheSingleInstance(penmOutputOptions As ExceptionLogger.OutputOptions, pstrEventSourceID As String) As ExceptionLogger
        parameters:
        - id: penmOutputOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe OutputOptions enumeration is organized for use as a bit mask.\nSet its flags as desired to control the format and content of output\ngenerated by the ReportException methods.\n"
        - id: pstrEventSourceID
          type: System.String
          description: "\nUse this string to override the default event source ID,  which is\nWIZARDWRX_EVENT_SOURCE_ID.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID)
      language: CSharp
      name:
        CSharp: GetTheSingleInstance(PESubsystemInfo.PESubsystemID)
        VB: GetTheSingleInstance(PESubsystemInfo.PESubsystemID)
      nameWithType:
        CSharp: ExceptionLogger.GetTheSingleInstance(PESubsystemInfo.PESubsystemID)
        VB: ExceptionLogger.GetTheSingleInstance(PESubsystemInfo.PESubsystemID)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance(WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1084
      summary: "\nCall this static method from anywhere to get a reference to the\nExceptionLogger singleton and set its AppSubsystem\nproperty.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [Obsolete("Using the property on the StateManager instance makes this use case redundant.")]

            public static ExceptionLogger GetTheSingleInstance(PESubsystemInfo.PESubsystemID penmProcessSubsystem)
          VB: >-
            <Obsolete("Using the property on the StateManager instance makes this use case redundant.")>

            Public Shared Function GetTheSingleInstance(penmProcessSubsystem As PESubsystemInfo.PESubsystemID) As ExceptionLogger
        parameters:
        - id: penmProcessSubsystem
          type: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
          description: "\nUse this member of the ProcessSubsystem enumeration to modify the\ndefault behavior of the exception logging methods, by enabling\nconsole output if the calling application has one.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
      attributes:
      - type: System.ObsoleteAttribute
        ctor: System.ObsoleteAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Using the property on the StateManager instance makes this use case redundant.
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors(System.Boolean)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors(System.Boolean)
      language: CSharp
      name:
        CSharp: RestoreDefaultColors(Boolean)
        VB: RestoreDefaultColors(Boolean)
      nameWithType:
        CSharp: ExceptionLogger.RestoreDefaultColors(Boolean)
        VB: ExceptionLogger.RestoreDefaultColors(Boolean)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors(System.Boolean)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors(System.Boolean)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RestoreDefaultColors
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1129
      summary: "\nRestore the default exception message colors.\n"
      example: []
      syntax:
        content:
          CSharp: public ErrorMessagesInColor RestoreDefaultColors(bool pfWipeSavedColors)
          VB: Public Function RestoreDefaultColors(pfWipeSavedColors As Boolean) As ErrorMessagesInColor
        parameters:
        - id: pfWipeSavedColors
          type: System.Boolean
          description: "\nTo have the colors saved by the last call to SaveCurrentColors\ndiscarded, set this argument to TRUE. Otherwise, the saved colors\nare preserved.\n"
        return:
          type: WizardWrx.ConsoleStreams.ErrorMessagesInColor
          description: "\nThe return value is the reinstated default exception message colors,\nwhich may be NULL if the color scheme is invalid (both colors set to\nthe same value) or missing (no color scheme is configured).\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage
      language: CSharp
      name:
        CSharp: GetReservedErrorMessage()
        VB: GetReservedErrorMessage()
      nameWithType:
        CSharp: ExceptionLogger.GetReservedErrorMessage()
        VB: ExceptionLogger.GetReservedErrorMessage()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetReservedErrorMessage
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1152
      summary: "\nReturn a message suitable for display on a console to accompany a\nstatus code of ERROR_SUCCESS (zero) or ERROR_RUNTIME (one), both\ndefined in the MagicNumbers class of standard constant definitions.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetReservedErrorMessage()
          VB: Public Function GetReservedErrorMessage As String
        return:
          type: System.String
          description: "\nSince its operation is self contained, this method should always\nsucceed in returning an appropriate message.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage*
      seealso:
      - linkId: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
        commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        ? WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
        : 
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      language: CSharp
      name:
        CSharp: GetReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
        VB: GetReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
      nameWithType:
        CSharp: ExceptionLogger.GetReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
        VB: ExceptionLogger.GetReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetReservedErrorMessage
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1177
      summary: "\nReturn a message suitable for display on a console to accompany a\nstatus code of ERROR_SUCCESS (zero) or ERROR_RUNTIME (one), both\ndefined in the MagicNumbers class of standard constant definitions.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetReservedErrorMessage(ExceptionLogger.ErrorExitOptions penmErrorExitOptions)
          VB: Public Function GetReservedErrorMessage(penmErrorExitOptions As ExceptionLogger.ErrorExitOptions) As String
        parameters:
        - id: penmErrorExitOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
          description: "\nA member of the ErrorExitOptions specifies the desired action. This\nvalue overrides the corresponding bits in the OptionFlags bit mask.\n\nIf an invalid value is specified, the returned string is an error \nmessage that starts with &quot;An internal error has occurred.&quot; If this\nhappens, it should be treated as a coding error.\n"
        return:
          type: System.String
          description: "\nIf the function succeeds, the returned message is ready to use; \nappropriate substitutions have already been made. Otherwise, the\nreturn value is the error message described in the documentation\nof argument penmErrorExitOptions.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay(System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay(System.String)
      language: CSharp
      name:
        CSharp: OutputOptionsDisplay(String)
        VB: OutputOptionsDisplay(String)
      nameWithType:
        CSharp: ExceptionLogger.OutputOptionsDisplay(String)
        VB: ExceptionLogger.OutputOptionsDisplay(String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay(System.String)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay(System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: OutputOptionsDisplay
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1196
      summary: "\nReturn a labeled string representation of the current OptionFlags,\nalong with decimal and hexadecimal representations of the bit mask.\n"
      example: []
      syntax:
        content:
          CSharp: public string OutputOptionsDisplay(string pstrLabel)
          VB: Public Function OutputOptionsDisplay(pstrLabel As String) As String
        parameters:
        - id: pstrLabel
          type: System.String
          description: "\nSpecify a label to be inserted into the message. This may be the\nempty string, or even a null reference, to omit the label.\n"
        return:
          type: System.String
          description: "\nThe returned string is ready to display via Console.WriteLine or\nMessageBox.Show.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      language: CSharp
      name:
        CSharp: OutputOptionTurnOff(ExceptionLogger.OutputOptions)
        VB: OutputOptionTurnOff(ExceptionLogger.OutputOptions)
      nameWithType:
        CSharp: ExceptionLogger.OutputOptionTurnOff(ExceptionLogger.OutputOptions)
        VB: ExceptionLogger.OutputOptionTurnOff(ExceptionLogger.OutputOptions)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: OutputOptionTurnOff
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1222
      summary: "\nTurn the specified bit in the OutputOptions bit mask OFF.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions OutputOptionTurnOff(ExceptionLogger.OutputOptions penmOutputOptions)
          VB: Public Function OutputOptionTurnOff(penmOutputOptions As ExceptionLogger.OutputOptions) As ExceptionLogger.OutputOptions
        parameters:
        - id: penmOutputOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nSpecify the member of the OutputOptions enumerated type to turn OFF.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe return value is the updated OutputOptions enumerated type, which\nis organized as a bit mask.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      language: CSharp
      name:
        CSharp: OutputOptionTurnOn(ExceptionLogger.OutputOptions)
        VB: OutputOptionTurnOn(ExceptionLogger.OutputOptions)
      nameWithType:
        CSharp: ExceptionLogger.OutputOptionTurnOn(ExceptionLogger.OutputOptions)
        VB: ExceptionLogger.OutputOptionTurnOn(ExceptionLogger.OutputOptions)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn(WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: OutputOptionTurnOn
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1239
      summary: "\nTurn the specified bit in the OutputOptions bit mask ON.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions OutputOptionTurnOn(ExceptionLogger.OutputOptions penmOutputOptions)
          VB: Public Function OutputOptionTurnOn(penmOutputOptions As ExceptionLogger.OutputOptions) As ExceptionLogger.OutputOptions
        parameters:
        - id: penmOutputOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nSpecify the member of the OutputOptions enumerated type to turn ON.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe return value is the updated OutputOptions enumerated type, which\nis organized as a bit mask.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions
      language: CSharp
      name:
        CSharp: RestoreDefaultOptions()
        VB: RestoreDefaultOptions()
      nameWithType:
        CSharp: ExceptionLogger.RestoreDefaultOptions()
        VB: ExceptionLogger.RestoreDefaultOptions()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RestoreDefaultOptions
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1258
      summary: "\nRestore the state of the OutputOptions flags to their initial\n(default) values.\n"
      remarks: "\nThis routine calls the same static SetDefaultOptions method used by\nthe static initializer, so that the defaults can be changed by\nvisiting just one routine.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions RestoreDefaultOptions()
          VB: Public Function RestoreDefaultOptions As ExceptionLogger.OutputOptions
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe return value is the reinstated property value.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions
      language: CSharp
      name:
        CSharp: RestoreSavedOptions()
        VB: RestoreSavedOptions()
      nameWithType:
        CSharp: ExceptionLogger.RestoreSavedOptions()
        VB: ExceptionLogger.RestoreSavedOptions()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RestoreSavedOptions
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1278
      summary: "\nRestore the state of the OutputOptions flags from the copy saved by\nthe last SaveCurrentOptions method call.\n"
      remarks: "\nCAUTION: Unless this method is preceded by a call to\nSaveCurrentOptions, this call clears all flags, not just back to\ntheir initial state, but truly clear - all flags OFF.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions RestoreSavedOptions()
          VB: Public Function RestoreSavedOptions As ExceptionLogger.OutputOptions
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThis method returns the options that were just restored, so that\ncallers can sanity check them against the expected settings.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors
      language: CSharp
      name:
        CSharp: RestoreSavedColors()
        VB: RestoreSavedColors()
      nameWithType:
        CSharp: ExceptionLogger.RestoreSavedColors()
        VB: ExceptionLogger.RestoreSavedColors()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RestoreSavedColors
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1299
      summary: "\nRestore the ErrorMessageColors from the copy saved by the last\nSaveCurrentColors method call.\n"
      remarks: "\nCAUTION: Unless this method is preceded by a call to\nSaveCurrentColors, this call completely disables color error\nmessages, unless the static initializer set default colors from a\nconfiguration file.\n"
      example: []
      syntax:
        content:
          CSharp: public ErrorMessagesInColor RestoreSavedColors()
          VB: Public Function RestoreSavedColors As ErrorMessagesInColor
        return:
          type: WizardWrx.ConsoleStreams.ErrorMessagesInColor
          description: "\nThis method returns the restored message colors, so that callers may\nsanity check them against the expected values.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors
      language: CSharp
      name:
        CSharp: SaveCurrentColors()
        VB: SaveCurrentColors()
      nameWithType:
        CSharp: ExceptionLogger.SaveCurrentColors()
        VB: ExceptionLogger.SaveCurrentColors()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: SaveCurrentColors
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1313
      summary: "\nSave a copy of the current colors defined by the ErrorMessageColors\nproperty into a private area reserved for the purpose.\n"
      example: []
      syntax:
        content:
          CSharp: public ErrorMessagesInColor SaveCurrentColors()
          VB: Public Function SaveCurrentColors As ErrorMessagesInColor
        return:
          type: WizardWrx.ConsoleStreams.ErrorMessagesInColor
          description: "\nThe current settings (the settings just saved) are returned.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions
      language: CSharp
      name:
        CSharp: SaveCurrentOptions()
        VB: SaveCurrentOptions()
      nameWithType:
        CSharp: ExceptionLogger.SaveCurrentOptions()
        VB: ExceptionLogger.SaveCurrentOptions()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions()
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: SaveCurrentOptions
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1327
      summary: "\nSave a copy of the current state of the OutputOptions flags into a\nprivate area reserved for the purpose.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger.OutputOptions SaveCurrentOptions()
          VB: Public Function SaveCurrentOptions As ExceptionLogger.OutputOptions
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
          description: "\nThe current settings (the settings just saved) are returned.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      language: CSharp
      name:
        CSharp: GetSpecifiedReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
        VB: GetSpecifiedReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
      nameWithType:
        CSharp: ExceptionLogger.GetSpecifiedReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
        VB: ExceptionLogger.GetSpecifiedReservedErrorMessage(ExceptionLogger.ErrorExitOptions)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetSpecifiedReservedErrorMessage
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1360
      summary: "\nReturn a message suitable for display on a console to accompany a\nstatus code of ERROR_SUCCESS (zero) or ERROR_RUNTIME (one), both\ndefined in the MagicNumbers class of standard constant definitions.\n\nCall this method with penmErrorExitOptions equal to Succeeded to get\nthe ERROR_SUCCESS placeholder string for your error message table.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetSpecifiedReservedErrorMessage(ExceptionLogger.ErrorExitOptions penmErrorExitOptions)
          VB: Public Shared Function GetSpecifiedReservedErrorMessage(penmErrorExitOptions As ExceptionLogger.ErrorExitOptions) As String
        parameters:
        - id: penmErrorExitOptions
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
          description: "\nA member of the ErrorExitOptions specifies the desired action. Since\nthis is a static method, and doesn&apos;t have access to the instance\nproperties, this value substitutes for the corresponding bits in the\nOptionFlags bit mask.\n\nIf an invalid value is specified, the returned string is an error \nmessage that starts with &quot;An internal error has occurred.&quot; If this\nhappens, it should be treated as a coding error.\n"
        return:
          type: System.String
          description: "\nIf the function succeeds, the returned message is ready to use; \nappropriate substitutions have already been made. Otherwise, the\nreturn value is the error message described in the documentation\nof argument penmErrorExitOptions.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite(System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite(System.String)
      language: CSharp
      name:
        CSharp: TimeStampedTraceWrite(String)
        VB: TimeStampedTraceWrite(String)
      nameWithType:
        CSharp: ExceptionLogger.TimeStampedTraceWrite(String)
        VB: ExceptionLogger.TimeStampedTraceWrite(String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite(System.String)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite(System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: TimeStampedTraceWrite
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1395
      summary: "\nAppend a message to a standard ISO-8601 time stamp.\n"
      remarks: "\nThough written ostensibly for internal use, I marked this method as\npublic because it will quickly find employment outside this library.\n"
      example: []
      syntax:
        content:
          CSharp: public static void TimeStampedTraceWrite(string pstrMessage)
          VB: Public Shared Sub TimeStampedTraceWrite(pstrMessage As String)
        parameters:
        - id: pstrMessage
          type: System.String
          description: "\nSpecify the message to record.\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.Exception)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.Exception)
      language: CSharp
      name:
        CSharp: ReportException(Exception)
        VB: ReportException(Exception)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(Exception)
        VB: ExceptionLogger.ReportException(Exception)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.Exception)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.Exception)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1437
      summary: "\nFormat and report the properties of a generic Exception on a console\nin a thread-safe manner.\n"
      remarks: "\nThis can be ANY exception type, although the intent is to limit its\nuse to reporting exceptions thrown by the base class,\nSystem.Exception.\n\nOther overloads exist for reporting exceptions thrown by types\nderived from System.Exception.\n\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(Exception perrAny)
          VB: Public Function ReportException(perrAny As Exception) As String
        parameters:
        - id: perrAny
          type: System.Exception
          description: "\nThe instance of the base Exception class to process. See Remarks.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentException)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentException)
      language: CSharp
      name:
        CSharp: ReportException(ArgumentException)
        VB: ReportException(ArgumentException)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(ArgumentException)
        VB: ExceptionLogger.ReportException(ArgumentException)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentException)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentException)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1490
      summary: "\nFormat and report the properties of an ArgumentException exception on\na console in a thread-safe manner.\n"
      remarks: "\nAlthough this method can process objects of ANY class which derives\nfrom ArgumentException, other methods of this class specialize in\nprocessing objects of the commonly used ArgumentOutOfRangeException\nand ArgumentNullException derived classes.\n\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(ArgumentException perrBadArg)
          VB: Public Function ReportException(perrBadArg As ArgumentException) As String
        parameters:
        - id: perrBadArg
          type: System.ArgumentException
          description: "\nThe instance of the ArgumentException exception to process. See\nRemarks.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentOutOfRangeException)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentOutOfRangeException)
      language: CSharp
      name:
        CSharp: ReportException(ArgumentOutOfRangeException)
        VB: ReportException(ArgumentOutOfRangeException)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(ArgumentOutOfRangeException)
        VB: ExceptionLogger.ReportException(ArgumentOutOfRangeException)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentOutOfRangeException)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentOutOfRangeException)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1547
      summary: "\nFormat and report the properties of an ArgumentOutOfRangeException\nexception on a console in a thread-safe manner.\n"
      remarks: "\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(ArgumentOutOfRangeException perrBadArg)
          VB: Public Function ReportException(perrBadArg As ArgumentOutOfRangeException) As String
        parameters:
        - id: perrBadArg
          type: System.ArgumentOutOfRangeException
          description: "\nThe instance of the ArgumentOutOfRangeException class to process.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentNullException)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentNullException)
      language: CSharp
      name:
        CSharp: ReportException(ArgumentNullException)
        VB: ReportException(ArgumentNullException)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(ArgumentNullException)
        VB: ExceptionLogger.ReportException(ArgumentNullException)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentNullException)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ArgumentNullException)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1612
      summary: "\nFormat and report the properties of an ArgumentNullException\nexception on a console in a thread-safe manner. See Remarks.\n"
      remarks: "\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(ArgumentNullException perrNullArg)
          VB: Public Function ReportException(perrNullArg As ArgumentNullException) As String
        parameters:
        - id: perrNullArg
          type: System.ArgumentNullException
          description: "\nThe instance of an ArgumentNullException exception to process.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ObjectDisposedException)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ObjectDisposedException)
      language: CSharp
      name:
        CSharp: ReportException(ObjectDisposedException)
        VB: ReportException(ObjectDisposedException)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(ObjectDisposedException)
        VB: ExceptionLogger.ReportException(ObjectDisposedException)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ObjectDisposedException)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.ObjectDisposedException)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1675
      summary: "\nFormat and report the properties of an ObjectDisposedException\nexception on a console in a thread-safe manner. See Remarks.\n"
      remarks: "\nAny process that throws an ObjectDisposedException exception is in\nserious trouble, and deserves to crash, and be investigated, because\nthis type of exception is almost invariably caused by a programming\nlogic error.\n\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(ObjectDisposedException perrDisposed)
          VB: Public Function ReportException(perrDisposed As ObjectDisposedException) As String
        parameters:
        - id: perrDisposed
          type: System.ObjectDisposedException
          description: "\nThe instance of the ObjectDisposedException Exception class to\nprocess.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.IO.IOException,System.IO.FileInfo)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.IO.IOException,System.IO.FileInfo)
      language: CSharp
      name:
        CSharp: ReportException(IOException, FileInfo)
        VB: ReportException(IOException, FileInfo)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(IOException, FileInfo)
        VB: ExceptionLogger.ReportException(IOException, FileInfo)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.IO.IOException, System.IO.FileInfo)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.IO.IOException, System.IO.FileInfo)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1740
      summary: "\nFormat and report the properties of an IOException exception on a\nconsole in a thread-safe manner.\n"
      remarks: "\nThis routine processes ANY exception of the IOException class and\nits derivatives. Methods for parsing published derived classes are\nsomewhere on my ToDo list.\n\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(IOException perrIOError, FileInfo pfi)
          VB: Public Function ReportException(perrIOError As IOException, pfi As FileInfo) As String
        parameters:
        - id: perrIOError
          type: System.IO.IOException
          description: "\nThe instance of the IOException class to process. See Remarks.\n"
        - id: pfi
          type: System.IO.FileInfo
          description: "\nThe FileInfo object makes available much more than the file name,\nallowing for the possibility of an override to deliver more detailed\ninformation about the file being processed.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.FormatException,System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.FormatException,System.String)
      language: CSharp
      name:
        CSharp: ReportException(FormatException, String)
        VB: ReportException(FormatException, String)
      nameWithType:
        CSharp: ExceptionLogger.ReportException(FormatException, String)
        VB: ExceptionLogger.ReportException(FormatException, String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.FormatException, System.String)
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException(System.FormatException, System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReportException
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1819
      summary: "\nFormat and report the properties of an FormatException exception on\na console in a thread-safe manner.\n"
      remarks: "\nThe TargetSite property, exposed by descendants of System.Exception,\nis the name of the method in which the exception was thrown.\n"
      example: []
      syntax:
        content:
          CSharp: public string ReportException(FormatException perrrBadFormat, string pstrFormatString)
          VB: Public Function ReportException(perrrBadFormat As FormatException, pstrFormatString As String) As String
        parameters:
        - id: perrrBadFormat
          type: System.FormatException
          description: "\nThe instance of the FormatException class to process.\n"
        - id: pstrFormatString
          type: System.String
          description: "\nThis should be the format string which caused the exception. There\nshould be a way to feed this to the exception, or recover it, but I\nhave yet to find it.\n"
        return:
          type: System.String
          description: "\nThe return value is the string that was written onto the standard\nerror or standard output stream (or both, depending on the flags).\n\nNOTE: The returned string is terminated by a single newline. Since\nit is appended to the stream by a Console.Write, the carriage is\nreturned to the next line, but no additional line feeds follow.\nHence, if you want your error message to be followed by a blank\nline, you must follow this call with an empty Console.WriteLine\nor, \n"
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
      commentId: P:WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
      language: CSharp
      name:
        CSharp: s_strSettingsOmittedFromConfigFile
        VB: s_strSettingsOmittedFromConfigFile
      nameWithType:
        CSharp: ExceptionLogger.s_strSettingsOmittedFromConfigFile
        VB: ExceptionLogger.s_strSettingsOmittedFromConfigFile
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: s_strSettingsOmittedFromConfigFile
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 1863
      summary: "\nOnce an instance has spring into being, this static property returns\nthe configuration values that are missing a setting in the\nconfiguration file.\n"
      example: []
      syntax:
        content:
          CSharp: public static string s_strSettingsOmittedFromConfigFile { get; }
          VB: Public Shared ReadOnly Property s_strSettingsOmittedFromConfigFile As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    references:
      WizardWrx.Core.PropertyDefaults: 
  - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
    language: CSharp
    name:
      CSharp: ExceptionLogger.OutputOptions
      VB: ExceptionLogger.OutputOptions
    nameWithType:
      CSharp: ExceptionLogger.OutputOptions
      VB: ExceptionLogger.OutputOptions
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
    type: Enum
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: OutputOptions
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
      startLine: 430
    summary: "\nUse these flags to control the output. There is no flag for the\nMessage property, which always becomes part of the message.\n"
    remarks: "\nDiscardNewlines and NBSpaceForNewlines arose to resolve an issue\nthat came to light when a desire arose to reconstruct an exception\nreport from the message posted into a Microsoft Excel workbook that\nwas populated from the output of a run of PsLogList.exe. To cause it\nto keep each message on a single logical line, so that it would\nimport into a single worksheet row,  PsLogList.exe is invoked with\nits -s switch, causing PsLogList to print (output) Event Log records\none-per-line, with comma delimited fields.\n\nTo preserve the newlines in the event log file and have some\nindication of their original positions when PsLogList strips\nthem, set the NBSpaceForNewlines flag to TRUE. This causes each\nembedded newline to be preceded in the output by a NOLBREAKING_SPACE\n(ASCII character code 160, A0h, Unicode code point U+0A0) character.\n\nTo substitute a NOLBREAKING_SPACE for each newline, set this flag\nAND DiscardNewlines to TRUE.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum OutputOptions : byte
        VB: >-
          <Flags>

          Public Enum OutputOptions As Byte
    seealso:
    - linkId: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
    extensionMethods:
    - WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NoFlags
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NoFlags
      language: CSharp
      name:
        CSharp: NoFlags
        VB: NoFlags
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.NoFlags
        VB: ExceptionLogger.OutputOptions.NoFlags
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NoFlags
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NoFlags
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: NoFlags
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 436
      summary: "\nUse this member to evaluate whether all flags are OFF.\n"
      example: []
      syntax:
        content:
          CSharp: NoFlags = 0
          VB: NoFlags = 0
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Method
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Method
      language: CSharp
      name:
        CSharp: Method
        VB: Method
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.Method
        VB: ExceptionLogger.OutputOptions.Method
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Method
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Method
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Method
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 444
      summary: "\nShow Method Name if TRUE.\n\nIf the EventLog flag is also set, the method name is always\nwritten there.\n"
      example: []
      syntax:
        content:
          CSharp: Method = 1
          VB: Method = 1
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Source
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Source
      language: CSharp
      name:
        CSharp: Source
        VB: Source
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.Source
        VB: ExceptionLogger.OutputOptions.Source
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Source
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Source
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Source
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 452
      summary: "\nShow Source (Assembly) Name if TRUE.\n\nIf the EventLog flag is also set, the originating assembly name\nis always written there.\n"
      example: []
      syntax:
        content:
          CSharp: Source = 2
          VB: Source = 2
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Stack
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Stack
      language: CSharp
      name:
        CSharp: Stack
        VB: Stack
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.Stack
        VB: ExceptionLogger.OutputOptions.Stack
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Stack
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.Stack
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Stack
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 460
      summary: "\nShow Stack Trace if TRUE.\n\nIf the EventLog flag is also set, the stack trace is always\nwritten there.\n"
      example: []
      syntax:
        content:
          CSharp: Stack = 4
          VB: Stack = 4
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.EventLog
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.EventLog
      language: CSharp
      name:
        CSharp: EventLog
        VB: EventLog
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.EventLog
        VB: ExceptionLogger.OutputOptions.EventLog
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.EventLog
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.EventLog
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: EventLog
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 481
      summary: "\nPost to associated event log if TRUE.\n\nThe value of the event source associated with the current\nExceptionLogger instance determines which event log gets the\nmessage.\n\nWARNING: Unless your event source string is already registered,\nthe application MUST run, one time only, with full administrator\nprivileges AND use the event source to write a message into the\nWindows event log in order for it to be registered with Windows,\nwhich maps it to an event log. Alternatively, you may register\nthe event source by any number of other means, such as by way of\nan installation script.\n\nOnce the event source string is registered, the application can\nuse it to post messages to the event log in any Windows security\ncontext.\n"
      example: []
      syntax:
        content:
          CSharp: EventLog = 8
          VB: EventLog = 8
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardOutput
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardOutput
      language: CSharp
      name:
        CSharp: StandardOutput
        VB: StandardOutput
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.StandardOutput
        VB: ExceptionLogger.OutputOptions.StandardOutput
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardOutput
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardOutput
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StandardOutput
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 496
      summary: "\nWrite message on STDOUT if TRUE and if the application has a\nworking console.\n\nThe setting of this flag also governs the behavior of the\nScrollUp method.\n\nCAUTION: Although it is technically legal to set both\nStandardOutput and StandardError to TRUE, this can have the\nunwanted consequence of generating TWO copies of the message,\nunless STDOUT and/or STDERR is directed to a file or if both are\nredirected to the SAME file.\n"
      example: []
      syntax:
        content:
          CSharp: StandardOutput = 16
          VB: StandardOutput = 16
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardError
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardError
      language: CSharp
      name:
        CSharp: StandardError
        VB: StandardError
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.StandardError
        VB: ExceptionLogger.OutputOptions.StandardError
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardError
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.StandardError
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StandardError
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 511
      summary: "\nWrite message on STDERR if TRUE and if the application has a\nworking console.\n\nThe setting of this flag also governs the behavior of the\nScrollUp method.\n\nCAUTION: Although it is technically legal to set both\nStandardOutput and StandardError to TRUE, this can have the\nunwanted consequence of generating TWO copies of the message,\nunless STDOUT and/or STDERR is directed to a file or if both are\nredirected to the SAME file.\n"
      example: []
      syntax:
        content:
          CSharp: StandardError = 32
          VB: StandardError = 32
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.DiscardNewlines
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.DiscardNewlines
      language: CSharp
      name:
        CSharp: DiscardNewlines
        VB: DiscardNewlines
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.DiscardNewlines
        VB: ExceptionLogger.OutputOptions.DiscardNewlines
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.DiscardNewlines
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.DiscardNewlines
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: DiscardNewlines
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 521
      summary: "\nDiscard newlines entirely, unless NBSpaceForNewlines is also\ntrue, in which case each newline is retained, preceded by a\nNOLBREAKING_SPACE (ASCII character code 160, A0h, U+0A0) \ncharacter.\n\nPlease see the Remarks on the enumeration for important details.\n"
      example: []
      syntax:
        content:
          CSharp: DiscardNewlines = 64
          VB: DiscardNewlines = 64
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NBSpaceForNewlines
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NBSpaceForNewlines
      language: CSharp
      name:
        CSharp: NBSpaceForNewlines
        VB: NBSpaceForNewlines
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.NBSpaceForNewlines
        VB: ExceptionLogger.OutputOptions.NBSpaceForNewlines
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NBSpaceForNewlines
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.NBSpaceForNewlines
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: NBSpaceForNewlines
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 531
      summary: "\nPrecede each newline with a NOLBREAKING_SPACE (ASCII character \ncode 160, A0h, Unicode code point U+0A0) character, unless\nDiscardNewlines is also true, in which case a NOLBREAKING_SPACE\nprecedes the newline, which is preserved.\n\nPlease see the Remarks on the enumeration for important details.\n"
      example: []
      syntax:
        content:
          CSharp: NBSpaceForNewlines = 128
          VB: NBSpaceForNewlines = 128
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ReplaceNewlines
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ReplaceNewlines
      language: CSharp
      name:
        CSharp: ReplaceNewlines
        VB: ReplaceNewlines
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ReplaceNewlines
        VB: ExceptionLogger.OutputOptions.ReplaceNewlines
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ReplaceNewlines
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ReplaceNewlines
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ReplaceNewlines
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 543
      summary: "\nDeploy this flag combination to substitute a NOLBREAKING_SPACE\n(ASCII character code 160, A0h, Unicode code point U+0A0) for\nevery platform-dependent newline. On a Windows platform, the\noutcome is a slightly shorter message string, since each space\nreplaces two characters. In all cases, the NOLBREAKING_SPACE\nguarantees that each event record occupies one line when output\nas text, while providing a means of restoring the newlines by\nreversing the replacement.\n"
      example: []
      syntax:
        content:
          CSharp: ReplaceNewlines = 192
          VB: ReplaceNewlines = 192
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActiveProperties
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActiveProperties
      language: CSharp
      name:
        CSharp: ActiveProperties
        VB: ActiveProperties
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ActiveProperties
        VB: ExceptionLogger.OutputOptions.ActiveProperties
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActiveProperties
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActiveProperties
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ActiveProperties
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 551
      summary: "\nUse this bit mask to include all auxiliary properties of the\nException (StackTrace, TargetSite, Source, DiscardNewlines, and\nNBSpaceForNewlines) in the report, or to strip them form a set\nof flags.\n"
      example: []
      syntax:
        content:
          CSharp: ActiveProperties = 199
          VB: ActiveProperties = 199
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToEventLog
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToEventLog
      language: CSharp
      name:
        CSharp: ActivePropsToEventLog
        VB: ActivePropsToEventLog
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ActivePropsToEventLog
        VB: ExceptionLogger.OutputOptions.ActivePropsToEventLog
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToEventLog
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToEventLog
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ActivePropsToEventLog
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 558
      summary: "\nUse this bit mask to include all auxiliary properties of the\nException (StackTrace, TargetSite, and Source) in the report,\nand to send the report to a Windows event log.\n"
      example: []
      syntax:
        content:
          CSharp: ActivePropsToEventLog = 207
          VB: ActivePropsToEventLog = 207
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdErr
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdErr
      language: CSharp
      name:
        CSharp: ActivePropsToStdErr
        VB: ActivePropsToStdErr
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ActivePropsToStdErr
        VB: ExceptionLogger.OutputOptions.ActivePropsToStdErr
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdErr
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdErr
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ActivePropsToStdErr
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 565
      summary: "\nUse this bit mask to include all auxiliary properties of the\nException (StackTrace, TargetSite, and Source) in the report,\nand to send the report to the standard error stream.\n"
      example: []
      syntax:
        content:
          CSharp: ActivePropsToStdErr = 231
          VB: ActivePropsToStdErr = 231
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdOut
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdOut
      language: CSharp
      name:
        CSharp: ActivePropsToStdOut
        VB: ActivePropsToStdOut
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ActivePropsToStdOut
        VB: ExceptionLogger.OutputOptions.ActivePropsToStdOut
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdOut
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsToStdOut
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ActivePropsToStdOut
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 572
      summary: "\nUse this bit mask to include all auxiliary properties of the\nException (StackTrace, TargetSite, and Source) in the report,\nand to send the report to the standard output stream.\n"
      example: []
      syntax:
        content:
          CSharp: ActivePropsToStdOut = 215
          VB: ActivePropsToStdOut = 215
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsEverywhere
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsEverywhere
      language: CSharp
      name:
        CSharp: ActivePropsEverywhere
        VB: ActivePropsEverywhere
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.ActivePropsEverywhere
        VB: ExceptionLogger.OutputOptions.ActivePropsEverywhere
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsEverywhere
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.ActivePropsEverywhere
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ActivePropsEverywhere
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 583
      summary: "\nUse this bit mask to include all auxiliary properties of the\nException (StackTrace, TargetSite, and Source) in the report,\nand to send the report to a Windows event log and both the\nstandard output and standard error streams. This is useful when\nyou know that the standard output is redirected, and you want to\npreserve the report in the output file, in addition to having a\ncopy displayed on the console.\n"
      example: []
      syntax:
        content:
          CSharp: ActivePropsEverywhere = 255
          VB: ActivePropsEverywhere = 255
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllProperties
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllProperties
      language: CSharp
      name:
        CSharp: AllProperties
        VB: AllProperties
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.AllProperties
        VB: ExceptionLogger.OutputOptions.AllProperties
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllProperties
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllProperties
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AllProperties
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 591
      summary: "\nUse this flag to include all auxiliary properties of the \nException (StackTrace, TargetSite, Source, DiscardNewlines, and\nNBSpaceForNewlines) in the report, or to strip them form a set\nof flags.\n"
      example: []
      syntax:
        content:
          CSharp: AllProperties = 255
          VB: AllProperties = 255
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllDestiations
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllDestiations
      language: CSharp
      name:
        CSharp: AllDestiations
        VB: AllDestiations
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.AllDestiations
        VB: ExceptionLogger.OutputOptions.AllDestiations
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllDestiations
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllDestiations
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AllDestiations
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 597
      summary: "\nUse this flag to include all destinations for output, or as a\nmask to strip them from a set of flags.\n"
      example: []
      syntax:
        content:
          CSharp: AllDestiations = 56
          VB: AllDestiations = 56
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllFlags
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllFlags
      language: CSharp
      name:
        CSharp: AllFlags
        VB: AllFlags
      nameWithType:
        CSharp: ExceptionLogger.OutputOptions.AllFlags
        VB: ExceptionLogger.OutputOptions.AllFlags
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllFlags
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.AllFlags
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AllFlags
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 605
      summary: "\nThis flag turns on everything, and is of no practical use, but\nis defined for reference, to document that every bit in the byte\nis accounted for. Now that all bits have assignments, this flag\nand AllProperties resolve to the same value.\n"
      example: []
      syntax:
        content:
          CSharp: AllFlags = 255
          VB: AllFlags = 255
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions: 
  - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
    language: CSharp
    name:
      CSharp: ExceptionLogger.ErrorExitOptions
      VB: ExceptionLogger.ErrorExitOptions
    nameWithType:
      CSharp: ExceptionLogger.ErrorExitOptions
      VB: ExceptionLogger.ErrorExitOptions
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
    type: Enum
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: ErrorExitOptions
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
      startLine: 623
    summary: "\nUse with the static GetSpecifiedReservedErrorMessage method or with\nthe overloaded instance GetReservedErrorMessage method that allows\ncallers to override the behavior dictated by its properties.\n"
    remarks: "\nThe correspondence between the naming and numbering of the members\nof this enumeration is by design, since the two work hand in hand\ninternally, and the consistency should simplify writing calls to the\nGetReservedErrorMessage methods.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum ErrorExitOptions : byte
        VB: >-
          <Flags>

          Public Enum ErrorExitOptions As Byte
    see:
    - linkId: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
    - linkId: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
    seealso:
    - linkId: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
    extensionMethods:
    - WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.Succeeded
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.Succeeded
      language: CSharp
      name:
        CSharp: Succeeded
        VB: Succeeded
      nameWithType:
        CSharp: ExceptionLogger.ErrorExitOptions.Succeeded
        VB: ExceptionLogger.ErrorExitOptions.Succeeded
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.Succeeded
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.Succeeded
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Succeeded
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 630
      summary: "\nExecution succeeded; return the ERROR_SUCCESS placeholder for\nthe table of error messages.\n"
      example: []
      syntax:
        content:
          CSharp: Succeeded = 0
          VB: Succeeded = 0
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInEventLog
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInEventLog
      language: CSharp
      name:
        CSharp: RecordedInEventLog
        VB: RecordedInEventLog
      nameWithType:
        CSharp: ExceptionLogger.ErrorExitOptions.RecordedInEventLog
        VB: ExceptionLogger.ErrorExitOptions.RecordedInEventLog
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInEventLog
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInEventLog
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RecordedInEventLog
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 636
      summary: "\nDetails of the run-time exception were reported in a Windows\nEvent Log.\n"
      example: []
      syntax:
        content:
          CSharp: RecordedInEventLog = 8
          VB: RecordedInEventLog = 8
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
      language: CSharp
      name:
        CSharp: RecordedInStandardOutput
        VB: RecordedInStandardOutput
      nameWithType:
        CSharp: ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
        VB: ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardOutput
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RecordedInStandardOutput
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 642
      summary: "\nDetails of the run-time exception were listed on STDOUT if the\napplication has a working console.\n"
      example: []
      syntax:
        content:
          CSharp: RecordedInStandardOutput = 16
          VB: RecordedInStandardOutput = 16
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardError
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardError
      language: CSharp
      name:
        CSharp: RecordedInStandardError
        VB: RecordedInStandardError
      nameWithType:
        CSharp: ExceptionLogger.ErrorExitOptions.RecordedInStandardError
        VB: ExceptionLogger.ErrorExitOptions.RecordedInStandardError
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardError
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.RecordedInStandardError
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: RecordedInStandardError
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 648
      summary: "\nDetails of the run-time exception were listed on STDERR if the\napplication has a working console.\n"
      example: []
      syntax:
        content:
          CSharp: RecordedInStandardError = 32
          VB: RecordedInStandardError = 32
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      ? WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      : 
      WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions: 
  - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
    language: CSharp
    name:
      CSharp: ExceptionLogger.ScrollUpResult
      VB: ExceptionLogger.ScrollUpResult
    nameWithType:
      CSharp: ExceptionLogger.ScrollUpResult
      VB: ExceptionLogger.ScrollUpResult
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
    type: Enum
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: ScrollUpResult
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
      startLine: 656
    summary: "\nAs a convenience, the ScrollUp method reports the result through a\nbit-mapped enumeration.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum ScrollUpResult
        VB: >-
          <Flags>

          Public Enum ScrollUpResult
    extensionMethods:
    - WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.NoAction
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.NoAction
      language: CSharp
      name:
        CSharp: NoAction
        VB: NoAction
      nameWithType:
        CSharp: ExceptionLogger.ScrollUpResult.NoAction
        VB: ExceptionLogger.ScrollUpResult.NoAction
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.NoAction
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.NoAction
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: NoAction
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 664
      summary: "\nNothing happened, most likely because the calling process runs\nin the Windows (graphical) User Interface subsystem, which is\nunsupported, though not treated as an outright failure.\n"
      example: []
      syntax:
        content:
          CSharp: NoAction = 0
          VB: NoAction = 0
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardError
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardError
      language: CSharp
      name:
        CSharp: StandardError
        VB: StandardError
      nameWithType:
        CSharp: ExceptionLogger.ScrollUpResult.StandardError
        VB: ExceptionLogger.ScrollUpResult.StandardError
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardError
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardError
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StandardError
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 669
      summary: "\nThe standard error console stream was scrolled up one line.\n"
      example: []
      syntax:
        content:
          CSharp: StandardError = 1
          VB: StandardError = 1
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardOutput
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardOutput
      language: CSharp
      name:
        CSharp: StandardOutput
        VB: StandardOutput
      nameWithType:
        CSharp: ExceptionLogger.ScrollUpResult.StandardOutput
        VB: ExceptionLogger.ScrollUpResult.StandardOutput
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardOutput
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.StandardOutput
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StandardOutput
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 674
      summary: "\nThe standard output console stream was scrolled up one line.\n"
      example: []
      syntax:
        content:
          CSharp: StandardOutput = 2
          VB: StandardOutput = 2
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.Both
      commentId: F:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.Both
      language: CSharp
      name:
        CSharp: Both
        VB: Both
      nameWithType:
        CSharp: ExceptionLogger.ScrollUpResult.Both
        VB: ExceptionLogger.ScrollUpResult.Both
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.Both
        VB: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.Both
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Both
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\ExceptionLogger.cs
        startLine: 681
      summary: "\nBoth console streams were scrolled up one line, which happens\nonly when the standard output stream is redirected AND messages\nare being reported on both streams.\n"
      example: []
      syntax:
        content:
          CSharp: Both = 3
          VB: Both = 3
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: WizardWrx.DLLConfigurationManager.IniFileReader
    commentId: T:WizardWrx.DLLConfigurationManager.IniFileReader
    language: CSharp
    name:
      CSharp: IniFileReader
      VB: IniFileReader
    nameWithType:
      CSharp: IniFileReader
      VB: IniFileReader
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.IniFileReader
      VB: WizardWrx.DLLConfigurationManager.IniFileReader
    type: Class
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: IniFileReader
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
      startLine: 91
    summary: "\nProvide a managed interface to GetPrivateProfileString in the Windows\nAPI, with methods to retrieve the values of individual keys and lists of\nthe keys in a section or the sections in a file.\n"
    example: []
    syntax:
      content:
        CSharp: public class IniFileReader
        VB: Public Class IniFileReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: WizardWrx.DLLConfigurationManager.IniFileReader.path
      commentId: F:WizardWrx.DLLConfigurationManager.IniFileReader.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: IniFileReader.path
        VB: IniFileReader.path
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.IniFileReader.path
        VB: WizardWrx.DLLConfigurationManager.IniFileReader.path
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: path
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
        startLine: 152
      summary: "\nThis string holds the fully qualified name of the private profile\nfile to process, which is passed into the constructor, but can be\nchanged as needed.\n"
      example: []
      syntax:
        content:
          CSharp: public string path
          VB: Public path As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.IniFileReader.#ctor(System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.IniFileReader.#ctor(System.String)
      language: CSharp
      name:
        CSharp: IniFileReader(String)
        VB: IniFileReader(String)
      nameWithType:
        CSharp: IniFileReader.IniFileReader(String)
        VB: IniFileReader.IniFileReader(String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.IniFileReader.IniFileReader(System.String)
        VB: WizardWrx.DLLConfigurationManager.IniFileReader.IniFileReader(System.String)
      type: Constructor
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: .ctor
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
        startLine: 161
      summary: "\nConstruct an instance of the class.\n"
      example: []
      syntax:
        content:
          CSharp: public IniFileReader(string INIPath)
          VB: Public Sub New(INIPath As String)
        parameters:
        - id: INIPath
          type: System.String
          description: "\nThis string must be the fully qualified name of a well formed\nprivate profile (INI) file.\n"
      overload: WizardWrx.DLLConfigurationManager.IniFileReader.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames
      commentId: M:WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames
      language: CSharp
      name:
        CSharp: GetSectionNames()
        VB: GetSectionNames()
      nameWithType:
        CSharp: IniFileReader.GetSectionNames()
        VB: IniFileReader.GetSectionNames()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames()
        VB: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetSectionNames
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
        startLine: 175
      summary: "\nThe Function called to obtain the SectionHeaders, and returns them\nin an Dynamic Array\n"
      example: []
      syntax:
        content:
          CSharp: public string[] GetSectionNames()
          VB: Public Function GetSectionNames As String()
        return:
          type: System.String[]
          description: "\nThe return value is an array of strings, each of which is the name\nof a section.\n"
      overload: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames(System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames(System.String)
      language: CSharp
      name:
        CSharp: GetEntryNames(String)
        VB: GetEntryNames(String)
      nameWithType:
        CSharp: IniFileReader.GetEntryNames(String)
        VB: IniFileReader.GetEntryNames(String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames(System.String)
        VB: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames(System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetEntryNames
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
        startLine: 220
      summary: "\nThe Function called to obtain the EntryKeys from the given\nSectionHeader string passed, and returns them in an Dynamic Array\n"
      example: []
      syntax:
        content:
          CSharp: public string[] GetEntryNames(string section)
          VB: Public Function GetEntryNames(section As String) As String()
        parameters:
        - id: section
          type: System.String
          description: "\nThis string must be the name of a section which is expected to be\npresent, though possibly empty.\n"
        return:
          type: System.String[]
          description: "\nThe return value is an array of strings, each of which is the name\nof a key (entry) in the specified section.\n"
      overload: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue(System.String,System.String)
      commentId: M:WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetEntryValue(String, String)
        VB: GetEntryValue(String, String)
      nameWithType:
        CSharp: IniFileReader.GetEntryValue(String, String)
        VB: IniFileReader.GetEntryValue(String, String)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue(System.String, System.String)
        VB: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue(System.String, System.String)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetEntryValue
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\IniFileReader.cs
        startLine: 269
      summary: "\nThe Function called to obtain the EntryKey Value from the given\nSectionHeader and EntryKey string passed, then returned\n"
      example: []
      syntax:
        content:
          CSharp: public string GetEntryValue(string section, string entry)
          VB: Public Function GetEntryValue(section As String, entry As String) As String
        parameters:
        - id: section
          type: System.String
          description: "\nThis string must be the name of a section that is expected to exist.\n"
        - id: entry
          type: System.String
          description: "\nThis string must be the name of a key (entry) that is expected to\nexist, though it might be empty.\n"
        return:
          type: System.String
          description: "\nThe return value is a string, which may be empty.\n"
      overload: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: WizardWrx.DLLConfigurationManager.StateManager
    commentId: T:WizardWrx.DLLConfigurationManager.StateManager
    language: CSharp
    name:
      CSharp: StateManager
      VB: StateManager
    nameWithType:
      CSharp: StateManager
      VB: StateManager
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.StateManager
      VB: WizardWrx.DLLConfigurationManager.StateManager
    type: Class
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: StateManager
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
      startLine: 280
    summary: "\nThis class maintains run-time information about the executing assembly,\nassumed to be a desktop application, that calls it into being. Since it\nimplements the Singleton design pattern, there is never more than one\ninstance.\n"
    remarks: "\nThis class has several read-write properties, all of which are protected\nby thread-safe accessors. Both the Get and Set methods are protected, so\nthat a get request blocks until a set request executing in another thread\ncompletes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateManager : GenericSingletonBase<StateManager>'
        VB: >-
          Public Class StateManager

              Inherits GenericSingletonBase(Of StateManager)
    inheritance:
    - System.Object
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}
    inheritedMembers:
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.s_genTheOnlyInstance
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.TheOnlyInstance
    - WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.GetTheSingleInstance
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_COMPLETE
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_COMPLETE
      language: CSharp
      name:
        CSharp: ASSEMBLYVERSION_COMPLETE
        VB: ASSEMBLYVERSION_COMPLETE
      nameWithType:
        CSharp: StateManager.ASSEMBLYVERSION_COMPLETE
        VB: StateManager.ASSEMBLYVERSION_COMPLETE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_COMPLETE
        VB: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_COMPLETE
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ASSEMBLYVERSION_COMPLETE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 288
      summary: "\nSpecify this constant to the ToString method of a System.Version\nobject (e. g., of an Assembly) to cause it to return the entire\nversion string.\n"
      example: []
      syntax:
        content:
          CSharp: public const int ASSEMBLYVERSION_COMPLETE = 4
          VB: Public Const ASSEMBLYVERSION_COMPLETE As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
      language: CSharp
      name:
        CSharp: ASSEMBLYVERSION_EXCEPT_REVISION
        VB: ASSEMBLYVERSION_EXCEPT_REVISION
      nameWithType:
        CSharp: StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
        VB: StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
        VB: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_EXCEPT_REVISION
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ASSEMBLYVERSION_EXCEPT_REVISION
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 296
      summary: "\nSpecify this constant to the ToString method of a System.Version\nobject (e. g., of an Assembly) to cause it to return all but the\nbuild number.\n"
      example: []
      syntax:
        content:
          CSharp: public const int ASSEMBLYVERSION_EXCEPT_REVISION = 3
          VB: Public Const ASSEMBLYVERSION_EXCEPT_REVISION As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
      language: CSharp
      name:
        CSharp: ASSEMBLYVERSION_MAJOR_AND_MINOR
        VB: ASSEMBLYVERSION_MAJOR_AND_MINOR
      nameWithType:
        CSharp: StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
        VB: StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
        VB: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_AND_MINOR
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ASSEMBLYVERSION_MAJOR_AND_MINOR
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 304
      summary: "\nSpecify this constant to the ToString method of a System.Version\nobject (e. g., of an Assembly) to cause it to return only the\nmajor and minor version numbers.\n"
      example: []
      syntax:
        content:
          CSharp: public const int ASSEMBLYVERSION_MAJOR_AND_MINOR = 2
          VB: Public Const ASSEMBLYVERSION_MAJOR_AND_MINOR As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_ONLY
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_ONLY
      language: CSharp
      name:
        CSharp: ASSEMBLYVERSION_MAJOR_ONLY
        VB: ASSEMBLYVERSION_MAJOR_ONLY
      nameWithType:
        CSharp: StateManager.ASSEMBLYVERSION_MAJOR_ONLY
        VB: StateManager.ASSEMBLYVERSION_MAJOR_ONLY
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_ONLY
        VB: WizardWrx.DLLConfigurationManager.StateManager.ASSEMBLYVERSION_MAJOR_ONLY
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ASSEMBLYVERSION_MAJOR_ONLY
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 312
      summary: "\nSpecify this constant to the ToString method of a System.Version\nobject (e. g., of an Assembly) to cause it to return only the\nmajor version number.\n"
      example: []
      syntax:
        content:
          CSharp: public const int ASSEMBLYVERSION_MAJOR_ONLY = 1
          VB: Public Const ASSEMBLYVERSION_MAJOR_ONLY As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.UNSUPPORTED_EXE_SUBSYSTEM
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.UNSUPPORTED_EXE_SUBSYSTEM
      language: CSharp
      name:
        CSharp: UNSUPPORTED_EXE_SUBSYSTEM
        VB: UNSUPPORTED_EXE_SUBSYSTEM
      nameWithType:
        CSharp: StateManager.UNSUPPORTED_EXE_SUBSYSTEM
        VB: StateManager.UNSUPPORTED_EXE_SUBSYSTEM
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.UNSUPPORTED_EXE_SUBSYSTEM
        VB: WizardWrx.DLLConfigurationManager.StateManager.UNSUPPORTED_EXE_SUBSYSTEM
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: UNSUPPORTED_EXE_SUBSYSTEM
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 385
      summary: "\nThe DWLastDllError property returns this value when \nStandardHandleState is called by code running in anything except the\nWindows character mode subsystem.\n"
      example: []
      syntax:
        content:
          CSharp: public const int UNSUPPORTED_EXE_SUBSYSTEM = 536870913
          VB: Public Const UNSUPPORTED_EXE_SUBSYSTEM As Integer = 536870913
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance(System.Reflection.Assembly)
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance(System.Reflection.Assembly)
      language: CSharp
      name:
        CSharp: GetTheSingleInstance(Assembly)
        VB: GetTheSingleInstance(Assembly)
      nameWithType:
        CSharp: StateManager.GetTheSingleInstance(Assembly)
        VB: StateManager.GetTheSingleInstance(Assembly)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance(System.Reflection.Assembly)
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance(System.Reflection.Assembly)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetTheSingleInstance
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 493
      summary: "\nCall this method from any class that exposes a reference to the\nsingleton as a read only property. Please see the Remarks section.\n"
      remarks: "\nSince making a protected constructor safe for use by a class that\nimplements the Singleton design pattern, and a class that calls this\nmethod causes System.Reflection.Assembly.GetCalllingAssembly to\nreport the assembly in which the call executes as the calling\nassembly, any such method must explicitly identify the assembly that\ncontains the process entry point.\n\nWhen the Visual Studio Hosting Process is enabled, it becomes the\nentry assembly, hiding the &quot;real&quot; entry assembly (the assembly under\ntest), System.Reflection.Assembly.GetEntryAssembly cannot be used\nsafely. Moreover, since the Visual Studio Hosting Process runs in\nthe graphical (Windows) subsystem, the entry assembly cannot be used\nto correctly determine whether the entry assembly runs in the\ncharacter mode subsystem.\n\nAlthough the class needs only the Location property off the Assembly\ninstance, I elected to call for the entire Assembly to be passed in,\nto make the needs of this method unambiguous. Since the calling\nmethod must call one of two static methods on the Assembly class,\nboth of which return instances of Assembly, this doesn&apos;t impose any\nextra burden on the calling assembly.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [Obsolete("The hidden static constructor makes this use case redundant.")]

            public static StateManager GetTheSingleInstance(Assembly pasmCallingAssembly)
          VB: >-
            <Obsolete("The hidden static constructor makes this use case redundant.")>

            Public Shared Function GetTheSingleInstance(pasmCallingAssembly As Assembly) As StateManager
        parameters:
        - id: pasmCallingAssembly
          type: System.Reflection.Assembly
          description: "\nPass in a reference to the assembly that is calling this method on\nbehalf of an object that exposes a reference to this object as a\nread only property. Please see the Remarks section.\n"
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager
          description: "\nThe return value is a reference to the singleton, which is created\nthe first time the method is called. Subsequent calls return a\nreference to the singleton.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance*
      attributes:
      - type: System.ObsoleteAttribute
        ctor: System.ObsoleteAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: The hidden static constructor makes this use case redundant.
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN
      language: CSharp
      name:
        CSharp: GetAssemblyFQFN()
        VB: GetAssemblyFQFN()
      nameWithType:
        CSharp: StateManager.GetAssemblyFQFN()
        VB: StateManager.GetAssemblyFQFN()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN()
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetAssemblyFQFN
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 523
      summary: "\nReturn the fully qualified name of the assembly that started the\ncurrent process.\n"
      remarks: "\nI made this a method so that it is computed as needed, even in a\ndebugging session when the Visual Studio Hosting process runs all\nthe property getters when an object is expanded in the locals and\nwatch windows.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAssemblyFQFN()
          VB: Public Function GetAssemblyFQFN As String
        return:
          type: System.String
          description: "\nThe return value is a string that contains the fully qualified name\nof the assembly that started the current process.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
      language: CSharp
      name:
        CSharp: GetAssemblyProductAndVersion()
        VB: GetAssemblyProductAndVersion()
      nameWithType:
        CSharp: StateManager.GetAssemblyProductAndVersion()
        VB: StateManager.GetAssemblyProductAndVersion()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion()
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetAssemblyProductAndVersion
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 538
      summary: "\nGet the assembly product name and version number is a string that is\nsuitable for use as a window caption.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAssemblyProductAndVersion()
          VB: Public Function GetAssemblyProductAndVersion As String
        return:
          type: System.String
          description: "\nThe return value is a string, suitable for use as the caption of a\nwindow, such as a form or message box. The returned string contains\nthe product name, followed by the entire 4-part version string.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
      language: CSharp
      name:
        CSharp: GetAssemblyProductAndVersion(StateManager.AssemblyVersionRequest)
        VB: GetAssemblyProductAndVersion(StateManager.AssemblyVersionRequest)
      nameWithType:
        CSharp: StateManager.GetAssemblyProductAndVersion(StateManager.AssemblyVersionRequest)
        VB: StateManager.GetAssemblyProductAndVersion(StateManager.AssemblyVersionRequest)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetAssemblyProductAndVersion
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 559
      summary: "\nGet the assembly product name and version number is a string that is\nsuitable for use as a window caption.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAssemblyProductAndVersion(StateManager.AssemblyVersionRequest penmAssemblyVersionRequest)
          VB: Public Function GetAssemblyProductAndVersion(penmAssemblyVersionRequest As StateManager.AssemblyVersionRequest) As String
        parameters:
        - id: penmAssemblyVersionRequest
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
          description: "\nUse a member of the AssemblyVersionRequest enumeration to indicate\nhow many parts of the four-part version number to include.\n"
        return:
          type: System.String
          description: "\nThe return value is a string, suitable for use as the caption of a\nwindow, such as a form or message box. The returned string contains\nthe product name, followed by the specified number of parts of the\nproduct version.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion*
      seealso:
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
        commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName: 
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
      language: CSharp
      name:
        CSharp: GetAppSubsystemID()
        VB: GetAppSubsystemID()
      nameWithType:
        CSharp: StateManager.GetAppSubsystemID()
        VB: StateManager.GetAppSubsystemID()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID()
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetAppSubsystemID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 636
      summary: "\nReturn the AppSubsystemID property, explicitly cast to a PESubsystemID.\n"
      remarks: "\nThis method provides a more meaningful interpretation of the AppSubsystemID value.\n\nThis routine is implemented as an instance method, so that its code runs only as needed.\n"
      example: []
      syntax:
        content:
          CSharp: public PESubsystemInfo.PESubsystemID GetAppSubsystemID()
          VB: Public Function GetAppSubsystemID As PESubsystemInfo.PESubsystemID
        return:
          type: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
          description: "\nThe return value is the AppSubsystemID property, cast to a member of\nthe ESubsystemInfo.PESubsystemID enumeration.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID*
      seealso:
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
        commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
        commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID: 
        WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString: 
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
      language: CSharp
      name:
        CSharp: GetAppSubsystemString()
        VB: GetAppSubsystemString()
      nameWithType:
        CSharp: StateManager.GetAppSubsystemString()
        VB: StateManager.GetAppSubsystemString()
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString()
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString()
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetAppSubsystemString
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 659
      summary: "\nReturn a sentence that identifies the subsystem in which the \nassembly that started the current process runs.\n"
      remarks: "\nI made this a method so that it is computed strictly as needed, even\nin a debugging session when the Visual Studio Hosting process runs\nall the property getters when an object is expanded in the locals or\nwatch window.\n\nThis method is much more expensive than GetAssemblyFQFN, because it\ngets the returned string from a string resource.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAppSubsystemString()
          VB: Public Function GetAppSubsystemString As String
        return:
          type: System.String
          description: "\nThe return value is a short sentence that describes the subsystem in\nwhich the assembly that started the current process runs.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable(System.String[])
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable(System.String[])
      language: CSharp
      name:
        CSharp: LoadErrorMessageTable(String[])
        VB: LoadErrorMessageTable(String())
      nameWithType:
        CSharp: StateManager.LoadErrorMessageTable(String[])
        VB: StateManager.LoadErrorMessageTable(String())
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable(System.String[])
        VB: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable(System.String())
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: LoadErrorMessageTable
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 696
      summary: "\nLoad the table of error messages for use with the ErrorExit method.\n"
      remarks: "\nError message numbers are array subscripts. This imposes two\nrequirements on the list.\n\n1) You must supply a message for the default exit code of zero,\neven if you don&apos;t use it.\n\n2) Status codes must be sequentially numbered.\n\nThe second requirement can be relaxed, at the cost of inserting one\nor more dummy error messages, which may be empty strings, to account\nfor the skipped numbers. The obvious disadvantage is some bloat in\nthe message table.\n\nYou must call this method before your program can get a useful error\nmessage from ErrorExit. Although the call to ErrorExit succeeds, the\nmessage is &quot;Internal error: Unknown status code,&quot; followed by the\nsupplied raw exit code.\n"
      example: []
      syntax:
        content:
          CSharp: public int LoadErrorMessageTable(string[] pastrErrorMessages)
          VB: Public Function LoadErrorMessageTable(pastrErrorMessages As String()) As Integer
        parameters:
        - id: pastrErrorMessages
          type: System.String[]
          description: "\nArray of strings, for use as error messages. See Remarks.\n"
        return:
          type: System.Int32
          description: "\nCount of error messages loaded into the object. Hence, the Ubound of\nthe array is one less than the return value, and its LBound is zero.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
      language: CSharp
      name:
        CSharp: AppErrorMessages
        VB: AppErrorMessages
      nameWithType:
        CSharp: StateManager.AppErrorMessages
        VB: StateManager.AppErrorMessages
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppErrorMessages
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 710
      summary: "\nMake the array of error messages available, for reading only, under\nguard of a lock, to ensure that another thread isn&apos;t adding to the\narray while it is being returned.\n"
      example: []
      syntax:
        content:
          CSharp: public string[] AppErrorMessages { get; }
          VB: Public ReadOnly Property AppErrorMessages As String()
        parameters: []
        return:
          type: System.String[]
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
      language: CSharp
      name:
        CSharp: AppReturnCode
        VB: AppReturnCode
      nameWithType:
        CSharp: StateManager.AppReturnCode
        VB: StateManager.AppReturnCode
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppReturnCode
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 729
      summary: "\nUse this read/write property to set the application return code from\nanywhere, so that you don&apos;t have to use another, potentially awkward,\nmethod to get the word back to the main routine.\n"
      remarks: "\nAccess to this property is synchronized by an internally managed\nobject lock.\n"
      example: []
      syntax:
        content:
          CSharp: public int AppReturnCode { get; set; }
          VB: Public Property AppReturnCode As Integer
        parameters: []
        return:
          type: System.Int32
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
      language: CSharp
      name:
        CSharp: AppRootAssemblyFileBaseName
        VB: AppRootAssemblyFileBaseName
      nameWithType:
        CSharp: StateManager.AppRootAssemblyFileBaseName
        VB: StateManager.AppRootAssemblyFileBaseName
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppRootAssemblyFileBaseName
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 753
      summary: "\nThis property is a shortcut to the AssemblyFileBaseName property of\nthe AppRootAssembly property.\n"
      remarks: "\nSince the underlying property is read only, and has a static\ninitializer, it is thread-safe without the overhead of a lock.\n"
      example: []
      syntax:
        content:
          CSharp: public string AppRootAssemblyFileBaseName { get; }
          VB: Public ReadOnly Property AppRootAssemblyFileBaseName As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
      language: CSharp
      name:
        CSharp: AppRootAssemblyFileDirName
        VB: AppRootAssemblyFileDirName
      nameWithType:
        CSharp: StateManager.AppRootAssemblyFileDirName
        VB: StateManager.AppRootAssemblyFileDirName
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppRootAssemblyFileDirName
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 770
      summary: "\nThis property is a shortcut to the AssembyDirName property of\nthe AppRootAssembly property.\n"
      remarks: "\nSince the underlying property is read only, and has a static\ninitializer, it is thread-safe without the overhead of a lock.\n"
      example: []
      syntax:
        content:
          CSharp: public string AppRootAssemblyFileDirName { get; }
          VB: Public ReadOnly Property AppRootAssemblyFileDirName As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
      language: CSharp
      name:
        CSharp: AppRootAssemblyFileName
        VB: AppRootAssemblyFileName
      nameWithType:
        CSharp: StateManager.AppRootAssemblyFileName
        VB: StateManager.AppRootAssemblyFileName
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppRootAssemblyFileName
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 784
      summary: "\nThis property is a shortcut to the AssemblyFileName property of\nthe AppRootAssembly property.\n"
      remarks: "\nSince the underlying property is read only, and has a static\ninitializer, it is thread-safe without the overhead of a lock.\n"
      example: []
      syntax:
        content:
          CSharp: public string AppRootAssemblyFileName { get; }
          VB: Public ReadOnly Property AppRootAssemblyFileName As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
      language: CSharp
      name:
        CSharp: AppRootAssemblyName
        VB: AppRootAssemblyName
      nameWithType:
        CSharp: StateManager.AppRootAssemblyName
        VB: StateManager.AppRootAssemblyName
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppRootAssemblyName
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 801
      summary: "\nThis property returns the fully qualified name of the root assembly,\nthe first assembly that loaded into the default application domain.\n"
      remarks: "\nThis property yields a wealth of information about the assembly,\nincluding all four parts of its version number, its public key\ntoken, if it has one, and its culture.\n"
      example: []
      syntax:
        content:
          CSharp: public _AssemblyName AppRootAssemblyName { get; }
          VB: Public ReadOnly Property AppRootAssemblyName As _AssemblyName
        parameters: []
        return:
          type: System.Runtime.InteropServices._AssemblyName
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName*
      seealso:
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
        commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
        commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion: 
        ? WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
        : 
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
      language: CSharp
      name:
        CSharp: AppStartupTimeLocal
        VB: AppStartupTimeLocal
      nameWithType:
        CSharp: StateManager.AppStartupTimeLocal
        VB: StateManager.AppStartupTimeLocal
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppStartupTimeLocal
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 812
      summary: "\nThis property is a shortcut to the StartupTime property of\nthe AppRootAssembly property.\n"
      remarks: "\nSince the underlying property is read only, and has a static\ninitializer, it is thread-safe without the overhead of a lock.\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime AppStartupTimeLocal { get; }
          VB: Public ReadOnly Property AppStartupTimeLocal As Date
        parameters: []
        return:
          type: System.DateTime
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
      language: CSharp
      name:
        CSharp: AppStartupTimeUtc
        VB: AppStartupTimeUtc
      nameWithType:
        CSharp: StateManager.AppStartupTimeUtc
        VB: StateManager.AppStartupTimeUtc
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppStartupTimeUtc
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 826
      summary: "\nThis property is a shortcut to the StartupTimeUTC property of\nthe AppRootAssembly property.\n"
      remarks: "\nSince the underlying property is read only, and has a static\ninitializer, it is thread-safe without the overhead of a lock.\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime AppStartupTimeUtc { get; }
          VB: Public ReadOnly Property AppStartupTimeUtc As Date
        parameters: []
        return:
          type: System.DateTime
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppUptime
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppUptime
      language: CSharp
      name:
        CSharp: AppUptime
        VB: AppUptime
      nameWithType:
        CSharp: StateManager.AppUptime
        VB: StateManager.AppUptime
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppUptime
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppUptime
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppUptime
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 835
      summary: "\nGets the elapsed time since the application started.\n"
      example: []
      syntax:
        content:
          CSharp: public TimeSpan AppUptime { get; }
          VB: Public ReadOnly Property AppUptime As TimeSpan
        parameters: []
        return:
          type: System.TimeSpan
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppUptime*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
      language: CSharp
      name:
        CSharp: AppSubsystemID
        VB: AppSubsystemID
      nameWithType:
        CSharp: StateManager.AppSubsystemID
        VB: StateManager.AppSubsystemID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppSubsystemID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 850
      summary: "\nReturn the ID of the subsystem in which the assembly runs. Call the\nGetAppSubsystemString method to translate the ID into a human\nreadable message. The translation is way too expensive to expose as\na property, and too infrequently needed to justify having the\nconstructor store it in a string.\n"
      example: []
      syntax:
        content:
          CSharp: public short AppSubsystemID { get; }
          VB: Public ReadOnly Property AppSubsystemID As Short
        parameters: []
        return:
          type: System.Int16
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID*
      seealso:
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
        commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
      - linkId: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
        commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID: 
        WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString: 
    - id: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
      language: CSharp
      name:
        CSharp: ConsoleMessageTimeFormat
        VB: ConsoleMessageTimeFormat
      nameWithType:
        CSharp: StateManager.ConsoleMessageTimeFormat
        VB: StateManager.ConsoleMessageTimeFormat
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
        VB: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ConsoleMessageTimeFormat
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 861
      summary: "\nUse this property to get a reference to the FormattedLocalTime\nobject that governs the formatting of the times displayed in the BOJ\nand EOJ messages.\n"
      example: []
      syntax:
        content:
          CSharp: public TimeDisplayFormatter ConsoleMessageTimeFormat { get; }
          VB: Public ReadOnly Property ConsoleMessageTimeFormat As TimeDisplayFormatter
        parameters: []
        return:
          type: WizardWrx.Core.TimeDisplayFormatter
      overload: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
      language: CSharp
      name:
        CSharp: DefaultEventSourceID
        VB: DefaultEventSourceID
      nameWithType:
        CSharp: StateManager.DefaultEventSourceID
        VB: StateManager.DefaultEventSourceID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
        VB: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: DefaultEventSourceID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 874
      summary: "\nGets the registered default event source ID.\n"
      remarks: "\nIf no event source is registered, this property returns the \nWIZARDWRX_EVENT_SOURCE_ID string static ExceptionLogger string.\n"
      example: []
      syntax:
        content:
          CSharp: public string DefaultEventSourceID { get; }
          VB: Public ReadOnly Property DefaultEventSourceID As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
      language: CSharp
      name:
        CSharp: InitialWorkingDirectoryName
        VB: InitialWorkingDirectoryName
      nameWithType:
        CSharp: StateManager.InitialWorkingDirectoryName
        VB: StateManager.InitialWorkingDirectoryName
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
        VB: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: InitialWorkingDirectoryName
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 892
      summary: "\nGets the initial working directory, which reflects its value when\nthe application started.\n"
      remarks: "\nThis property has a static initializer, and is never changed.\n"
      example: []
      syntax:
        content:
          CSharp: public string InitialWorkingDirectoryName { get; }
          VB: Public ReadOnly Property InitialWorkingDirectoryName As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
      language: CSharp
      name:
        CSharp: DWLastDllError
        VB: DWLastDllError
      nameWithType:
        CSharp: StateManager.DWLastDllError
        VB: StateManager.DWLastDllError
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
        VB: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: DWLastDllError
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 904
      summary: "\nQuery this property for the value returned by GetLastError.\n"
      remarks: "\nStrictly speaking, the value is returned by Marshal.GetLastWin32Error.\n"
      example: []
      syntax:
        content:
          CSharp: public int DWLastDllError { get; }
          VB: Public ReadOnly Property DWLastDllError As Integer
        parameters: []
        return:
          type: System.Int32
      overload: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
      language: CSharp
      name:
        CSharp: AppExceptionLogger
        VB: AppExceptionLogger
      nameWithType:
        CSharp: StateManager.AppExceptionLogger
        VB: StateManager.AppExceptionLogger
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
        VB: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: AppExceptionLogger
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 916
      summary: "\nThis property returns a reference to the singleton ExceptionLogger,\nwhich is created immediately following creation of this instance.\nHence, by the time the reference is returned, this reference is\nguaranteed to be valid and read only for work.\n"
      example: []
      syntax:
        content:
          CSharp: public ExceptionLogger AppExceptionLogger { get; }
          VB: Public ReadOnly Property AppExceptionLogger As ExceptionLogger
        parameters: []
        return:
          type: WizardWrx.DLLConfigurationManager.ExceptionLogger
      overload: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
      commentId: P:WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
      language: CSharp
      name:
        CSharp: ShowUTCTime
        VB: ShowUTCTime
      nameWithType:
        CSharp: StateManager.ShowUTCTime
        VB: StateManager.ShowUTCTime
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
        VB: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: ShowUTCTime
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 928
      summary: "\nSet this property to TRUE to cause UTC times to be displayed in all\ntime stamps included in console BOJ and EOJ messages.\n\nSet it to FALSE to display only local times. The class default\nsetting is TRUE.\n\nSee the Remarks listed with the class definition.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ShowUTCTime { get; set; }
          VB: Public Property ShowUTCTime As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      language: CSharp
      name:
        CSharp: GetStdHandleFQFN(StandardHandleInfo.StandardConsoleHandle)
        VB: GetStdHandleFQFN(StandardHandleInfo.StandardConsoleHandle)
      nameWithType:
        CSharp: StateManager.GetStdHandleFQFN(StandardHandleInfo.StandardConsoleHandle)
        VB: StateManager.GetStdHandleFQFN(StandardHandleInfo.StandardConsoleHandle)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
        VB: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: GetStdHandleFQFN
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 972
      summary: "\nReport the file, if any, to which the specified standard handle is\nredirected.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetStdHandleFQFN(StandardHandleInfo.StandardConsoleHandle penmStdHandle)
          VB: Public Function GetStdHandleFQFN(penmStdHandle As StandardHandleInfo.StandardConsoleHandle) As String
        parameters:
        - id: penmStdHandle
          type: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
          description: "\nSpecify the StandardHandleInfo.StandardConsoleHandle member that\ncorresponds to the handle for which you wish to know whether it is\nattached or redirected.\n"
        return:
          type: System.String
          description: "\nIf the function succeeds and the handle is redirected, the return\nvalue is the name of the file to which the specified handle is\nredirected.\n\nOtherwise, the return value is one of two strings that explain the\nerror.\n\nProperties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY is the \ncomplete text of the message displayed when the calling routine is\nrunning in the Windows graphical mode subsystem.\n\nProperties.Resources.ERRMSG_STD_HANDLE_STATE is the beginning of a\nmessage, which is followed by the returned system status code, shown\nin both hexadecimal and decimal notation, followed by the associated\nsystem message.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      language: CSharp
      name:
        CSharp: StandardHandleState(StandardHandleInfo.StandardConsoleHandle)
        VB: StandardHandleState(StandardHandleInfo.StandardConsoleHandle)
      nameWithType:
        CSharp: StateManager.StandardHandleState(StandardHandleInfo.StandardConsoleHandle)
        VB: StateManager.StandardHandleState(StandardHandleInfo.StandardConsoleHandle)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
        VB: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: StandardHandleState
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 1012
      summary: "\nEvaluate whether a standard handle is attached to a console or \nredirected.\n"
      example: []
      syntax:
        content:
          CSharp: public StandardHandleInfo.StandardHandleState StandardHandleState(StandardHandleInfo.StandardConsoleHandle penmStdHandle)
          VB: Public Function StandardHandleState(penmStdHandle As StandardHandleInfo.StandardConsoleHandle) As StandardHandleInfo.StandardHandleState
        parameters:
        - id: penmStdHandle
          type: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
          description: "\nSpecify the StandardHandleInfo.StandardConsoleHandle member that\ncorresponds to the handle for which you wish to know whether it is\nattached or redirected.\n"
        return:
          type: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
          description: "\nIf the function succeeds, the return value is either ShsAttached or\nShsRedirected. Otherwise, there was an error, and you should call\nMarshal.GetLastWin32Error to determine exactly what happened. The \nsingleton has a private property where the return value is stored.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage(System.Int32)
      commentId: M:WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage(System.Int32)
      language: CSharp
      name:
        CSharp: FormatSystemErrorMessage(Int32)
        VB: FormatSystemErrorMessage(Int32)
      nameWithType:
        CSharp: StateManager.FormatSystemErrorMessage(Int32)
        VB: StateManager.FormatSystemErrorMessage(Int32)
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage(System.Int32)
        VB: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage(System.Int32)
      type: Method
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: FormatSystemErrorMessage
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 1071
      summary: "\nReturn the message associated with a system status code.\n"
      remarks: "\nThis convenience method amounts to syntactic sugar. Since it is very\nunlikely to ever be called by the method that motivated me to create\nit, I&apos;ll let it go ahead and call through it, even though calling\nthe constructor directly, passing in the static member that holds the\nstatus code would be a couple of orders of magnitude more efficient.\n"
      example: []
      syntax:
        content:
          CSharp: public static string FormatSystemErrorMessage(int pdwLastError)
          VB: Public Shared Function FormatSystemErrorMessage(pdwLastError As Integer) As String
        parameters:
        - id: pdwLastError
          type: System.Int32
          description: "\nSpecify the status code for which the system message is desired.\n"
        return:
          type: System.String
          description: "\nA new Win32Exception exception is constructed from the specified\nstatus code, and its Message property is returned.\n"
      overload: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
    commentId: T:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
    language: CSharp
    name:
      CSharp: StateManager.AssemblyVersionRequest
      VB: StateManager.AssemblyVersionRequest
    nameWithType:
      CSharp: StateManager.AssemblyVersionRequest
      VB: StateManager.AssemblyVersionRequest
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
    type: Enum
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager
    source:
      id: AssemblyVersionRequest
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
      startLine: 320
    summary: "\nUse this enumeration as input to the overloaded StateManager class&apos;s\nGetAssemblyProductAndVersion method, to specify how many parts of\nthe version string to return.\n"
    example: []
    syntax:
      content:
        CSharp: public enum AssemblyVersionRequest
        VB: Public Enum AssemblyVersionRequest
    extensionMethods:
    - WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorOnly
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorOnly
      language: CSharp
      name:
        CSharp: MajorOnly
        VB: MajorOnly
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.MajorOnly
        VB: StateManager.AssemblyVersionRequest.MajorOnly
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorOnly
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorOnly
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: MajorOnly
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 328
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_MAJOR_ONLY to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n"
      example: []
      syntax:
        content:
          CSharp: MajorOnly = 1
          VB: MajorOnly = 1
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorAndMinor
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorAndMinor
      language: CSharp
      name:
        CSharp: MajorAndMinor
        VB: MajorAndMinor
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.MajorAndMinor
        VB: StateManager.AssemblyVersionRequest.MajorAndMinor
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorAndMinor
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorAndMinor
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: MajorAndMinor
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 336
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_MAJOR_AND_MINOR to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n"
      example: []
      syntax:
        content:
          CSharp: MajorAndMinor = 2
          VB: MajorAndMinor = 2
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajroMinorBuild
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajroMinorBuild
      language: CSharp
      name:
        CSharp: MajroMinorBuild
        VB: MajroMinorBuild
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.MajroMinorBuild
        VB: StateManager.AssemblyVersionRequest.MajroMinorBuild
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajroMinorBuild
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajroMinorBuild
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: MajroMinorBuild
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 346
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_EXCEPT_REVISION to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n\nMajroMinorBuild and MajorMinorExceptRevision are synonyms.\n"
      example: []
      syntax:
        content:
          CSharp: MajroMinorBuild = 3
          VB: MajroMinorBuild = 3
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
      language: CSharp
      name:
        CSharp: MajorMinorExceptRevision
        VB: MajorMinorExceptRevision
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
        VB: StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinorExceptRevision
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: MajorMinorExceptRevision
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 356
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_EXCEPT_REVISION to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n\nMajroMinorBuild and MajorMinorExceptRevision are synonyms.\n"
      example: []
      syntax:
        content:
          CSharp: MajorMinorExceptRevision = 3
          VB: MajorMinorExceptRevision = 3
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
      language: CSharp
      name:
        CSharp: MajorMinroBuildRevision
        VB: MajorMinroBuildRevision
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
        VB: StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.MajorMinroBuildRevision
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: MajorMinroBuildRevision
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 367
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_COMPLETE to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n\nMajorMinroBuildRevision and Complete are synonyms.\n"
      example: []
      syntax:
        content:
          CSharp: MajorMinroBuildRevision = 4
          VB: MajorMinroBuildRevision = 4
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.Complete
      commentId: F:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.Complete
      language: CSharp
      name:
        CSharp: Complete
        VB: Complete
      nameWithType:
        CSharp: StateManager.AssemblyVersionRequest.Complete
        VB: StateManager.AssemblyVersionRequest.Complete
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.Complete
        VB: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.Complete
      type: Field
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager
      source:
        id: Complete
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\StateManager.cs
        startLine: 376
      summary: "\nThis is functionally equivalent to specifying a constant value of\nASSEMBLYVERSION_COMPLETE to the ToString method of a\nSystem.Version object, and is intended to do so through the\nGetAssemblyProductAndVersion instance method of this class.\n\nMajorMinroBuildRevision and Complete are synonyms.\n"
      example: []
      syntax:
        content:
          CSharp: Complete = 4
          VB: Complete = 4
        return:
          type: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: WizardWrx.DLLConfigurationManager.Properties
  commentId: N:WizardWrx.DLLConfigurationManager.Properties
  language: CSharp
  name:
    CSharp: WizardWrx.DLLConfigurationManager.Properties
    VB: WizardWrx.DLLConfigurationManager.Properties
  nameWithType:
    CSharp: WizardWrx.DLLConfigurationManager.Properties
    VB: WizardWrx.DLLConfigurationManager.Properties
  qualifiedName:
    CSharp: WizardWrx.DLLConfigurationManager.Properties
    VB: WizardWrx.DLLConfigurationManager.Properties
  type: Namespace
  assemblies:
  - WizardWrx.DLLConfigurationManager
  modifiers: {}
  items:
  - id: WizardWrx.DLLConfigurationManager.Properties.Resources
    commentId: T:WizardWrx.DLLConfigurationManager.Properties.Resources
    language: CSharp
    name:
      CSharp: Resources
      VB: Resources
    nameWithType:
      CSharp: Resources
      VB: Resources
    qualifiedName:
      CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources
      VB: WizardWrx.DLLConfigurationManager.Properties.Resources
    type: Class
    assemblies:
    - WizardWrx.DLLConfigurationManager
    namespace: WizardWrx.DLLConfigurationManager.Properties
    source:
      id: Resources
      path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
      startLine: 21
    summary: "\nA strongly-typed resource class, for looking up localized strings, etc.\n"
    example: []
    syntax:
      content:
        CSharp: public class Resources
        VB: Public Class Resources
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
      language: CSharp
      name:
        CSharp: ResourceManager
        VB: ResourceManager
      nameWithType:
        CSharp: Resources.ResourceManager
        VB: Resources.ResourceManager
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ResourceManager
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 37
      summary: "\nReturns the cached ResourceManager instance used by this class.\n"
      example: []
      syntax:
        content:
          CSharp: public static ResourceManager ResourceManager { get; }
          VB: Public Shared ReadOnly Property ResourceManager As ResourceManager
        parameters: []
        return:
          type: System.Resources.ResourceManager
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
      language: CSharp
      name:
        CSharp: Culture
        VB: Culture
      nameWithType:
        CSharp: Resources.Culture
        VB: Resources.Culture
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: Culture
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 52
      summary: "\nOverrides the current thread&apos;s CurrentUICulture property for all\nresource lookups using this strongly typed resource class.\n"
      example: []
      syntax:
        content:
          CSharp: public static CultureInfo Culture { get; set; }
          VB: Public Shared Property Culture As CultureInfo
        parameters: []
        return:
          type: System.Globalization.CultureInfo
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
      language: CSharp
      name:
        CSharp: DEFAULT_EVENT_SOURCE_ID
        VB: DEFAULT_EVENT_SOURCE_ID
      nameWithType:
        CSharp: Resources.DEFAULT_EVENT_SOURCE_ID
        VB: Resources.DEFAULT_EVENT_SOURCE_ID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: DEFAULT_EVENT_SOURCE_ID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 65
      summary: "\nLooks up a localized string similar to DefaultWindowsEventSourceID.\n"
      example: []
      syntax:
        content:
          CSharp: public static string DEFAULT_EVENT_SOURCE_ID { get; }
          VB: Public Shared ReadOnly Property DEFAULT_EVENT_SOURCE_ID As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_ARGNAME_TPL
        VB: ERRMSG_ARGNAME_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_ARGNAME_TPL
        VB: Resources.ERRMSG_ARGNAME_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_ARGNAME_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 74
      summary: "\nLooks up a localized string similar to Argument Name    = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_ARGNAME_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_ARGNAME_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_ARGVALUE_TPL
        VB: ERRMSG_ARGVALUE_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_ARGVALUE_TPL
        VB: Resources.ERRMSG_ARGVALUE_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_ARGVALUE_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 83
      summary: "\nLooks up a localized string similar to Argument Value   = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_ARGVALUE_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_ARGVALUE_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
      language: CSharp
      name:
        CSharp: ERRMSG_ASM_SUBSYSTEM
        VB: ERRMSG_ASM_SUBSYSTEM
      nameWithType:
        CSharp: Resources.ERRMSG_ASM_SUBSYSTEM
        VB: Resources.ERRMSG_ASM_SUBSYSTEM
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_ASM_SUBSYSTEM
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 92
      summary: "\nLooks up a localized string similar to While attempting to identify the subsystem of {0}, GetExeSubsystem returned exit code {1}: {2}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_ASM_SUBSYSTEM { get; }
          VB: Public Shared ReadOnly Property ERRMSG_ASM_SUBSYSTEM As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
      language: CSharp
      name:
        CSharp: ERRMSG_CONFIG_FILE_IS_EMPTY
        VB: ERRMSG_CONFIG_FILE_IS_EMPTY
      nameWithType:
        CSharp: Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
        VB: Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_CONFIG_FILE_IS_EMPTY
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 101
      summary: "\nLooks up a localized string similar to The specified DLL configuration file, {0}, exists, but is empty.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_CONFIG_FILE_IS_EMPTY { get; }
          VB: Public Shared ReadOnly Property ERRMSG_CONFIG_FILE_IS_EMPTY As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_EX_EVTMSG_TPL
        VB: ERRMSG_EX_EVTMSG_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_EX_EVTMSG_TPL
        VB: Resources.ERRMSG_EX_EVTMSG_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_EX_EVTMSG_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 110
      summary: "\nLooks up a localized string similar to An {0} exception was caught in routine {1}:{3}               Message          = {2}{3}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_EX_EVTMSG_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_EX_EVTMSG_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_EX_MSG_TPL
        VB: ERRMSG_EX_MSG_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_EX_MSG_TPL
        VB: Resources.ERRMSG_EX_MSG_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_EX_MSG_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 119
      summary: "\nLooks up a localized string similar to An {0} exception was caught in routine {1}:{3}               Message          = {2}{3}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_EX_MSG_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_EX_MSG_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_FILENAME_TPL
        VB: ERRMSG_FILENAME_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_FILENAME_TPL
        VB: Resources.ERRMSG_FILENAME_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_FILENAME_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 128
      summary: "\nLooks up a localized string similar to File Name        = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_FILENAME_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_FILENAME_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_FORMATSTRING_TPL
        VB: ERRMSG_FORMATSTRING_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_FORMATSTRING_TPL
        VB: Resources.ERRMSG_FORMATSTRING_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_FORMATSTRING_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 137
      summary: "\nLooks up a localized string similar to Format String    = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_FORMATSTRING_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_FORMATSTRING_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
      language: CSharp
      name:
        CSharp: ERRMSG_HRESULT
        VB: ERRMSG_HRESULT
      nameWithType:
        CSharp: Resources.ERRMSG_HRESULT
        VB: Resources.ERRMSG_HRESULT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_HRESULT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 146
      summary: "\nLooks up a localized string similar to HRESULT = {0} ({1} decimal){2}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_HRESULT { get; }
          VB: Public Shared ReadOnly Property ERRMSG_HRESULT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
      language: CSharp
      name:
        CSharp: ERRMSG_INNER
        VB: ERRMSG_INNER
      nameWithType:
        CSharp: Resources.ERRMSG_INNER
        VB: Resources.ERRMSG_INNER
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_INNER
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 155
      summary: "\nLooks up a localized string similar to Inner Exception:{1}               Message          = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_INNER { get; }
          VB: Public Shared ReadOnly Property ERRMSG_INNER As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
      language: CSharp
      name:
        CSharp: ERRMSG_INV_TZINFO
        VB: ERRMSG_INV_TZINFO
      nameWithType:
        CSharp: Resources.ERRMSG_INV_TZINFO
        VB: Resources.ERRMSG_INV_TZINFO
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_INV_TZINFO
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 164
      summary: "\nLooks up a localized string similar to CORRUPTED SYSTEM REGISTRY: The GetDisplayTimeZone method found the specified key, but the corresponding Registry key is corrupted.{1}                           Specified ID = {0}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_INV_TZINFO { get; }
          VB: Public Shared ReadOnly Property ERRMSG_INV_TZINFO As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
      language: CSharp
      name:
        CSharp: ERRMSG_INVALID_ERROREXITOPTIONS
        VB: ERRMSG_INVALID_ERROREXITOPTIONS
      nameWithType:
        CSharp: Resources.ERRMSG_INVALID_ERROREXITOPTIONS
        VB: Resources.ERRMSG_INVALID_ERROREXITOPTIONS
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_INVALID_ERROREXITOPTIONS
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 173
      summary: "\nLooks up a localized string similar to An internal error has occurred.{1}Internal routine GetReservedErrorMessage was called with an invalid ErrorExitOptions value of {0}..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_INVALID_ERROREXITOPTIONS { get; }
          VB: Public Shared ReadOnly Property ERRMSG_INVALID_ERROREXITOPTIONS As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
      language: CSharp
      name:
        CSharp: ERRMSG_METHOD
        VB: ERRMSG_METHOD
      nameWithType:
        CSharp: Resources.ERRMSG_METHOD
        VB: Resources.ERRMSG_METHOD
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_METHOD
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 182
      summary: "\nLooks up a localized string similar to Exception Method = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_METHOD { get; }
          VB: Public Shared ReadOnly Property ERRMSG_METHOD As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
      language: CSharp
      name:
        CSharp: ERRMSG_MISSING_CONFIG_FILE
        VB: ERRMSG_MISSING_CONFIG_FILE
      nameWithType:
        CSharp: Resources.ERRMSG_MISSING_CONFIG_FILE
        VB: Resources.ERRMSG_MISSING_CONFIG_FILE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_MISSING_CONFIG_FILE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 191
      summary: "\nLooks up a localized string similar to There is no valid configuration file for DLL file {0}..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_MISSING_CONFIG_FILE { get; }
          VB: Public Shared ReadOnly Property ERRMSG_MISSING_CONFIG_FILE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
      language: CSharp
      name:
        CSharp: ERRMSG_NO_MEMORY
        VB: ERRMSG_NO_MEMORY
      nameWithType:
        CSharp: Resources.ERRMSG_NO_MEMORY
        VB: Resources.ERRMSG_NO_MEMORY
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_NO_MEMORY
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 200
      summary: "\nLooks up a localized string similar to SYSTEM RESOURCE FAMINE: The GetDisplayTimeZone method ran out of memory..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_NO_MEMORY { get; }
          VB: Public Shared ReadOnly Property ERRMSG_NO_MEMORY As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
      language: CSharp
      name:
        CSharp: ERRMSG_NULL_TZ_ID
        VB: ERRMSG_NULL_TZ_ID
      nameWithType:
        CSharp: Resources.ERRMSG_NULL_TZ_ID
        VB: Resources.ERRMSG_NULL_TZ_ID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_NULL_TZ_ID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 209
      summary: "\nLooks up a localized string similar to INTERNAL ERROR: The GetDisplayTimeZone method let a null pstrTimeZoneID through to TimeZoneInfo.FindSystemTimeZoneById..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_NULL_TZ_ID { get; }
          VB: Public Shared ReadOnly Property ERRMSG_NULL_TZ_ID As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
      language: CSharp
      name:
        CSharp: ERRMSG_OBJNAME_TPL
        VB: ERRMSG_OBJNAME_TPL
      nameWithType:
        CSharp: Resources.ERRMSG_OBJNAME_TPL
        VB: Resources.ERRMSG_OBJNAME_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_OBJNAME_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 218
      summary: "\nLooks up a localized string similar to Object Name      = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_OBJNAME_TPL { get; }
          VB: Public Shared ReadOnly Property ERRMSG_OBJNAME_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
      language: CSharp
      name:
        CSharp: ERRMSG_RUNTIME
        VB: ERRMSG_RUNTIME
      nameWithType:
        CSharp: Resources.ERRMSG_RUNTIME
        VB: Resources.ERRMSG_RUNTIME
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_RUNTIME
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 227
      summary: "\nLooks up a localized string similar to RUNTIME EXCEPTION: The GetDisplayTimeZone method found the specified key, but the corresponding Registry key is corrupted.{1}                    Specified ID = {0}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_RUNTIME { get; }
          VB: Public Shared ReadOnly Property ERRMSG_RUNTIME As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
      language: CSharp
      name:
        CSharp: ERRMSG_RUNTIME_SEE_EVENT_LOG
        VB: ERRMSG_RUNTIME_SEE_EVENT_LOG
      nameWithType:
        CSharp: Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
        VB: Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_RUNTIME_SEE_EVENT_LOG
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 236
      summary: "\nLooks up a localized string similar to A run-time exception forced the program to end prematurely.{0}Pleasr see he (0) event log for a message with event source = (0)..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_RUNTIME_SEE_EVENT_LOG { get; }
          VB: Public Shared ReadOnly Property ERRMSG_RUNTIME_SEE_EVENT_LOG As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      language: CSharp
      name:
        CSharp: ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        VB: ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      nameWithType:
        CSharp: Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        VB: Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 245
      summary: "\nLooks up a localized string similar to A run-time exception forced the program to end prematurely.{0}Please see the message just above this line..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE { get; }
          VB: Public Shared ReadOnly Property ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
      language: CSharp
      name:
        CSharp: ERRMSG_SECURITY
        VB: ERRMSG_SECURITY
      nameWithType:
        CSharp: Resources.ERRMSG_SECURITY
        VB: Resources.ERRMSG_SECURITY
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_SECURITY
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 254
      summary: "\nLooks up a localized string similar to ACCESS VIOLATION: The GetDisplayTimeZone method cannot read the Registry keys where the time zone information is kept. The process has insufficient access permissions on that key..\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_SECURITY { get; }
          VB: Public Shared ReadOnly Property ERRMSG_SECURITY As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
      language: CSharp
      name:
        CSharp: ERRMSG_SOURCE
        VB: ERRMSG_SOURCE
      nameWithType:
        CSharp: Resources.ERRMSG_SOURCE
        VB: Resources.ERRMSG_SOURCE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_SOURCE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 263
      summary: "\nLooks up a localized string similar to Exception Source = {0}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_SOURCE { get; }
          VB: Public Shared ReadOnly Property ERRMSG_SOURCE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
      language: CSharp
      name:
        CSharp: ERRMSG_STD_HANDLE_STATE
        VB: ERRMSG_STD_HANDLE_STATE
      nameWithType:
        CSharp: Resources.ERRMSG_STD_HANDLE_STATE
        VB: Resources.ERRMSG_STD_HANDLE_STATE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_STD_HANDLE_STATE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 272
      summary: "\nLooks up a localized string similar to The StandardHandleState routine reported an exception.\\nException Code = 0x{0} ({1} decimal): {2}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_STD_HANDLE_STATE { get; }
          VB: Public Shared ReadOnly Property ERRMSG_STD_HANDLE_STATE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
      language: CSharp
      name:
        CSharp: ERRMSG_TZ_NOT_FOUND
        VB: ERRMSG_TZ_NOT_FOUND
      nameWithType:
        CSharp: Resources.ERRMSG_TZ_NOT_FOUND
        VB: Resources.ERRMSG_TZ_NOT_FOUND
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_TZ_NOT_FOUND
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 281
      summary: "\nLooks up a localized string similar to INTERNAL or DATA ERROR: The GetDisplayTimeZone method let a pstrTimeZoneID that isn&apos;t registered on this computer through to TimeZoneInfo.FindSystemTimeZoneById.{1}                        Specified ID = {0}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_TZ_NOT_FOUND { get; }
          VB: Public Shared ReadOnly Property ERRMSG_TZ_NOT_FOUND As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
      language: CSharp
      name:
        CSharp: ERRMSG_UNBALANCED
        VB: ERRMSG_UNBALANCED
      nameWithType:
        CSharp: Resources.ERRMSG_UNBALANCED
        VB: Resources.ERRMSG_UNBALANCED
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: ERRMSG_UNBALANCED
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 290
      summary: "\nLooks up a localized string similar to The sizes of internal tables s_astrTrimStart and s_astrExceptionTypeNames are unequal.{2}    s_astrTrimStart Elemnent Count          = {0}{2}    s_astrExceptionTypeNames  Elemnent Count = {1}{2}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ERRMSG_UNBALANCED { get; }
          VB: Public Shared ReadOnly Property ERRMSG_UNBALANCED As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
      language: CSharp
      name:
        CSharp: EXCEPTION_DLL_CONFIG_IS_MISSING
        VB: EXCEPTION_DLL_CONFIG_IS_MISSING
      nameWithType:
        CSharp: Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
        VB: Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: EXCEPTION_DLL_CONFIG_IS_MISSING
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 299
      summary: "\nLooks up a localized string similar to DLL configuration file, {0}.config, which defines the default event source ID string, is missing..\n"
      example: []
      syntax:
        content:
          CSharp: public static string EXCEPTION_DLL_CONFIG_IS_MISSING { get; }
          VB: Public Shared ReadOnly Property EXCEPTION_DLL_CONFIG_IS_MISSING As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
      language: CSharp
      name:
        CSharp: EXCEPTION_MESSAGE_NULL_REFERENCE
        VB: EXCEPTION_MESSAGE_NULL_REFERENCE
      nameWithType:
        CSharp: Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
        VB: Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: EXCEPTION_MESSAGE_NULL_REFERENCE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 308
      summary: "\nLooks up a localized string similar to Object reference not set to an instance of an object..\n"
      example: []
      syntax:
        content:
          CSharp: public static string EXCEPTION_MESSAGE_NULL_REFERENCE { get; }
          VB: Public Shared ReadOnly Property EXCEPTION_MESSAGE_NULL_REFERENCE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
      language: CSharp
      name:
        CSharp: MSG_APP_CHARACTER_MODE_APPS_ONLY
        VB: MSG_APP_CHARACTER_MODE_APPS_ONLY
      nameWithType:
        CSharp: Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
        VB: Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: MSG_APP_CHARACTER_MODE_APPS_ONLY
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 317
      summary: "\nLooks up a localized string similar to The GetStdHandleFQFN routine supports only character mode (console mode) applications..\n"
      example: []
      syntax:
        content:
          CSharp: public static string MSG_APP_CHARACTER_MODE_APPS_ONLY { get; }
          VB: Public Shared ReadOnly Property MSG_APP_CHARACTER_MODE_APPS_ONLY As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
      language: CSharp
      name:
        CSharp: MSG_CONSOLE_HAS_STD_HANDLE
        VB: MSG_CONSOLE_HAS_STD_HANDLE
      nameWithType:
        CSharp: Resources.MSG_CONSOLE_HAS_STD_HANDLE
        VB: Resources.MSG_CONSOLE_HAS_STD_HANDLE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: MSG_CONSOLE_HAS_STD_HANDLE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 326
      summary: "\nLooks up a localized string similar to , NOT redirected.\n"
      example: []
      syntax:
        content:
          CSharp: public static string MSG_CONSOLE_HAS_STD_HANDLE { get; }
          VB: Public Shared ReadOnly Property MSG_CONSOLE_HAS_STD_HANDLE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      language: CSharp
      name:
        CSharp: MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        VB: MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      nameWithType:
        CSharp: Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        VB: Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 335
      summary: "\nLooks up a localized string similar to The assembly that defines the entry point of the process must call{0}ExtendedProcessInfo.PESubsystemInfo.InitializeInstance before{0}the first StreamStateInfo instance is constructed..\n"
      example: []
      syntax:
        content:
          CSharp: public static string MSG_MUST_INITIALIZE_PESUBSYSTEMINFO { get; }
          VB: Public Shared ReadOnly Property MSG_MUST_INITIALIZE_PESUBSYSTEMINFO As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
      language: CSharp
      name:
        CSharp: MSG_UNSUPPORTED_PE_SUBSYSTEM
        VB: MSG_UNSUPPORTED_PE_SUBSYSTEM
      nameWithType:
        CSharp: Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
        VB: Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: MSG_UNSUPPORTED_PE_SUBSYSTEM
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 344
      summary: "\nLooks up a localized string similar to Only assemblies that run in the character mode subsystem are supported.{2}The subsytem ID of the entry assembly is {0} ({1})..\n"
      example: []
      syntax:
        content:
          CSharp: public static string MSG_UNSUPPORTED_PE_SUBSYSTEM { get; }
          VB: Public Shared ReadOnly Property MSG_UNSUPPORTED_PE_SUBSYSTEM As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
      language: CSharp
      name:
        CSharp: MSG_XLATE_SUBSYST_INVALID_ID
        VB: MSG_XLATE_SUBSYST_INVALID_ID
      nameWithType:
        CSharp: Resources.MSG_XLATE_SUBSYST_INVALID_ID
        VB: Resources.MSG_XLATE_SUBSYST_INVALID_ID
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: MSG_XLATE_SUBSYST_INVALID_ID
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 353
      summary: "\nLooks up a localized string similar to The subsystem ID must be greater than zero and less than ten..\n"
      example: []
      syntax:
        content:
          CSharp: public static string MSG_XLATE_SUBSYST_INVALID_ID { get; }
          VB: Public Shared ReadOnly Property MSG_XLATE_SUBSYST_INVALID_ID As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
      language: CSharp
      name:
        CSharp: OUTPUT_OPTIONS_DISPLAY_FORMAT
        VB: OUTPUT_OPTIONS_DISPLAY_FORMAT
      nameWithType:
        CSharp: Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
        VB: Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: OUTPUT_OPTIONS_DISPLAY_FORMAT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 362
      summary: "\nLooks up a localized string similar to OutputOptions {0}= {1} ({2} decimal = {3}).\n"
      example: []
      syntax:
        content:
          CSharp: public static string OUTPUT_OPTIONS_DISPLAY_FORMAT { get; }
          VB: Public Shared ReadOnly Property OUTPUT_OPTIONS_DISPLAY_FORMAT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
      language: CSharp
      name:
        CSharp: PRODUCT_NAME_AND_VERSION_TPL
        VB: PRODUCT_NAME_AND_VERSION_TPL
      nameWithType:
        CSharp: Resources.PRODUCT_NAME_AND_VERSION_TPL
        VB: Resources.PRODUCT_NAME_AND_VERSION_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: PRODUCT_NAME_AND_VERSION_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 371
      summary: "\nLooks up a localized string similar to {0}, version {1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string PRODUCT_NAME_AND_VERSION_TPL { get; }
          VB: Public Shared ReadOnly Property PRODUCT_NAME_AND_VERSION_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
      language: CSharp
      name:
        CSharp: STACKTRACE_TPL
        VB: STACKTRACE_TPL
      nameWithType:
        CSharp: Resources.STACKTRACE_TPL
        VB: Resources.STACKTRACE_TPL
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STACKTRACE_TPL
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 380
      summary: "\nLooks up a localized string similar to {1}Stack Trace Begin:{1}{0}{1}End of Stack Trace{1}{1}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STACKTRACE_TPL { get; }
          VB: Public Shared ReadOnly Property STACKTRACE_TPL As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDERR_LONG
        VB: STREAM_NAME_STDERR_LONG
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDERR_LONG
        VB: Resources.STREAM_NAME_STDERR_LONG
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDERR_LONG
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 389
      summary: "\nLooks up a localized string similar to Standard Error.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDERR_LONG { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDERR_LONG As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDERR_SHORT
        VB: STREAM_NAME_STDERR_SHORT
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDERR_SHORT
        VB: Resources.STREAM_NAME_STDERR_SHORT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDERR_SHORT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 398
      summary: "\nLooks up a localized string similar to StdError.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDERR_SHORT { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDERR_SHORT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDIN_LONG
        VB: STREAM_NAME_STDIN_LONG
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDIN_LONG
        VB: Resources.STREAM_NAME_STDIN_LONG
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDIN_LONG
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 407
      summary: "\nLooks up a localized string similar to Standard Input.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDIN_LONG { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDIN_LONG As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDIN_SHORT
        VB: STREAM_NAME_STDIN_SHORT
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDIN_SHORT
        VB: Resources.STREAM_NAME_STDIN_SHORT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDIN_SHORT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 416
      summary: "\nLooks up a localized string similar to StdIn.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDIN_SHORT { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDIN_SHORT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDOUT_LONG
        VB: STREAM_NAME_STDOUT_LONG
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDOUT_LONG
        VB: Resources.STREAM_NAME_STDOUT_LONG
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDOUT_LONG
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 425
      summary: "\nLooks up a localized string similar to Standard Output.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDOUT_LONG { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDOUT_LONG As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
      language: CSharp
      name:
        CSharp: STREAM_NAME_STDOUT_SHORT
        VB: STREAM_NAME_STDOUT_SHORT
      nameWithType:
        CSharp: Resources.STREAM_NAME_STDOUT_SHORT
        VB: Resources.STREAM_NAME_STDOUT_SHORT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_STDOUT_SHORT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 434
      summary: "\nLooks up a localized string similar to StdOut.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_STDOUT_SHORT { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_STDOUT_SHORT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
      language: CSharp
      name:
        CSharp: STREAM_NAME_UNSPECIFIED_LONG
        VB: STREAM_NAME_UNSPECIFIED_LONG
      nameWithType:
        CSharp: Resources.STREAM_NAME_UNSPECIFIED_LONG
        VB: Resources.STREAM_NAME_UNSPECIFIED_LONG
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_UNSPECIFIED_LONG
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 443
      summary: "\nLooks up a localized string similar to Invalid Value.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_UNSPECIFIED_LONG { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_UNSPECIFIED_LONG As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
      language: CSharp
      name:
        CSharp: STREAM_NAME_UNSPECIFIED_SHORT
        VB: STREAM_NAME_UNSPECIFIED_SHORT
      nameWithType:
        CSharp: Resources.STREAM_NAME_UNSPECIFIED_SHORT
        VB: Resources.STREAM_NAME_UNSPECIFIED_SHORT
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAM_NAME_UNSPECIFIED_SHORT
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 452
      summary: "\nLooks up a localized string similar to Unsupported.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAM_NAME_UNSPECIFIED_SHORT { get; }
          VB: Public Shared ReadOnly Property STREAM_NAME_UNSPECIFIED_SHORT As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
      language: CSharp
      name:
        CSharp: STREAMSTATEINFO_TOSTRING_TEMPLATE
        VB: STREAMSTATEINFO_TOSTRING_TEMPLATE
      nameWithType:
        CSharp: Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
        VB: Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: STREAMSTATEINFO_TOSTRING_TEMPLATE
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 461
      summary: "\nLooks up a localized string similar to StreamID = {0} ({1}), ConsoleStreamState = {2}, RedirectFileName = {3}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string STREAMSTATEINFO_TOSTRING_TEMPLATE { get; }
          VB: Public Shared ReadOnly Property STREAMSTATEINFO_TOSTRING_TEMPLATE As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
      commentId: P:WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
      language: CSharp
      name:
        CSharp: THIS_IS_THE_LAST
        VB: THIS_IS_THE_LAST
      nameWithType:
        CSharp: Resources.THIS_IS_THE_LAST
        VB: Resources.THIS_IS_THE_LAST
      qualifiedName:
        CSharp: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
        VB: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
      type: Property
      assemblies:
      - WizardWrx.DLLConfigurationManager
      namespace: WizardWrx.DLLConfigurationManager.Properties
      source:
        id: THIS_IS_THE_LAST
        path: D:\Source_Code\Visual_Studio\Projects\WizardWrx_Libs\WizardWrx_NET_API\DLLConfigurationManager\Properties\Resources.Designer.cs
        startLine: 470
      summary: "\nLooks up a localized string similar to There are no further exceptions to report.{0}.\n"
      example: []
      syntax:
        content:
          CSharp: public static string THIS_IS_THE_LAST { get; }
          VB: Public Shared ReadOnly Property THIS_IS_THE_LAST As String
        parameters: []
        return:
          type: System.String
      overload: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
references:
  WizardWrx.Core.PropertyDefaults:
    commentId: T:WizardWrx.Core.PropertyDefaults
  WizardWrx.GenericSingletonBase`1:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:WizardWrx.GenericSingletonBase`1
  WizardWrx:
    name:
      CSharp:
      - name: WizardWrx
        nameWithType: WizardWrx
        qualifiedName: WizardWrx
      VB:
      - name: WizardWrx
        nameWithType: WizardWrx
        qualifiedName: WizardWrx
    isDefinition: true
    commentId: N:WizardWrx
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger
        name: ExceptionLogger
        nameWithType: ExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger
        name: ExceptionLogger
        nameWithType: ExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1
    parent: WizardWrx
    commentId: T:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}
  WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase<T>.s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<T>.s_genTheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase(Of T).s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of T).s_genTheOnlyInstance
    isDefinition: true
    commentId: F:WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.s_genTheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase<ExceptionLogger>.s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<WizardWrx.DLLConfigurationManager.ExceptionLogger>.s_genTheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase(Of ExceptionLogger).s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of WizardWrx.DLLConfigurationManager.ExceptionLogger).s_genTheOnlyInstance
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
    parent: WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}
    commentId: F:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.s_genTheOnlyInstance
  WizardWrx.GenericSingletonBase`1.TheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase<T>.TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<T>.TheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase(Of T).TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of T).TheOnlyInstance
    isDefinition: true
    commentId: P:WizardWrx.GenericSingletonBase`1.TheOnlyInstance
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.TheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase<ExceptionLogger>.TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<WizardWrx.DLLConfigurationManager.ExceptionLogger>.TheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase(Of ExceptionLogger).TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of WizardWrx.DLLConfigurationManager.ExceptionLogger).TheOnlyInstance
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
    parent: WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}
    commentId: P:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.ExceptionLogger}.TheOnlyInstance
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID*
        name: AppEventSourceID
        nameWithType: ExceptionLogger.AppEventSourceID
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID*
        name: AppEventSourceID
        nameWithType: ExceptionLogger.AppEventSourceID
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.AppEventSourceID
  WizardWrx.AssemblyUtils:
    name:
      CSharp:
      - name: WizardWrx.AssemblyUtils
        nameWithType: WizardWrx.AssemblyUtils
        qualifiedName: WizardWrx.AssemblyUtils
      VB:
      - name: WizardWrx.AssemblyUtils
        nameWithType: WizardWrx.AssemblyUtils
        qualifiedName: WizardWrx.AssemblyUtils
    isDefinition: true
    commentId: N:WizardWrx.AssemblyUtils
  WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID:
    name:
      CSharp:
      - id: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
        name: PESubsystemInfo.PESubsystemID
        nameWithType: PESubsystemInfo.PESubsystemID
        qualifiedName: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
      VB:
      - id: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
        name: PESubsystemInfo.PESubsystemID
        nameWithType: PESubsystemInfo.PESubsystemID
        qualifiedName: WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
    isDefinition: true
    parent: WizardWrx.AssemblyUtils
    commentId: T:WizardWrx.AssemblyUtils.PESubsystemInfo.PESubsystemID
  WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem*
        name: ApplicationSubsystem
        nameWithType: ExceptionLogger.ApplicationSubsystem
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem*
        name: ApplicationSubsystem
        nameWithType: ExceptionLogger.ApplicationSubsystem
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.ApplicationSubsystem
  WizardWrx.ConsoleStreams:
    name:
      CSharp:
      - name: WizardWrx.ConsoleStreams
        nameWithType: WizardWrx.ConsoleStreams
        qualifiedName: WizardWrx.ConsoleStreams
      VB:
      - name: WizardWrx.ConsoleStreams
        nameWithType: WizardWrx.ConsoleStreams
        qualifiedName: WizardWrx.ConsoleStreams
    isDefinition: true
    commentId: N:WizardWrx.ConsoleStreams
  WizardWrx.ConsoleStreams.ErrorMessagesInColor:
    name:
      CSharp:
      - id: WizardWrx.ConsoleStreams.ErrorMessagesInColor
        name: ErrorMessagesInColor
        nameWithType: ErrorMessagesInColor
        qualifiedName: WizardWrx.ConsoleStreams.ErrorMessagesInColor
      VB:
      - id: WizardWrx.ConsoleStreams.ErrorMessagesInColor
        name: ErrorMessagesInColor
        nameWithType: ErrorMessagesInColor
        qualifiedName: WizardWrx.ConsoleStreams.ErrorMessagesInColor
    isDefinition: true
    parent: WizardWrx.ConsoleStreams
    commentId: T:WizardWrx.ConsoleStreams.ErrorMessagesInColor
  WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors*
        name: ErrorMessageColors
        nameWithType: ExceptionLogger.ErrorMessageColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors*
        name: ErrorMessageColors
        nameWithType: ExceptionLogger.ErrorMessageColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorMessageColors
  WizardWrx.DLLConfigurationManager:
    name:
      CSharp:
      - name: WizardWrx.DLLConfigurationManager
        nameWithType: WizardWrx.DLLConfigurationManager
        qualifiedName: WizardWrx.DLLConfigurationManager
      VB:
      - name: WizardWrx.DLLConfigurationManager
        nameWithType: WizardWrx.DLLConfigurationManager
        qualifiedName: WizardWrx.DLLConfigurationManager
    isDefinition: true
    commentId: N:WizardWrx.DLLConfigurationManager
  WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
        name: ExceptionLogger.OutputOptions
        nameWithType: ExceptionLogger.OutputOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
        name: ExceptionLogger.OutputOptions
        nameWithType: ExceptionLogger.OutputOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions
  WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags*
        name: OptionFlags
        nameWithType: ExceptionLogger.OptionFlags
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags*
        name: OptionFlags
        nameWithType: ExceptionLogger.OptionFlags
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.OptionFlags
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected*
        name: StdErrIsRedirected
        nameWithType: ExceptionLogger.StdErrIsRedirected
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected*
        name: StdErrIsRedirected
        nameWithType: ExceptionLogger.StdErrIsRedirected
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.StdErrIsRedirected
  WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected*
        name: StdOutIsRedirected
        nameWithType: ExceptionLogger.StdOutIsRedirected
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected*
        name: StdOutIsRedirected
        nameWithType: ExceptionLogger.StdOutIsRedirected
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.StdOutIsRedirected
  WizardWrx.DLLConfigurationManager.ExceptionLogger:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger
        name: ExceptionLogger
        nameWithType: ExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger
        name: ExceptionLogger
        nameWithType: ExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger
  WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
        name: GetTheSingleInstance
        nameWithType: ExceptionLogger.GetTheSingleInstance
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance*
        name: GetTheSingleInstance
        nameWithType: ExceptionLogger.GetTheSingleInstance
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetTheSingleInstance
  System.ObsoleteAttribute:
    name:
      CSharp:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
      VB:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ObsoleteAttribute
  System.ObsoleteAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ObsoleteAttribute
    commentId: M:System.ObsoleteAttribute.#ctor(System.String)
  WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors*
        name: RestoreDefaultColors
        nameWithType: ExceptionLogger.RestoreDefaultColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors*
        name: RestoreDefaultColors
        nameWithType: ExceptionLogger.RestoreDefaultColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultColors
  ? WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
  : commentId: M:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage(WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
  WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage*
        name: GetReservedErrorMessage
        nameWithType: ExceptionLogger.GetReservedErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage*
        name: GetReservedErrorMessage
        nameWithType: ExceptionLogger.GetReservedErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetReservedErrorMessage
  WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
        name: ExceptionLogger.ErrorExitOptions
        nameWithType: ExceptionLogger.ErrorExitOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
        name: ExceptionLogger.ErrorExitOptions
        nameWithType: ExceptionLogger.ErrorExitOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions
  WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay*
        name: OutputOptionsDisplay
        nameWithType: ExceptionLogger.OutputOptionsDisplay
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay*
        name: OutputOptionsDisplay
        nameWithType: ExceptionLogger.OutputOptionsDisplay
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionsDisplay
  WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff*
        name: OutputOptionTurnOff
        nameWithType: ExceptionLogger.OutputOptionTurnOff
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff*
        name: OutputOptionTurnOff
        nameWithType: ExceptionLogger.OutputOptionTurnOff
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOff
  WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn*
        name: OutputOptionTurnOn
        nameWithType: ExceptionLogger.OutputOptionTurnOn
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn*
        name: OutputOptionTurnOn
        nameWithType: ExceptionLogger.OutputOptionTurnOn
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptionTurnOn
  WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions*
        name: RestoreDefaultOptions
        nameWithType: ExceptionLogger.RestoreDefaultOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions*
        name: RestoreDefaultOptions
        nameWithType: ExceptionLogger.RestoreDefaultOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreDefaultOptions
  WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions*
        name: RestoreSavedOptions
        nameWithType: ExceptionLogger.RestoreSavedOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions*
        name: RestoreSavedOptions
        nameWithType: ExceptionLogger.RestoreSavedOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedOptions
  WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors*
        name: RestoreSavedColors
        nameWithType: ExceptionLogger.RestoreSavedColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors*
        name: RestoreSavedColors
        nameWithType: ExceptionLogger.RestoreSavedColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.RestoreSavedColors
  WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors*
        name: SaveCurrentColors
        nameWithType: ExceptionLogger.SaveCurrentColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors*
        name: SaveCurrentColors
        nameWithType: ExceptionLogger.SaveCurrentColors
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentColors
  WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions*
        name: SaveCurrentOptions
        nameWithType: ExceptionLogger.SaveCurrentOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions*
        name: SaveCurrentOptions
        nameWithType: ExceptionLogger.SaveCurrentOptions
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.SaveCurrentOptions
  WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage*
        name: GetSpecifiedReservedErrorMessage
        nameWithType: ExceptionLogger.GetSpecifiedReservedErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage*
        name: GetSpecifiedReservedErrorMessage
        nameWithType: ExceptionLogger.GetSpecifiedReservedErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.GetSpecifiedReservedErrorMessage
  WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite*
        name: TimeStampedTraceWrite
        nameWithType: ExceptionLogger.TimeStampedTraceWrite
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite*
        name: TimeStampedTraceWrite
        nameWithType: ExceptionLogger.TimeStampedTraceWrite
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.TimeStampedTraceWrite
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
        name: ReportException
        nameWithType: ExceptionLogger.ReportException
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException*
        name: ReportException
        nameWithType: ExceptionLogger.ReportException
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.ReportException
  System.ArgumentException:
    name:
      CSharp:
      - id: System.ArgumentException
        name: ArgumentException
        nameWithType: ArgumentException
        qualifiedName: System.ArgumentException
        isExternal: true
      VB:
      - id: System.ArgumentException
        name: ArgumentException
        nameWithType: ArgumentException
        qualifiedName: System.ArgumentException
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ArgumentException
  System.ArgumentOutOfRangeException:
    name:
      CSharp:
      - id: System.ArgumentOutOfRangeException
        name: ArgumentOutOfRangeException
        nameWithType: ArgumentOutOfRangeException
        qualifiedName: System.ArgumentOutOfRangeException
        isExternal: true
      VB:
      - id: System.ArgumentOutOfRangeException
        name: ArgumentOutOfRangeException
        nameWithType: ArgumentOutOfRangeException
        qualifiedName: System.ArgumentOutOfRangeException
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ArgumentOutOfRangeException
  System.ArgumentNullException:
    name:
      CSharp:
      - id: System.ArgumentNullException
        name: ArgumentNullException
        nameWithType: ArgumentNullException
        qualifiedName: System.ArgumentNullException
        isExternal: true
      VB:
      - id: System.ArgumentNullException
        name: ArgumentNullException
        nameWithType: ArgumentNullException
        qualifiedName: System.ArgumentNullException
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ArgumentNullException
  System.ObjectDisposedException:
    name:
      CSharp:
      - id: System.ObjectDisposedException
        name: ObjectDisposedException
        nameWithType: ObjectDisposedException
        qualifiedName: System.ObjectDisposedException
        isExternal: true
      VB:
      - id: System.ObjectDisposedException
        name: ObjectDisposedException
        nameWithType: ObjectDisposedException
        qualifiedName: System.ObjectDisposedException
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ObjectDisposedException
  System.IO:
    name:
      CSharp:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
        isExternal: true
      VB:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
    isDefinition: true
    commentId: N:System.IO
  System.IO.IOException:
    name:
      CSharp:
      - id: System.IO.IOException
        name: IOException
        nameWithType: IOException
        qualifiedName: System.IO.IOException
        isExternal: true
      VB:
      - id: System.IO.IOException
        name: IOException
        nameWithType: IOException
        qualifiedName: System.IO.IOException
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.IOException
  System.IO.FileInfo:
    name:
      CSharp:
      - id: System.IO.FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: System.IO.FileInfo
        isExternal: true
      VB:
      - id: System.IO.FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: System.IO.FileInfo
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.FileInfo
  System.FormatException:
    name:
      CSharp:
      - id: System.FormatException
        name: FormatException
        nameWithType: FormatException
        qualifiedName: System.FormatException
        isExternal: true
      VB:
      - id: System.FormatException
        name: FormatException
        nameWithType: FormatException
        qualifiedName: System.FormatException
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.FormatException
  WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile*
        name: s_strSettingsOmittedFromConfigFile
        nameWithType: ExceptionLogger.s_strSettingsOmittedFromConfigFile
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile*
        name: s_strSettingsOmittedFromConfigFile
        nameWithType: ExceptionLogger.s_strSettingsOmittedFromConfigFile
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.ExceptionLogger.s_strSettingsOmittedFromConfigFile
  WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider):
    name:
      CSharp:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull<T>
        nameWithType: StringExtensions.RenderEvenWhenNull<T>
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull(Of T)
        nameWithType: StringExtensions.RenderEvenWhenNull(Of T)
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
  WizardWrx.StringExtensions:
    name:
      CSharp:
      - id: WizardWrx.StringExtensions
        name: StringExtensions
        nameWithType: StringExtensions
        qualifiedName: WizardWrx.StringExtensions
      VB:
      - id: WizardWrx.StringExtensions
        name: StringExtensions
        nameWithType: StringExtensions
        qualifiedName: WizardWrx.StringExtensions
    isDefinition: true
    parent: WizardWrx
    commentId: T:WizardWrx.StringExtensions
  ? WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
  : name:
      CSharp:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull<ExceptionLogger.OutputOptions>
        nameWithType: StringExtensions.RenderEvenWhenNull<ExceptionLogger.OutputOptions>
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull<WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull(Of ExceptionLogger.OutputOptions)
        nameWithType: StringExtensions.RenderEvenWhenNull(Of ExceptionLogger.OutputOptions)
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull(Of WizardWrx.DLLConfigurationManager.ExceptionLogger.OutputOptions)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
    parent: WizardWrx.StringExtensions
    commentId: M:WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
  System.FlagsAttribute:
    name:
      CSharp:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
      VB:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.FlagsAttribute
  System.FlagsAttribute.#ctor:
    name:
      CSharp:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.FlagsAttribute
    commentId: M:System.FlagsAttribute.#ctor
  ? WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
  : name:
      CSharp:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull<ExceptionLogger.ErrorExitOptions>
        nameWithType: StringExtensions.RenderEvenWhenNull<ExceptionLogger.ErrorExitOptions>
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull<WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull(Of ExceptionLogger.ErrorExitOptions)
        nameWithType: StringExtensions.RenderEvenWhenNull(Of ExceptionLogger.ErrorExitOptions)
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull(Of WizardWrx.DLLConfigurationManager.ExceptionLogger.ErrorExitOptions)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
    parent: WizardWrx.StringExtensions
    commentId: M:WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
  ? WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
  : name:
      CSharp:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull<ExceptionLogger.ScrollUpResult>
        nameWithType: StringExtensions.RenderEvenWhenNull<ExceptionLogger.ScrollUpResult>
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull<WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull(Of ExceptionLogger.ScrollUpResult)
        nameWithType: StringExtensions.RenderEvenWhenNull(Of ExceptionLogger.ScrollUpResult)
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull(Of WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
    parent: WizardWrx.StringExtensions
    commentId: M:WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
  WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
        name: ExceptionLogger.ScrollUpResult
        nameWithType: ExceptionLogger.ScrollUpResult
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
      VB:
      - id: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
        name: ExceptionLogger.ScrollUpResult
        nameWithType: ExceptionLogger.ScrollUpResult
        qualifiedName: WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.ExceptionLogger.ScrollUpResult
  WizardWrx.DLLConfigurationManager.IniFileReader.#ctor*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.#ctor*
        name: IniFileReader
        nameWithType: IniFileReader.IniFileReader
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.IniFileReader
      VB:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.#ctor*
        name: IniFileReader
        nameWithType: IniFileReader.IniFileReader
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.IniFileReader
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.IniFileReader.#ctor
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames*
        name: GetSectionNames
        nameWithType: IniFileReader.GetSectionNames
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames
      VB:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames*
        name: GetSectionNames
        nameWithType: IniFileReader.GetSectionNames
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.IniFileReader.GetSectionNames
  WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames*
        name: GetEntryNames
        nameWithType: IniFileReader.GetEntryNames
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames
      VB:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames*
        name: GetEntryNames
        nameWithType: IniFileReader.GetEntryNames
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryNames
  WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue*
        name: GetEntryValue
        nameWithType: IniFileReader.GetEntryValue
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue
      VB:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue*
        name: GetEntryValue
        nameWithType: IniFileReader.GetEntryValue
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.IniFileReader.GetEntryValue
  WizardWrx.DLLConfigurationManager.IniFileReader:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader
        name: IniFileReader
        nameWithType: IniFileReader
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader
      VB:
      - id: WizardWrx.DLLConfigurationManager.IniFileReader
        name: IniFileReader
        nameWithType: IniFileReader
        qualifiedName: WizardWrx.DLLConfigurationManager.IniFileReader
    isDefinition: true
    commentId: T:WizardWrx.DLLConfigurationManager.IniFileReader
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: WizardWrx.DLLConfigurationManager.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: WizardWrx.GenericSingletonBase`1
        name: GenericSingletonBase
        nameWithType: GenericSingletonBase
        qualifiedName: WizardWrx.GenericSingletonBase
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: WizardWrx.DLLConfigurationManager.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1
    parent: WizardWrx
    commentId: T:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.s_genTheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase<StateManager>.s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<WizardWrx.DLLConfigurationManager.StateManager>.s_genTheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
        name: s_genTheOnlyInstance
        nameWithType: GenericSingletonBase(Of StateManager).s_genTheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of WizardWrx.DLLConfigurationManager.StateManager).s_genTheOnlyInstance
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1.s_genTheOnlyInstance
    parent: WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}
    commentId: F:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.s_genTheOnlyInstance
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.TheOnlyInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase<StateManager>.TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase<WizardWrx.DLLConfigurationManager.StateManager>.TheOnlyInstance
      VB:
      - id: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
        name: TheOnlyInstance
        nameWithType: GenericSingletonBase(Of StateManager).TheOnlyInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of WizardWrx.DLLConfigurationManager.StateManager).TheOnlyInstance
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1.TheOnlyInstance
    parent: WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}
    commentId: P:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.TheOnlyInstance
  WizardWrx.GenericSingletonBase`1.GetTheSingleInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
        name: GetTheSingleInstance
        nameWithType: GenericSingletonBase<T>.GetTheSingleInstance
        qualifiedName: WizardWrx.GenericSingletonBase<T>.GetTheSingleInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
        name: GetTheSingleInstance
        nameWithType: GenericSingletonBase(Of T).GetTheSingleInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of T).GetTheSingleInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
  WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.GetTheSingleInstance:
    name:
      CSharp:
      - id: WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
        name: GetTheSingleInstance
        nameWithType: GenericSingletonBase<StateManager>.GetTheSingleInstance
        qualifiedName: WizardWrx.GenericSingletonBase<WizardWrx.DLLConfigurationManager.StateManager>.GetTheSingleInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
        name: GetTheSingleInstance
        nameWithType: GenericSingletonBase(Of StateManager).GetTheSingleInstance
        qualifiedName: WizardWrx.GenericSingletonBase(Of WizardWrx.DLLConfigurationManager.StateManager).GetTheSingleInstance
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.GenericSingletonBase`1.GetTheSingleInstance
    parent: WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}
    commentId: M:WizardWrx.GenericSingletonBase{WizardWrx.DLLConfigurationManager.StateManager}.GetTheSingleInstance
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  WizardWrx.DLLConfigurationManager.StateManager:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.StateManager
  System.Reflection:
    name:
      CSharp:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
        isExternal: true
      VB:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
    isDefinition: true
    commentId: N:System.Reflection
  System.Reflection.Assembly:
    name:
      CSharp:
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      VB:
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
    isDefinition: true
    parent: System.Reflection
    commentId: T:System.Reflection.Assembly
  WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance*
        name: GetTheSingleInstance
        nameWithType: StateManager.GetTheSingleInstance
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance*
        name: GetTheSingleInstance
        nameWithType: StateManager.GetTheSingleInstance
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetTheSingleInstance
  WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN*
        name: GetAssemblyFQFN
        nameWithType: StateManager.GetAssemblyFQFN
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN*
        name: GetAssemblyFQFN
        nameWithType: StateManager.GetAssemblyFQFN
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyFQFN
  WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion*
        name: GetAssemblyProductAndVersion
        nameWithType: StateManager.GetAssemblyProductAndVersion
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion*
        name: GetAssemblyProductAndVersion
        nameWithType: StateManager.GetAssemblyProductAndVersion
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
  WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName:
    commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
  WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
        name: StateManager.AssemblyVersionRequest
        nameWithType: StateManager.AssemblyVersionRequest
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
        name: StateManager.AssemblyVersionRequest
        nameWithType: StateManager.AssemblyVersionRequest
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
    isDefinition: true
    parent: WizardWrx.DLLConfigurationManager
    commentId: T:WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest
  WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID:
    commentId: P:WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
  WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString:
    commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
  WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID*
        name: GetAppSubsystemID
        nameWithType: StateManager.GetAppSubsystemID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID*
        name: GetAppSubsystemID
        nameWithType: StateManager.GetAppSubsystemID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
  WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString*
        name: GetAppSubsystemString
        nameWithType: StateManager.GetAppSubsystemString
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString*
        name: GetAppSubsystemString
        nameWithType: StateManager.GetAppSubsystemString
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemString
  WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable*
        name: LoadErrorMessageTable
        nameWithType: StateManager.LoadErrorMessageTable
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable*
        name: LoadErrorMessageTable
        nameWithType: StateManager.LoadErrorMessageTable
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.LoadErrorMessageTable
  WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages*
        name: AppErrorMessages
        nameWithType: StateManager.AppErrorMessages
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages*
        name: AppErrorMessages
        nameWithType: StateManager.AppErrorMessages
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppErrorMessages
  WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode*
        name: AppReturnCode
        nameWithType: StateManager.AppReturnCode
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode*
        name: AppReturnCode
        nameWithType: StateManager.AppReturnCode
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppReturnCode
  WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName*
        name: AppRootAssemblyFileBaseName
        nameWithType: StateManager.AppRootAssemblyFileBaseName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName*
        name: AppRootAssemblyFileBaseName
        nameWithType: StateManager.AppRootAssemblyFileBaseName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileBaseName
  WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName*
        name: AppRootAssemblyFileDirName
        nameWithType: StateManager.AppRootAssemblyFileDirName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName*
        name: AppRootAssemblyFileDirName
        nameWithType: StateManager.AppRootAssemblyFileDirName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileDirName
  WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName*
        name: AppRootAssemblyFileName
        nameWithType: StateManager.AppRootAssemblyFileName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName*
        name: AppRootAssemblyFileName
        nameWithType: StateManager.AppRootAssemblyFileName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyFileName
  WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion:
    commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion
  ? WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
  : commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAssemblyProductAndVersion(WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
        isExternal: true
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._AssemblyName:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._AssemblyName
        name: _AssemblyName
        nameWithType: _AssemblyName
        qualifiedName: System.Runtime.InteropServices._AssemblyName
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._AssemblyName
        name: _AssemblyName
        nameWithType: _AssemblyName
        qualifiedName: System.Runtime.InteropServices._AssemblyName
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._AssemblyName
  WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName*
        name: AppRootAssemblyName
        nameWithType: StateManager.AppRootAssemblyName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName*
        name: AppRootAssemblyName
        nameWithType: StateManager.AppRootAssemblyName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppRootAssemblyName
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal*
        name: AppStartupTimeLocal
        nameWithType: StateManager.AppStartupTimeLocal
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal*
        name: AppStartupTimeLocal
        nameWithType: StateManager.AppStartupTimeLocal
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeLocal
  WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc*
        name: AppStartupTimeUtc
        nameWithType: StateManager.AppStartupTimeUtc
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc*
        name: AppStartupTimeUtc
        nameWithType: StateManager.AppStartupTimeUtc
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppStartupTimeUtc
  System.TimeSpan:
    name:
      CSharp:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
      VB:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.TimeSpan
  WizardWrx.DLLConfigurationManager.StateManager.AppUptime*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppUptime*
        name: AppUptime
        nameWithType: StateManager.AppUptime
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppUptime
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppUptime*
        name: AppUptime
        nameWithType: StateManager.AppUptime
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppUptime
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppUptime
  WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID:
    commentId: M:WizardWrx.DLLConfigurationManager.StateManager.GetAppSubsystemID
  System.Int16:
    name:
      CSharp:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      VB:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int16
  WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID*
        name: AppSubsystemID
        nameWithType: StateManager.AppSubsystemID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID*
        name: AppSubsystemID
        nameWithType: StateManager.AppSubsystemID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppSubsystemID
  WizardWrx.Core:
    name:
      CSharp:
      - name: WizardWrx.Core
        nameWithType: WizardWrx.Core
        qualifiedName: WizardWrx.Core
      VB:
      - name: WizardWrx.Core
        nameWithType: WizardWrx.Core
        qualifiedName: WizardWrx.Core
    isDefinition: true
    commentId: N:WizardWrx.Core
  WizardWrx.Core.TimeDisplayFormatter:
    name:
      CSharp:
      - id: WizardWrx.Core.TimeDisplayFormatter
        name: TimeDisplayFormatter
        nameWithType: TimeDisplayFormatter
        qualifiedName: WizardWrx.Core.TimeDisplayFormatter
      VB:
      - id: WizardWrx.Core.TimeDisplayFormatter
        name: TimeDisplayFormatter
        nameWithType: TimeDisplayFormatter
        qualifiedName: WizardWrx.Core.TimeDisplayFormatter
    isDefinition: true
    parent: WizardWrx.Core
    commentId: T:WizardWrx.Core.TimeDisplayFormatter
  WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat*
        name: ConsoleMessageTimeFormat
        nameWithType: StateManager.ConsoleMessageTimeFormat
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat*
        name: ConsoleMessageTimeFormat
        nameWithType: StateManager.ConsoleMessageTimeFormat
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.ConsoleMessageTimeFormat
  WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID*
        name: DefaultEventSourceID
        nameWithType: StateManager.DefaultEventSourceID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID*
        name: DefaultEventSourceID
        nameWithType: StateManager.DefaultEventSourceID
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.DefaultEventSourceID
  WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName*
        name: InitialWorkingDirectoryName
        nameWithType: StateManager.InitialWorkingDirectoryName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName*
        name: InitialWorkingDirectoryName
        nameWithType: StateManager.InitialWorkingDirectoryName
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.InitialWorkingDirectoryName
  WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError*
        name: DWLastDllError
        nameWithType: StateManager.DWLastDllError
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError*
        name: DWLastDllError
        nameWithType: StateManager.DWLastDllError
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.DWLastDllError
  WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger*
        name: AppExceptionLogger
        nameWithType: StateManager.AppExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger*
        name: AppExceptionLogger
        nameWithType: StateManager.AppExceptionLogger
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.AppExceptionLogger
  WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime*
        name: ShowUTCTime
        nameWithType: StateManager.ShowUTCTime
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime*
        name: ShowUTCTime
        nameWithType: StateManager.ShowUTCTime
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.ShowUTCTime
  WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle:
    name:
      CSharp:
      - id: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
        name: StandardHandleInfo.StandardConsoleHandle
        nameWithType: StandardHandleInfo.StandardConsoleHandle
        qualifiedName: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
      VB:
      - id: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
        name: StandardHandleInfo.StandardConsoleHandle
        nameWithType: StandardHandleInfo.StandardConsoleHandle
        qualifiedName: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
    isDefinition: true
    parent: WizardWrx.ConsoleStreams
    commentId: T:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle
  WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN*
        name: GetStdHandleFQFN
        nameWithType: StateManager.GetStdHandleFQFN
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN*
        name: GetStdHandleFQFN
        nameWithType: StateManager.GetStdHandleFQFN
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.GetStdHandleFQFN
  WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState:
    name:
      CSharp:
      - id: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
        name: StandardHandleInfo.StandardHandleState
        nameWithType: StandardHandleInfo.StandardHandleState
        qualifiedName: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
      VB:
      - id: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
        name: StandardHandleInfo.StandardHandleState
        nameWithType: StandardHandleInfo.StandardHandleState
        qualifiedName: WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
    isDefinition: true
    parent: WizardWrx.ConsoleStreams
    commentId: T:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState
  WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState*
        name: StandardHandleState
        nameWithType: StateManager.StandardHandleState
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState*
        name: StandardHandleState
        nameWithType: StateManager.StandardHandleState
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.StandardHandleState
  WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage*
        name: FormatSystemErrorMessage
        nameWithType: StateManager.FormatSystemErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage
      VB:
      - id: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage*
        name: FormatSystemErrorMessage
        nameWithType: StateManager.FormatSystemErrorMessage
        qualifiedName: WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.StateManager.FormatSystemErrorMessage
  ? WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest.WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
  : name:
      CSharp:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull<StateManager.AssemblyVersionRequest>
        nameWithType: StringExtensions.RenderEvenWhenNull<StateManager.AssemblyVersionRequest>
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull<WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: WizardWrx.StringExtensions.RenderEvenWhenNull``1(System.String,System.String,System.IFormatProvider)
        name: RenderEvenWhenNull(Of StateManager.AssemblyVersionRequest)
        nameWithType: StringExtensions.RenderEvenWhenNull(Of StateManager.AssemblyVersionRequest)
        qualifiedName: WizardWrx.StringExtensions.RenderEvenWhenNull(Of WizardWrx.DLLConfigurationManager.StateManager.AssemblyVersionRequest)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IFormatProvider
        name: IFormatProvider
        nameWithType: IFormatProvider
        qualifiedName: System.IFormatProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
    parent: WizardWrx.StringExtensions
    commentId: M:WizardWrx.StringExtensions.RenderEvenWhenNull``1(``0,System.String,System.String,System.IFormatProvider)
  System.Resources:
    name:
      CSharp:
      - name: System.Resources
        nameWithType: System.Resources
        qualifiedName: System.Resources
        isExternal: true
      VB:
      - name: System.Resources
        nameWithType: System.Resources
        qualifiedName: System.Resources
    isDefinition: true
    commentId: N:System.Resources
  System.Resources.ResourceManager:
    name:
      CSharp:
      - id: System.Resources.ResourceManager
        name: ResourceManager
        nameWithType: ResourceManager
        qualifiedName: System.Resources.ResourceManager
        isExternal: true
      VB:
      - id: System.Resources.ResourceManager
        name: ResourceManager
        nameWithType: ResourceManager
        qualifiedName: System.Resources.ResourceManager
        isExternal: true
    isDefinition: true
    parent: System.Resources
    commentId: T:System.Resources.ResourceManager
  WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager*
        name: ResourceManager
        nameWithType: Resources.ResourceManager
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager*
        name: ResourceManager
        nameWithType: Resources.ResourceManager
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ResourceManager
  System.Globalization:
    name:
      CSharp:
      - name: System.Globalization
        nameWithType: System.Globalization
        qualifiedName: System.Globalization
        isExternal: true
      VB:
      - name: System.Globalization
        nameWithType: System.Globalization
        qualifiedName: System.Globalization
    isDefinition: true
    commentId: N:System.Globalization
  System.Globalization.CultureInfo:
    name:
      CSharp:
      - id: System.Globalization.CultureInfo
        name: CultureInfo
        nameWithType: CultureInfo
        qualifiedName: System.Globalization.CultureInfo
        isExternal: true
      VB:
      - id: System.Globalization.CultureInfo
        name: CultureInfo
        nameWithType: CultureInfo
        qualifiedName: System.Globalization.CultureInfo
        isExternal: true
    isDefinition: true
    parent: System.Globalization
    commentId: T:System.Globalization.CultureInfo
  WizardWrx.DLLConfigurationManager.Properties.Resources.Culture*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture*
        name: Culture
        nameWithType: Resources.Culture
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture*
        name: Culture
        nameWithType: Resources.Culture
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.Culture
  WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID*
        name: DEFAULT_EVENT_SOURCE_ID
        nameWithType: Resources.DEFAULT_EVENT_SOURCE_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID*
        name: DEFAULT_EVENT_SOURCE_ID
        nameWithType: Resources.DEFAULT_EVENT_SOURCE_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.DEFAULT_EVENT_SOURCE_ID
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL*
        name: ERRMSG_ARGNAME_TPL
        nameWithType: Resources.ERRMSG_ARGNAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL*
        name: ERRMSG_ARGNAME_TPL
        nameWithType: Resources.ERRMSG_ARGNAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGNAME_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL*
        name: ERRMSG_ARGVALUE_TPL
        nameWithType: Resources.ERRMSG_ARGVALUE_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL*
        name: ERRMSG_ARGVALUE_TPL
        nameWithType: Resources.ERRMSG_ARGVALUE_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ARGVALUE_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM*
        name: ERRMSG_ASM_SUBSYSTEM
        nameWithType: Resources.ERRMSG_ASM_SUBSYSTEM
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM*
        name: ERRMSG_ASM_SUBSYSTEM
        nameWithType: Resources.ERRMSG_ASM_SUBSYSTEM
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_ASM_SUBSYSTEM
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY*
        name: ERRMSG_CONFIG_FILE_IS_EMPTY
        nameWithType: Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY*
        name: ERRMSG_CONFIG_FILE_IS_EMPTY
        nameWithType: Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_CONFIG_FILE_IS_EMPTY
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL*
        name: ERRMSG_EX_EVTMSG_TPL
        nameWithType: Resources.ERRMSG_EX_EVTMSG_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL*
        name: ERRMSG_EX_EVTMSG_TPL
        nameWithType: Resources.ERRMSG_EX_EVTMSG_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_EVTMSG_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL*
        name: ERRMSG_EX_MSG_TPL
        nameWithType: Resources.ERRMSG_EX_MSG_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL*
        name: ERRMSG_EX_MSG_TPL
        nameWithType: Resources.ERRMSG_EX_MSG_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_EX_MSG_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL*
        name: ERRMSG_FILENAME_TPL
        nameWithType: Resources.ERRMSG_FILENAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL*
        name: ERRMSG_FILENAME_TPL
        nameWithType: Resources.ERRMSG_FILENAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FILENAME_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL*
        name: ERRMSG_FORMATSTRING_TPL
        nameWithType: Resources.ERRMSG_FORMATSTRING_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL*
        name: ERRMSG_FORMATSTRING_TPL
        nameWithType: Resources.ERRMSG_FORMATSTRING_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_FORMATSTRING_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT*
        name: ERRMSG_HRESULT
        nameWithType: Resources.ERRMSG_HRESULT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT*
        name: ERRMSG_HRESULT
        nameWithType: Resources.ERRMSG_HRESULT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_HRESULT
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER*
        name: ERRMSG_INNER
        nameWithType: Resources.ERRMSG_INNER
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER*
        name: ERRMSG_INNER
        nameWithType: Resources.ERRMSG_INNER
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INNER
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO*
        name: ERRMSG_INV_TZINFO
        nameWithType: Resources.ERRMSG_INV_TZINFO
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO*
        name: ERRMSG_INV_TZINFO
        nameWithType: Resources.ERRMSG_INV_TZINFO
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INV_TZINFO
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS*
        name: ERRMSG_INVALID_ERROREXITOPTIONS
        nameWithType: Resources.ERRMSG_INVALID_ERROREXITOPTIONS
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS*
        name: ERRMSG_INVALID_ERROREXITOPTIONS
        nameWithType: Resources.ERRMSG_INVALID_ERROREXITOPTIONS
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_INVALID_ERROREXITOPTIONS
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD*
        name: ERRMSG_METHOD
        nameWithType: Resources.ERRMSG_METHOD
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD*
        name: ERRMSG_METHOD
        nameWithType: Resources.ERRMSG_METHOD
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_METHOD
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE*
        name: ERRMSG_MISSING_CONFIG_FILE
        nameWithType: Resources.ERRMSG_MISSING_CONFIG_FILE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE*
        name: ERRMSG_MISSING_CONFIG_FILE
        nameWithType: Resources.ERRMSG_MISSING_CONFIG_FILE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_MISSING_CONFIG_FILE
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY*
        name: ERRMSG_NO_MEMORY
        nameWithType: Resources.ERRMSG_NO_MEMORY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY*
        name: ERRMSG_NO_MEMORY
        nameWithType: Resources.ERRMSG_NO_MEMORY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NO_MEMORY
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID*
        name: ERRMSG_NULL_TZ_ID
        nameWithType: Resources.ERRMSG_NULL_TZ_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID*
        name: ERRMSG_NULL_TZ_ID
        nameWithType: Resources.ERRMSG_NULL_TZ_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_NULL_TZ_ID
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL*
        name: ERRMSG_OBJNAME_TPL
        nameWithType: Resources.ERRMSG_OBJNAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL*
        name: ERRMSG_OBJNAME_TPL
        nameWithType: Resources.ERRMSG_OBJNAME_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_OBJNAME_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME*
        name: ERRMSG_RUNTIME
        nameWithType: Resources.ERRMSG_RUNTIME
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME*
        name: ERRMSG_RUNTIME
        nameWithType: Resources.ERRMSG_RUNTIME
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG*
        name: ERRMSG_RUNTIME_SEE_EVENT_LOG
        nameWithType: Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG*
        name: ERRMSG_RUNTIME_SEE_EVENT_LOG
        nameWithType: Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_EVENT_LOG
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE*
        name: ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        nameWithType: Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE*
        name: ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        nameWithType: Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_RUNTIME_SEE_MESSAGE_ABOVE
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY*
        name: ERRMSG_SECURITY
        nameWithType: Resources.ERRMSG_SECURITY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY*
        name: ERRMSG_SECURITY
        nameWithType: Resources.ERRMSG_SECURITY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SECURITY
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE*
        name: ERRMSG_SOURCE
        nameWithType: Resources.ERRMSG_SOURCE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE*
        name: ERRMSG_SOURCE
        nameWithType: Resources.ERRMSG_SOURCE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_SOURCE
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE*
        name: ERRMSG_STD_HANDLE_STATE
        nameWithType: Resources.ERRMSG_STD_HANDLE_STATE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE*
        name: ERRMSG_STD_HANDLE_STATE
        nameWithType: Resources.ERRMSG_STD_HANDLE_STATE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_STD_HANDLE_STATE
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND*
        name: ERRMSG_TZ_NOT_FOUND
        nameWithType: Resources.ERRMSG_TZ_NOT_FOUND
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND*
        name: ERRMSG_TZ_NOT_FOUND
        nameWithType: Resources.ERRMSG_TZ_NOT_FOUND
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_TZ_NOT_FOUND
  WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED*
        name: ERRMSG_UNBALANCED
        nameWithType: Resources.ERRMSG_UNBALANCED
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED*
        name: ERRMSG_UNBALANCED
        nameWithType: Resources.ERRMSG_UNBALANCED
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.ERRMSG_UNBALANCED
  WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING*
        name: EXCEPTION_DLL_CONFIG_IS_MISSING
        nameWithType: Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING*
        name: EXCEPTION_DLL_CONFIG_IS_MISSING
        nameWithType: Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_DLL_CONFIG_IS_MISSING
  WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE*
        name: EXCEPTION_MESSAGE_NULL_REFERENCE
        nameWithType: Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE*
        name: EXCEPTION_MESSAGE_NULL_REFERENCE
        nameWithType: Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.EXCEPTION_MESSAGE_NULL_REFERENCE
  WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY*
        name: MSG_APP_CHARACTER_MODE_APPS_ONLY
        nameWithType: Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY*
        name: MSG_APP_CHARACTER_MODE_APPS_ONLY
        nameWithType: Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_APP_CHARACTER_MODE_APPS_ONLY
  WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE*
        name: MSG_CONSOLE_HAS_STD_HANDLE
        nameWithType: Resources.MSG_CONSOLE_HAS_STD_HANDLE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE*
        name: MSG_CONSOLE_HAS_STD_HANDLE
        nameWithType: Resources.MSG_CONSOLE_HAS_STD_HANDLE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_CONSOLE_HAS_STD_HANDLE
  WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO*
        name: MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        nameWithType: Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO*
        name: MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        nameWithType: Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_MUST_INITIALIZE_PESUBSYSTEMINFO
  WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM*
        name: MSG_UNSUPPORTED_PE_SUBSYSTEM
        nameWithType: Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM*
        name: MSG_UNSUPPORTED_PE_SUBSYSTEM
        nameWithType: Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_UNSUPPORTED_PE_SUBSYSTEM
  WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID*
        name: MSG_XLATE_SUBSYST_INVALID_ID
        nameWithType: Resources.MSG_XLATE_SUBSYST_INVALID_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID*
        name: MSG_XLATE_SUBSYST_INVALID_ID
        nameWithType: Resources.MSG_XLATE_SUBSYST_INVALID_ID
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.MSG_XLATE_SUBSYST_INVALID_ID
  WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT*
        name: OUTPUT_OPTIONS_DISPLAY_FORMAT
        nameWithType: Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT*
        name: OUTPUT_OPTIONS_DISPLAY_FORMAT
        nameWithType: Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.OUTPUT_OPTIONS_DISPLAY_FORMAT
  WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL*
        name: PRODUCT_NAME_AND_VERSION_TPL
        nameWithType: Resources.PRODUCT_NAME_AND_VERSION_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL*
        name: PRODUCT_NAME_AND_VERSION_TPL
        nameWithType: Resources.PRODUCT_NAME_AND_VERSION_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.PRODUCT_NAME_AND_VERSION_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL*
        name: STACKTRACE_TPL
        nameWithType: Resources.STACKTRACE_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL*
        name: STACKTRACE_TPL
        nameWithType: Resources.STACKTRACE_TPL
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STACKTRACE_TPL
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG*
        name: STREAM_NAME_STDERR_LONG
        nameWithType: Resources.STREAM_NAME_STDERR_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG*
        name: STREAM_NAME_STDERR_LONG
        nameWithType: Resources.STREAM_NAME_STDERR_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_LONG
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT*
        name: STREAM_NAME_STDERR_SHORT
        nameWithType: Resources.STREAM_NAME_STDERR_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT*
        name: STREAM_NAME_STDERR_SHORT
        nameWithType: Resources.STREAM_NAME_STDERR_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDERR_SHORT
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG*
        name: STREAM_NAME_STDIN_LONG
        nameWithType: Resources.STREAM_NAME_STDIN_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG*
        name: STREAM_NAME_STDIN_LONG
        nameWithType: Resources.STREAM_NAME_STDIN_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_LONG
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT*
        name: STREAM_NAME_STDIN_SHORT
        nameWithType: Resources.STREAM_NAME_STDIN_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT*
        name: STREAM_NAME_STDIN_SHORT
        nameWithType: Resources.STREAM_NAME_STDIN_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDIN_SHORT
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG*
        name: STREAM_NAME_STDOUT_LONG
        nameWithType: Resources.STREAM_NAME_STDOUT_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG*
        name: STREAM_NAME_STDOUT_LONG
        nameWithType: Resources.STREAM_NAME_STDOUT_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_LONG
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT*
        name: STREAM_NAME_STDOUT_SHORT
        nameWithType: Resources.STREAM_NAME_STDOUT_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT*
        name: STREAM_NAME_STDOUT_SHORT
        nameWithType: Resources.STREAM_NAME_STDOUT_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_STDOUT_SHORT
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG*
        name: STREAM_NAME_UNSPECIFIED_LONG
        nameWithType: Resources.STREAM_NAME_UNSPECIFIED_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG*
        name: STREAM_NAME_UNSPECIFIED_LONG
        nameWithType: Resources.STREAM_NAME_UNSPECIFIED_LONG
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_LONG
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT*
        name: STREAM_NAME_UNSPECIFIED_SHORT
        nameWithType: Resources.STREAM_NAME_UNSPECIFIED_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT*
        name: STREAM_NAME_UNSPECIFIED_SHORT
        nameWithType: Resources.STREAM_NAME_UNSPECIFIED_SHORT
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAM_NAME_UNSPECIFIED_SHORT
  WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE*
        name: STREAMSTATEINFO_TOSTRING_TEMPLATE
        nameWithType: Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE*
        name: STREAMSTATEINFO_TOSTRING_TEMPLATE
        nameWithType: Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.STREAMSTATEINFO_TOSTRING_TEMPLATE
  WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST*:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST*
        name: THIS_IS_THE_LAST
        nameWithType: Resources.THIS_IS_THE_LAST
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST*
        name: THIS_IS_THE_LAST
        nameWithType: Resources.THIS_IS_THE_LAST
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
    isDefinition: true
    commentId: Overload:WizardWrx.DLLConfigurationManager.Properties.Resources.THIS_IS_THE_LAST
  WizardWrx.DLLConfigurationManager.Properties.Resources:
    name:
      CSharp:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources
        name: Resources
        nameWithType: Resources
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources
      VB:
      - id: WizardWrx.DLLConfigurationManager.Properties.Resources
        name: Resources
        nameWithType: Resources
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties.Resources
    isDefinition: true
    commentId: T:WizardWrx.DLLConfigurationManager.Properties.Resources
  WizardWrx.DLLConfigurationManager.Properties:
    name:
      CSharp:
      - name: WizardWrx.DLLConfigurationManager.Properties
        nameWithType: WizardWrx.DLLConfigurationManager.Properties
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties
      VB:
      - name: WizardWrx.DLLConfigurationManager.Properties
        nameWithType: WizardWrx.DLLConfigurationManager.Properties
        qualifiedName: WizardWrx.DLLConfigurationManager.Properties
    isDefinition: true
    commentId: N:WizardWrx.DLLConfigurationManager.Properties
