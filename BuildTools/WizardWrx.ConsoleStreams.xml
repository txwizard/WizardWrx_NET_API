<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WizardWrx.ConsoleStreams</name>
    </assembly>
    <members>
        <member name="T:WizardWrx.ConsoleStreams.DefaultErrorMessageColors">
            <summary>
            Expose the default fatal and nonfatal exception message colors, which
            are defined in a standard application configuration file that is linked
            to the assembly that defines this class.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.#ctor">
            <summary>
            The default constructor deviates from the usual pattern by
            explicitly calling the base constructor overload that accepts a
            reference to the assembly that defines this class, with the
            objective of linking it to the application configuration file
            that is linked to this DLL.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.#ctor(System.Reflection.Assembly)">
            <summary>
            The overloaded constructor adheres to the usual pattern by
            explicitly calling the base constructor with a reference to the DLL
            specified by the caller, with the objective of linking it to the
            application configuration file that is linked to aNonther DLL.
            </summary>
            <param name="pasmLinkedAssembly">
            Specify the assembly to which the desired configuration file is
            linked.
            </param>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.FatalExceptionTextColor">
            <summary>
            Get or set the default text color for rendering reports of fatal
            exceptions.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.FatalExceptionBackgroundColor">
            <summary>
            Get or set the default background color for rendering reports of 
            fatal exceptions.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.RecoverableExceptionTextColor">
            <summary>
            Get or set the default text color for rendering reports of
            recoverable exceptions.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.RecoverableExceptionBackgroundColor">
            <summary>
            Get or set the default background color for rendering reports of
            recoverable exceptions.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.PropsLeftAtDefault">
            <summary>
            Get the count of properties that were omitted from the linked 
            configuration file. When this value is greater than zero, generic
            dictionary MissingConfigSettings, inherited from the
            AssemblyLocatorBase base class, contains one string for each such
            property.
            </summary>
            <seealso cref="P:WizardWrx.Core.AssemblyLocatorBase.MissingConfigSettings"/>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.PropsSetFromConfig">
            <summary>
            Get the count of properties that were set from the linked
            configuration file.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.ToString">
            <summary>
            Override the default ToString method on the base class (object) to
            show the key properties followed by the fully qualified class name.
            </summary>
            <returns>
            Return a string similar to the following.
            
            Template: {Fatal: Text = FatalExceptionTextColor, FatalExceptionBackgroundColor = BackgroundColor; Recoverable: Text = RecoverableExceptionTextColor, Background = RecoverableExceptionBackgroundColor} WizardWrx.ConsoleStreams.DefaultErrorMessageColors
            Template: {{WizardWrx.ConsoleStreams.DefaultErrorMessageColors (Fatal: Text (Foreground) = FatalExceptionTextColor, Background = FatalExceptionBackgroundColor; Recoverable: Text (Foreground) = RecoverableExceptionTextColor, Background = RecoverableExceptionBackgroundColor)}}
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.DefaultErrorMessageColors.InitializeInstance">
            <summary>
            Since both constructors perform identical initialization tasks, the
            initializer is factored into a dedicated routine, to decrease the
            maintenance burden.
            </summary>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.ErrorMessagesInColor">
             <summary>
             Console.Error.Write and Console.Error.WriteLine methods that write in
             living color.
             </summary>
             <remarks>
             There are two identical sets of methods.
            
             1) Static methods write text in your choice of foreground and background
             colors, then revert the console colors to their initial values (that is,
             the values they had when the program loaded).
            
             2) Instance methods go a step further, by maintaining a record of the
             current colors, so that the colors can progress through a range, without
             reverting to the initial colors.
            
             For each overload of Console.Error.Write, there are corresponding static
             and instance methods. The only difference in their signatures is that
             these methods specify a foreground color and a background color,
             followed by the same arguments that would apply to the corresponding
             overload of the Console.Error.Write method.
             </remarks>
             <seealso cref="T:WizardWrx.ConsoleStreams.MessageInColor"/>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity">
            <summary>
            Use this enumeration to specify the desired color scheme to the
            GetDefaultErrorMessageColors and GetDefaultMessageColors methods.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity.Fatal">
            <summary>
            The error is fatal, and the program has terminated.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity.Recoverable">
            <summary>
            The program recovered from the error, and the message is for
            your information. You can probably prevent it by some corrective
            action.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.InitializeDefaultPropertiesFromDllConfogurationFile(System.Reflection.Assembly)">
            <summary>
            Call this static method to cause the configuration file linked to
            another DLL to be the source from which default properties are read.
            
            To have the intended effect, a call to this method must be the first
            reference to this class.
            </summary>
            <param name="pasmLinkedAssembly">
            Specify the assembly with which the desired configuration file is
            linked.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.#ctor">
            <summary>
            Constructing an instance saves the current foreground and background
            colors into two pairs of read only ConsoleColor properties. Methods
            facilitate changing one or both colors, while retaining the original
            colors in the other two ConsoleColor properties, which are never
            changed after the class instance comes into being.
            </summary>
            <remarks>
            This method is provided to facilitate construction of a List or
            other sortable collection of ErrorMessagesInColor objects, and 
            allows for a future version of this class to be exposed to COM.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.#ctor(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            This constructor creates an instance with its foreground and
            background colors properties set to the specified ConsoleColor
            values, which presumably differ from the initial foreground and
            background colors.
            </summary>
            <param name="pclrTextForeColor">
            Specify the ConsoleColor property to use as the text (foreground)
            color in generated messages.
            </param>
            <param name="pclrTextBackColor">
            Specify the ConsoleColor property to use as the background color in
            generated messages.
            </param>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.OriginalBackgroundColor">
            <summary>
            Gets the Console.BackgroundColor that was in force when the instance
            was constructed.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.OriginalForegroundColor">
            <summary>
            Gets the Console.ForegroundColor that was in force when the instance
            was constructed.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.MessageBackgroundColor">
            <summary>
            Gets or sets the Console.BackgroundColor to use for messages
            generated by the instance Write and WriteLine methods.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.MessageForegroundColor">
            <summary>
            Gets or sets the Console.ForegroundColor to use for messages
            generated by the instance Write and WriteLine methods.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substitution token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substitution tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substitution tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substitution tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substitution token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substitution tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substitution tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substitution tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.ToString">
            <summary>
            Override the default ToString method inherited from the base class
            (object) to display the most significant properties, the text, or
            foreground, and background colors set by the constructor, followed
            by the fully qualified type name.
            </summary>
            <returns>
            The return value is a string of the following format.
            
            {Text = ConsoleColorText, Background = BackroundColor} WizardWrx.ConsoleStreams.ErrorMessagesInColor
            </returns>
            <remarks>
            Though this method could have easily been implemented inline, using
            the shared message template, moving the implementation out of line
            affords the flexibility to rearrange the display consistently, even
            if that requires the properties to be reordered.
            </remarks>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.FatalExceptionTextColor">
             <summary>
             Get the color to apply to the text of a fatal exception message.
            
             The return value is a member of the System.ConsoleColors enumeration
             that is intended to be treated as a foreground (text) color.
             </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.FatalExceptionBackgroundColor">
             <summary>
             Get the color to use as the background of a fatal exception message.
            
             The return value is a member of the System.ConsoleColors enumeration
             that is intended to be treated as a background color.
             </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RecoverableExceptionTextColor">
             <summary>
             Get the color to apply to the text of a recoverable exception
             message.
            
             The return value is a member of the System.ConsoleColors enumeration
             that is intended to be treated as a foreground (text) color.
             </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RecoverableExceptionBackgroundColor">
             <summary>
             Get the color to use as the background of a recoverable exception
             message.
            
             The return value is a member of the System.ConsoleColors enumeration
             that is intended to be treated as a background color.
             </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substitution token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substitution tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substitution tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substitution tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substitution token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substitution tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substitution tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substitution tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.GetDefaultErrorMessageColors(WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity)">
            <summary>
            Return a new ErrorMessagesInColor object with its text and
            background colors initialized from the specified default color pair.
            </summary>
            <param name="penmErrorSeverity">
            Specify a member of the ErrorSeverity enumeration to indicate which
            of the two default color schemes is wanted.
            </param>
            <returns>
            The returned ErrorMessagesInColor object is ready for use with the
            instance Write and WriteLine methods to display error messages of
            the specified type on the STDERR (Standard Error) console stream.
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.GetDefaultMessageColors(WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity)">
            <summary>
            Return a new MessageInColor object with its text and background
            colors initialized from the specified default color pair.
            </summary>
            <param name="penmErrorSeverity">
            Specify a member of the ErrorSeverity enumeration to indicate which
            of the two default color schemes is wanted.
            </param>
            <returns>
            The returned MessageInColor object is ready for use with the
            instance Write and WriteLine methods of its class to display
            messages of the specified type on the STDOUT (Standard Output)
            console stream.
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.SetDefaultErrorMessageColors(WizardWrx.ConsoleStreams.ErrorMessagesInColor.ErrorSeverity,System.ConsoleColor,System.ConsoleColor)">
            <summary>
            Simultaneously override the default text and background colors that
            are read into four static ConsoleColor properties when the library
            initializes. This can also be accomplished by setting the text and
            background color properties separately, but this accomplishes the
            task with one method call.
            </summary>
            <param name="penmErrorSeverity">
            Specify a member of the ErrorSeverity enumeration to indicate which
            of the two default color schemes is wanted.
            </param>
            <param name="pclrTextForeColor">
            Specify the ConsoleColor property to use as the text (foreground)
            color in generated messages.
            </param>
            <param name="pclrTextBackColor">
            Specify the ConsoleColor property to use as the background color in
            generated messages.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RestoreOrigColors">
            <summary>
            Use this method to simultaneously restore the background and
            foreground colors to the values that they had when the ErrorMessagesInColor
            instance was constructed.
            </summary>
            <remarks>
            The current background and foreground colors can be obtained at any
            time by querying the corresponding read/write Console property
            (BackgroundColor property and ForegroundColor, respectively).
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.InitializeInstance">
            <summary>
            The constructors use this method to save the console colors as they
            were when the constructor ran.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.SaveTextColors(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            The constructors use this method to initialize the properties that
            keep the selected foreground and background colors for use by the
            instance Write and WriteLine methods.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use as the text (foreground) color.
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use as the background color behind the
            text.
            </param>
            <remarks>
            The constructors pass in the same colors that were saved by the
            SaveOrigColors method for any unused color.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.SetMessageColors">
            <summary>
            This instance method saves the current Console.BackgroundColor and
            Console.ForegroundColor properties, so that they can be subsequently
            restored, then sets them to the message colors to the values stored
            in the MessageBackgroundColor and MessageForegroundColor properties.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.RestoreMessageColors">
            <summary>
            This instance method uses the ConsoleColor values saved by the
            SetMessageColors method to restore the colors to the values that
            were in use when the instance Write or WriteLine method was called.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColor.SetMessageColors(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            Change the foreground and background colors, but make no effort to
            retain their old or new values. See Remarks.
            </summary>
            <param name="pclrNewForeColor">
            Specify a member of the ConsoleColor enumeration that will become
            the new foreground color, which remains in effect until changed by a
            subsequent call to SetMessageColors.
            </param>
            <param name="pclrNewBackColor">
            Specify a member of the ConsoleColor enumeration that will become
            the new background color, which remains in effect until changed by a
            subsequent call to SetMessageColors.
            </param>
            <remarks>
            The current background and foreground colors can be obtained at any
            time by querying the corresponding read/write Console property
            (BackgroundColor property and ForegroundColor, respectively).
            </remarks>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.ErrorMessagesInColorConverter">
            <summary>
            Although its scope is public, the only practical use for this class is
            to facilitate storage of default or user specified ErrorMessagesInColor
            values in application settings files. That being the case, I put it at
            the end of the source file that defines that class.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Return True if inputs of the specified type can be converted.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="ptypSourceType">
            This argument specifies the System.Type to be evaluated. Treat it as
            a black box.
            </param>
            <returns>
            This method returns TRUE if ptypSourceType is typeof ( string ). Any
            other type returns FALSE.
            </returns>
            <remarks>
            This method and its companions ConvertFrom and ConvertTo are 
            delegates, which the runtime engine calls as needed. Hence, the
            arguments described above as black boxes are required, although this
            implementation ignores them, since it processes string
            representations of the System.Console.ConsoleColors enumerated type.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert from string (the only supported source type) to
            ErrorMessagesInColor.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="pCulture">
            This argument supplies a reference to the current CultureInfo object
            that drives many aspects of text and numeric conversions. Treat it as
            a black box.
            </param>
            <param name="pobjValue">
            Specify the source object to be converted. Although the method
            signature requires this argument to be cast to Object, the only type
            supported is System.string. In any event, treat it as a black box.
            </param>
            <returns>
            Although specified as object to meet the requirements of the base
            class, the return value is expected to be an ErrorMessagesInColor
            object.
            </returns>
            <remarks>
            This method and its companions CanConvertFrom and ConvertTo are 
            delegates, which the runtime engine calls as needed. Hence, the
            arguments described above as black boxes are required, although this
            implementation ignores them, since it processes string
            representations of the System.Console.ConsoleColors enumerated type.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.ErrorMessagesInColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Given an ErrorMessagesInColor object, return a string representation
            that is suitable for storage in a standard application settings file.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="pCulture">
            This argument supplies a reference to the current CultureInfo object
            that drives many aspects of text and numeric conversions. Treat it as
            a black box.
            </param>
            <param name="pobjValue">
            Although the method signature calls for an generic System.Object,
            this argument must actually be an ErrorMessagesInColor object.
            </param>
            <param name="pDestType">
            The only valid value for this argument is typeof ( string ). The
            specification type is dictated by the signature of the ConvertTo
            method in the base class.
            </param>
            <returns>
            Although specified as object to meet the requirements of the base
            class, the return value is expected to be a System.string.
            </returns>
            <remarks>
            This method and its companions CanConvertFrom and ConvertFrom are 
            delegates, which the runtime engine calls as needed. Hence, the
            arguments described above as black boxes are required, although this
            implementation ignores them, since it processes string
            representations of the System.Console.ConsoleColors enumerated type.
            </remarks>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.MessageInColor">
             <summary>
             Console.Write and Console.WriteLine methods that write in living color.
             </summary>
             <remarks>
             There are two identical sets of methods.
            
             1) Static methods write text in your choice of foreground and background
             colors, then revert the console colors to their initial values (that is,
             the values they had when the program loaded).
            
             2) Instance methods go a step further, by maintaining a record of the
             current colors, so that the colors can progress through a range, without
             reverting to the initial colors.
            
             For each overload of Console.Write, there are corresponding static and
             instance methods. The only difference in their signatures is that these
             methods specify a foreground color and a background color, followed by
             the same arguments that would apply to the corresponding overload of the
             Console.Write method.
             </remarks>
             <seealso cref="T:WizardWrx.ConsoleStreams.ErrorMessagesInColor"/>
             <seealso cref="T:WizardWrx.Core.PropertyDefaults"/>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.#ctor">
            <summary>
            Constructing an instance saves the current foreground and background
            colors into two pairs of read only ConsoleColor properties. Methods
            facilitate changing one or both colors, while retaining the original
            colors in the other two ConsoleColor properties, which are never
            changed after the class instance comes into being.
            </summary>
            <remarks>
            This method is provided to facilitate construction of a List or
            other sortable collection of MessageInColor objects, and allows for
            a future version of this class to be exposed to COM.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.#ctor(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            This constructor creates an instance with its foreground and
            background colors properties set to the specified ConsoleColor
            values, which presumably differ from the initial foreground and
            background colors.
            </summary>
            <param name="pclrTextForeColor">
            Specify the ConsoleColor property to use as the text (foreground)
            color in generated messages.
            </param>
            <param name="pclrTextBackColor">
            Specify the ConsoleColor property to use as the background color in
            generated messages.
            </param>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.MessageInColor.OriginalBackgroundColor">
            <summary>
            Gets the Console.BackgroundColor that was in force when the instance
            was constructed.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.MessageInColor.OriginalForegroundColor">
            <summary>
            Gets the Console.ForegroundColor that was in force when the instance
            was constructed.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.MessageInColor.MessageBackgroundColor">
            <summary>
            Gets or sets the Console.BackgroundColor to use for messages
            generated by the instance Write and WriteLine methods.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.MessageInColor.MessageForegroundColor">
            <summary>
            Gets or sets the Console.ForegroundColor to use for messages
            generated by the instance Write and WriteLine methods.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.ToString">
            <summary>
            Override the default ToString method inherited from the base class
            (object) to display the most significant properties, the text, or
            foreground, and background colors set by the constructor, followed
            by the fully qualified type name.
            </summary>
            <returns>
            The return value is a string of the following format.
            
            {Text = ConsoleColorText, Background = BackroundColor} WizardWrx.ConsoleStreams.MessageInColor
            </returns>
            <remarks>
            Though this method could have easily been implemented inline, using
            the shared message template, moving the implementation out of line
            affords the flexibility to rearrange the display consistently, even
            if that requires the properties to be reordered.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substition token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substition tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substition tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substition tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substition token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substition tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substition tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substition tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.SafeConsoleClear">
             <summary>
             Use this method as a non-throwing replacement for Console.Clear,
             which throws an System.IO.IOException exception if the standard
             output stream is redirected. This catches that exception and eats it
             unless the user enables logging of all exceptions, typically in a
             testing scenario.
             </summary>
             <remarks>
             Comparing the HResult to a local constant, E_HANDLE, means that the
             error test works correctly in any locale.
            
             Thankfully, Microsoft came to their senses, and made the HResult
             visible in later frameworks. Meanwhile, I've found a workaround
             that should do the job in code that targets .NET Framework 3.5.
             </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substition token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substition tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substition tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWriteLine(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substition tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Boolean)">
            <summary>
            Write the string representation of a bool (Boolean) variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Boolean value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char)">
            <summary>
            Write the string representation of a char (a Unicode character).
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the Unicode character to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char[])">
            <summary>
            Write the string representation of a character array.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Specify the array of Unicode characters to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Decimal)">
            <summary>
            Write the string representation of a decimal variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the decimal value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Double)">
            <summary>
            Write the string representation of a double precision variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the double precision value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Single)">
            <summary>
            Write the string representation of a floating point variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the floating point value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Int32)">
            <summary>
            Write the string representation of an integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Int64)">
            <summary>
            Write the string representation of a long integer variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the long integer value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Object)">
            <summary>
            Write the string representation of a generic Object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the object value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String)">
            <summary>
            Write a string variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the string value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.UInt32)">
            <summary>
            Write the string representation of a uint (unsigned integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the uint (unsigned integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.UInt64)">
            <summary>
            Write the string representation of a ulong (unsigned long integer)
            variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="value">
            Specify the ulong (unsigned long integer) value to display.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object)">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may include at most
            one substitution token.
            </param>
            <param name="arg0">
            Replace the substition token with the string representation of this
            generic object.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Write a formatted message that includes the string representation of
            an generic object variable.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contains
            substitution tokens for each object in an array of generic Object
            variables.
            </param>
            <param name="arg">
            Substitute elements from this array of generic Object variables into
            the format string, replacing tokens with the element whose subscript
            is the number within its brackets.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.Char[],System.Int32,System.Int32)">
            <summary>
            Write a formatted message that includes a range of characters taken
            from an array of Unicode characters.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="buffer">
            Extract characters from this array of Unicode characters.
            </param>
            <param name="index">
            Subscript of character to substitute for token {0} in format.
            </param>
            <param name="count">
            Number of characters from buffer to substitute into string, which
            must contain at least count - 1 substitution tokens.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to two substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to two
            substition tokens, {0} and {1}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to three substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 3
            substition tokens, {0}, {1}, and {2}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RGBWrite(System.ConsoleColor,System.ConsoleColor,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Write a formatted message that includes up to four substitution
            tokens.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use for the foreground (text).
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use for the background.
            </param>
            <param name="format">
            Use this string as the message template, which may contain up to 4
            substition tokens, {0}, {1}, {2}, and {3}.
            </param>
            <param name="arg0">
            The default string representation of this generic Object variable is
            substituted into format for token {0}.
            </param>
            <param name="arg1">
            The default string representation of this generic Object variable is
            substituted into format for token {1}.
            </param>
            <param name="arg2">
            The default string representation of this generic Object variable is
            substituted into format for token {2}.
            </param>
            <param name="arg3">
            The default string representation of this generic Object variable is
            substituted into format for token {3}.
            </param>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RestoreOrigColors">
            <summary>
            Use this method to simultaneously restore the background and
            foreground colors to the values that they had when the MessageInColor
            instance was constructed.
            </summary>
            <remarks>
            The current background and foreground colors can be obtained at any
            time by querying the corresponding read/write Console property
            (BackgroundColor property and ForegroundColor, respectively).
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.SaveOrigColors">
            <summary>
            The constructors use this method to save the console colors as they
            were when the constructor ran.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.SaveTextColors(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            The constructors use this method to initialize the properties that
            keep the selected foreground and background colors for use by the
            instance Write and WriteLine methods.
            </summary>
            <param name="pclrForeColor">
            Specify the ConsoleColor to use as the text (foreground) color.
            </param>
            <param name="pclrBackColor">
            Specify the ConsoleColor to use as the background color behind the
            text.
            </param>
            <remarks>
            The constructors pass in the same colors that were saved by the
            SaveOrigColors method for any unused color.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.SetMessageColors">
            <summary>
            This instance method saves the current Console.BackgroundColor and
            Console.ForegroundColor properties, so that they can be subsequently
            restored, then sets them to the message colors to the values stored
            in the MessageBackgroundColor and MessageForegroundColor properties.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.RestoreMessageColors">
            <summary>
            This instance method uses the ConsoleColor values saved by the
            SetMessageColors method to restore the colors to the values that
            were in use when the instance Write or WriteLine method was called.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColor.SetMessageColors(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            Change the foreground and background colors, but make no effort to
            retain their old or new values. See Remarks.
            </summary>
            <param name="pclrNewForeColor">
            Specify a member of the ConsoleColor enumeration that will become
            the new foreground color, which remains in effect until changed by a
            subsequent call to SetMessageColors.
            </param>
            <param name="pclrNewBackColor">
            Specify a member of the ConsoleColor enumeration that will become
            the new background color, which remains in effect until changed by a
            subsequent call to SetMessageColors.
            </param>
            <remarks>
            The current background and foreground colors can be obtained at any
            time by querying the corresponding read/write Console property
            (BackgroundColor property and ForegroundColor, respectively).
            </remarks>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.MessageInColorConverter">
            <summary>
            Although its scope is public, the only practical use for this class is
            to facilitate storage of default or user specified MessageInColor values
            in application settings files.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Return True if inputs of the specified type can be converted.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="ptypSourceType">
            This argument specifies the System.Type to be evaluated.
            </param>
            <returns>
            This method returns TRUE if ptypSourceType is typeof ( string ). Any
            other type returns FALSE.
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert from string (the only supported source type) to
            MessageInColor.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="pCulture">
            This argument supplies a reference to the current CultureInfo object
            that drives many aspects of text and numeric conversions.
            </param>
            <param name="pobjValue">
            Specify the source object to be converted. Although the method
            signature requires this argument to be cast to Object, the only type
            supported is System.string.
            </param>
            <returns>
            Although specified as object to meet the requirements of the base
            class, the actual return value is expected to be a MessageInColors
            object.
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.MessageInColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Given a MessageInColors object, return a string representation that
            is suitable for storage in a standard application settings file.
            </summary>
            <param name="pIContext">
            This argument provides internal details about the type. Treat it as
            a black box.
            </param>
            <param name="pCulture">
            This argument supplies a reference to the current CultureInfo object
            that drives many aspects of text and numeric conversions.
            </param>
            <param name="pobjValue">
            Although the method signature calls for an generic System.Object,
            this argument must actually be a MessageInColors object.
            </param>
            <param name="pDestType">
            The only valid value for this argument is typeof ( string ). The
            specification type is dictated by the signature of the ConvertTo
            method in the base class.
            </param>
            <returns>
            Although specified as object to meet the requirements of the base
            class, the actual return value is expected to be a System.string.
            </returns>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.StandardHandleInfo">
            <summary>
            This static class provides type-safe managed methods to determine the
            true redirection state of a standard console handle, including, if
            applicable, learning the name of the file to which it is redirected.
            </summary>
            <remarks>
            The standard properties on the Process (all versions) and Console
            (version 4.5 and newer) objects report based solely on redirections
            brought about by the Base Class Library. They completely ignore redirection
            that happens in the shell, before the process started. Hence, to learn the
            true redirection state requires a couple of Platform Invoke calls into the
            Windows API, which this class provides through type-safe wrappers.
            </remarks>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes">
            <summary>
            Use these flags to test the values returned by GetConsoleMode.
            </summary>
            <remarks>
            In wincon.h, these are defined as symbolic constants, although there
            is ample justification for rolling them into a bit-mapped
            enumeration. I suspect the reason they aren't is that the change
            would break too much legacy code.
            
            For the present, GetConsoleMode is called, but only for a side
            effect; its return value is discarded.
            
            Though currently unused, the enumeration is reserved for future use.
            
            The summaries shown here for all but the last member of this
            enumeration are quoted verbatim from the MSDN manual page of the
            SetConsoleMode function cited below.
            </remarks>
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686033(v=vs.85).aspx"/>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_PROCESSED_INPUT">
            <summary>
            Characters written by the WriteFile or WriteConsole function or
            echoed by the ReadFile or ReadConsole function are examined for
            ASCII control sequences and the correct action is performed.
            Backspace, tab, bell, carriage return, and line feed characters
            are processed.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_LINE_INPUT">
            <summary>
            The ReadFile or ReadConsole function returns only when a
            carriage return character is read. If this mode is disabled, the
            functions return when one or more characters are available.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_ECHO_INPUT">
            <summary>
            Characters read by the ReadFile or ReadConsole function are
            written to the active screen buffer as they are read. This mode
            can be used only if the ENABLE_LINE_INPUT mode is also enabled.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_WINDOW_INPUT">
            <summary>
            User interactions that change the size of the console screen
            buffer are reported in the console's input buffer. Information
            about these events can be read from the input buffer by
            applications using the ReadConsoleInput function, but not by
            those using ReadFile or ReadConsole.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_MOUSE_INPUT">
            <summary>
            If the mouse pointer is within the borders of the console window
            and the window has the keyboard focus, mouse events generated by
            mouse movement and button presses are placed in the input buffer.
            These events are discarded by ReadFile or ReadConsole, even when
            this mode is enabled.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_INSERT_MODE">
            <summary>
            When enabled, text entered in a console window will be inserted
            at the current cursor location and all text following that
            location will not be overwritten. When disabled, all following
            text will be overwritten.
            
            To enable this mode, use ENABLE_INSERT_MODE | ENABLE_EXTENDED_FLAGS.
            
            To disable this mode, use ENABLE_EXTENDED_FLAGS without this flag.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_QUICK_EDIT_MODE">
            <summary>
            This flag enables the user to use the mouse to select and edit
            text.
            
            To enable this mode, use ENABLE_QUICK_EDIT_MODE | ENABLE_EXTENDED_FLAGS.
            
            To disable this mode, use ENABLE_EXTENDED_FLAGS without this flag.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_EXTENDED_FLAGS">
            <summary>
            Required to enable or disable extended flags.
            
            See ENABLE_INSERT_MODE and ENABLE_QUICK_EDIT_MODE.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleModes.ENABLE_AUTO_POSITION">
            <summary>
            Though defined in WinCon.h, this flag is otherwise undocumented.
            
            My initial best guess is that it is related to the "Let system
            position window" check box on the property sheet of a CMD.EXE
            window, though I have yet to test this theory.
            </summary>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleOutputModes">
            <summary>
            Use these flags with SetConsoleMode to control how long output lines
            are handled.
            </summary>
            <remarks>
            In wincon.h, these are defined as symbolic constants, although there
            is ample justification for rolling them into a bit-mapped
            enumeration. I suspect the reason they aren't is that the change
            would break too much legacy code.
            
            For the present, SetConsoleMode is not called.
            
            Though currently unused, the enumeration is reserved for future use.
            
            The summaries shown here for all but the last member of this
            enumeration are quoted verbatim from the MSDN manual page of the
            SetConsoleMode function cited below.
            </remarks>
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686033(v=vs.85).aspx"/>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleOutputModes.ENABLE_PROCESSED_OUTPUT">
            <summary>
            Characters written by the WriteFile or WriteConsole function or
            echoed by the ReadFile or ReadConsole function are examined for
            ASCII control sequences and the correct action is performed.
            Backspace, tab, bell, carriage return, and line feed characters
            are processed.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.ConsoleOutputModes.ENABLE_WRAP_AT_EOL_OUTPUT">
            <summary>
            When writing with WriteFile or WriteConsole or echoing with
            ReadFile or ReadConsole, the cursor moves to the beginning of
            the next row when it reaches the end of the current row. This
            causes the rows displayed in the console window to scroll up
            automatically when the cursor advances beyond the last row in
            the window. It also causes the contents of the console screen
            buffer to scroll up (discarding the top row of the console
            screen buffer) when the cursor advances beyond the last row in
            the console screen buffer. If this mode is disabled, the last
            character in the row is overwritten with any subsequent
            characters.
            </summary>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle">
            <summary>
            This enumeration defines the three valid values for an enumeration,
            StandardConsoleHandle, the input argument type of methods
            StandardHandleState and GetRedirectedFileName, both public methods,
            and GetStandardHandle, currently private, but under consideration
            for a promotion.
            
            The upper and lower values are for efficient boundary testing.
            </summary>
            <remarks>
            Although the standard handles have well-known fixed values, each
            OF WHICH HAS a corresponding symbolic constant defined in winbase.h,
            they are nonstandard handle values (all three less than zero), which
            would usually be interpreted as invalid handles. These values would
            be unusual, though perfectly legal, enumeration values.
            
            Instead, I defined this enumeration, and provided a private method,
            GetStandardHandle, that maps the enumeration to the corresponding 
            standard handle constant by way of a simple lookup table that uses
            the enumeration value, cast to integer, as its index. The returned
            Windows handle value is a 32 or 64 bit positive integer, which that
            function passes into GetStdHandle (via Platform Invoke), through
            which it returns.
            
            This is one of two public enumerations that were ported from
            StandardHandleState.H, the C/C++ header that defines the interfaces
            that this class supersedes.
            </remarks>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle.Undefined">
            <summary>
            This member is both the uninitialized value of a variable of its
            type and the lower limit of the range of valid values.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle.StandardInput">
            <summary>
            This member signifies a request to perform an operation on the
            Standard Input stream, STDOUT, which corresponds to the Console.In
            and System.Diagnostics.Process.StandardInput properties.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle.StandardOutput">
            <summary>
            This member signifies a request to perform an operation on the
            Standard Output stream, STDIN, which corresponds to the Console.Out
            and System.Diagnostics.Process.StandardOutput properties.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle.StandardError">
            <summary>
            This member signifies a request to perform an operation on the
            Standard Output stream, STDERR, which corresponds to the Console.Error
            and System.Diagnostics.Process.StandardError properties.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle.OutOfRange">
            <summary>
            This member is intended for bounds-checking values that are cast
            to an integral type.
            </summary>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState">
            <summary>
            This enumeration defines the two valid states and two defined error
            states that may be returned by the StandardHandleState method, along
            with a pair of values that may be returned to indicate one of two
            error conditions.
            </summary>
            <remarks>
            This is one of two public enumerations that were ported from
            StandardHandleState.H, the C/C++ header that defines the interfaces
            that this class supersedes.
            </remarks>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState.Undetermined">
            <summary>
            This member is returned when the supplied StandardConsoleHandle
            member is out of range.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState.Attached">
            <summary>
            This member is returned when console stream that corresponds to
            the specified StandardConsoleHandle member is attached to its
            console.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState.Redirected">
            <summary>
            This member is returned when console stream that corresponds to
            the specified StandardConsoleHandle member is redirected to a
            file.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.StandardHandleState.STATE_SYSTEM_ERROR">
            <summary>
            This member is returned when attempting to get the state of the
            specified StandardConsoleHandle raised an exception.
            </summary>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.INVALID_HANDLE_VALUE">
            <summary>
            When a routine, such as GetStandardHandle cannot return a usable
            file handle, this is the return value, cast to IntPtr, as is the
            expected file handle.
            </summary>
            <remarks>
            Were it not that IntPtr is a structure, INVALID_HANDLE_VALUE would
            be defined as a public constant.
            </remarks>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.INVALID_MODULE_HANDLE">
            <summary>
            When a routine, such as GetModuleHandle cannot return a usable
            module handle, this is the return value, cast to IntPtr, as is the
            expected module handle.
            </summary>
            <remarks>
            Were it not that IntPtr is a structure, INVALID_HANDLE_VALUE would
            be defined as a public constant.
            </remarks>
        </member>
        <member name="F:WizardWrx.ConsoleStreams.StandardHandleInfo.STD_HANDLE_UNDEFINED">
            <summary>
            This constant is a place holder to occupy the first slot in the 
            standard handle mapping table, s_adwStdConsoleHandleIDs, which
            corresponds to an uninitialized value.
            </summary>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.StandardHandleInfo.GetStandardHandleState(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)">
             <summary>
             Get the redirection state of a specified standard console stream.
             </summary>
             <param name="penmStdHandleID">
             Use a member of the StandardConsoleHandle enumeration to designate
             the desired standard console stream.
             </param>
             <returns>
             The return value is one of the following.
             
             StandardHandleState.Attached means that the specified stream is
             attached to its console.
             
             StandardHandleState.Redirected means that the specified stream is
             redirected.
             
             Call GetRedirectedFileName to get the fully qualified name of the
             file to which it is redirected.
             </returns>
             <remarks>
             In all versions of the framework, the following properties report
             inaccurately on the true state of the console stream.
             
             - System.Diagnostics.Process.StartInfo.RedirectStandardInput ,
             - System.Diagnostics.Process.StartInfo.RedirectStandardOutput ,
             - System.Diagnostics.Process.StartInfo.RedirectStandardError ,
            
             The following properties, added in version 4.5, also report incorrectly.
             
             - Console.IsErrorRedirected
             - Console.IsInputRedirected
             - Console.IsOutputRedirected
             
             The above properties report inaccurately because their report is
             based entirely on changes made by calls to methods on the Console
             class. They exhibit no knowledge, whatsoever, of what the underlying
             operating system does in response to shell commands to redirect one
             or more of the standard console streams.
             
             On the other hand, since StandardHandleState gets its information 
             from GetConsoleMode, a native Windows API routine, its report takes 
             into account console stream redirections that are the result of
             shell commands.
             </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.StandardHandleInfo.GetRedirectedFileName(WizardWrx.ConsoleStreams.StandardHandleInfo.StandardConsoleHandle)">
            <summary>
            Get the name of the file to which a specified standard handle is
            redirected.
            </summary>
            <param name="penmStdHandleID">
            Use a member of the StandardConsoleHandle enumeration to designate
            the desired standard console stream.
            </param>
            <returns>
            If the file is redirected, the returned string contains the fully
            qualified name of the file to which it is redirected. If the handle
            is attached to its console (that is, not redirected), the return
            value is the empty string.
            </returns>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.StandardHandleInfo.GetWin32StatusCode">
            <summary>
            Get the last Win32 status code logged by Marshal.GetLastWin32Error.
            </summary>
            <returns>
            The return value is the value returned by the last call to
            Marshal.GetLastWin32Error.
            </returns>
            <remarks>
            As is true of the other methods defined by this class, this method
            is not yet thread-safe.
            </remarks>
        </member>
        <member name="M:WizardWrx.ConsoleStreams.StandardHandleInfo.GetModuleHandle(System.String)">
            <summary>
            Though perhaps a tad less efficient than calling the like named
            Windows API function, this method is a 100% managed approach to the
            task of getting the instance handle (base address) of a module.
            </summary>
            <param name="pstrModuleName">
            Specify the base name of the desired module. Omit the .DLL suffix.
            </param>
            <returns>
            If a like named module exists in the collection of loaded modules,
            its instance handle, which happens also to be its base address, is
            returned. Otherwise, the return value is INVALID_MODULE_HANDLE.
            </returns>
            <see href="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483"/>
        </member>
        <member name="T:WizardWrx.ConsoleStreams.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.CONSOLE_COLORS_TOSTRING_TEMPLATE">
            <summary>
              Looks up a localized string similar to {{{0} (Text (Foreground) = {1}, Background = {2})}}.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.DEFAULTERRORMESSAGECOLORS_TOSTRING_TEMPLATE">
            <summary>
              Looks up a localized string similar to {{{0} (Fatal: Text (Foreground) = {1}, Background = {2}; Recoverable: Text (Foreground) = {3}, Background = {4})}}.
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.ERRMSG_UNEXPECTED_SAFE_CLEAR_SCREEN_EXCEPTION">
            <summary>
              Looks up a localized string similar to An unexpected exception arose in method {0}.{3}    Exception HResult = {1}{3}    Exception Message = {2}{3}    Additional details are in the inner exception..
            </summary>
        </member>
        <member name="P:WizardWrx.ConsoleStreams.Properties.Resources.ERRMSG_UNSUPPORTED_WINDOWS_VERSION">
            <summary>
              Looks up a localized string similar to SYSTEM ERROR: The required Windows system routines are unavailable on the installed version of Microsoft Windows, version {0}{1}.{4}The minimum supported version is {2}.{3}..
            </summary>
        </member>
    </members>
</doc>
