<?xml version="1.0" encoding="utf-8" ?>
<!--
    File Name:          WizardWrx.DLLConfigurationManager.dll.config

    Synopsis:           Store default settings for properties exposed by the
                        ErrorMessagesInColor class of WizardWrx.DLLServices2,
                        to simplify application of a uniform color scheme, while
                        giving users the option of changing the colors without
                        changing a program.

    Remarks:            ==============================================
                        Message Color Coding for Console Applications:
                        ==============================================

                        Two color pairs are defined, consisting of a text color
                        and a background color for use when displaying a fatal
                        exception report, and another pair of colors for use
                        when displaying a recoverable (nonfatal) exception
                        report. The colors are chosen so that the distinction is
                        based on the background color (Dark Red versus Yellow).

                        Setting the RecoverableExceptionBackgroundColor key to
                        Black ensures that the message display is legible,
                        regardless of the current console colors.

                        The ErrorMessagesInColor class exposes a pair of static
                        methods that return instances of the two color writer
                        classes with properties set to one of these pairs.

                        ====================================================
                        To get one of these:    Call this static method.
                        ====================    ============================
                        ErrorMessagesInColor    GetDefaultErrorMessageColors
                        MessageInColor          GetDefaultMessageColors
                        ====================================================

                        A single SetDefaultErrorMessageColors method suffices to
                        update all four properties (This requires two method
                        calls, versus four to set the properties individually.)

                        ==============================================
                        Default Event Source ID for Windows Event Log:
                        ==============================================

                        The DefaultWindowsEventSourceID, if present, is read by
                        the ExceptionLogger constructor, a singleton that is
                        initialized when the StateManager class is initialized,
                        or on first use, whichever happens first, uses this key,
                        if it exists, as its event source ID when it writes into
                        the Windows Event Log, which it does when the EventLog
                        flag on its OptionFlags property is set.

                        Since posting in the event log has significant security
                        ramifications that must be carefully weighed before any
                        application is allowed to do so, this option is OFF by
                        default. There are several ways in which this can be
                        changed, either at construction time, by taking command
                        of same by calling one of its GetTheSingleInstance
                        methods, some of which allow both OptionFlags and the
                        event source. Hence, the fact that this configuration
                        file ships with a value in this key is harmless, because
                        it is never used without explicit permission from the
                        client application.

    References:         "Using Custom Classes with Application Settings,"
                        Richard Carr,
                        http://www.blackwasp.co.uk/CustomAppSettings.aspx

    Author:             David A. Gray

    License:            Copyright (C) 2011-2017, David A. Gray.
                        All rights reserved.

                        Redistribution and use in source and binary forms, with
                        or without modification, are permitted provided that the
                        following conditions are met:

                        *   Redistributions of source code must retain the above
                            copyright notice, this list of conditions and the
                            following disclaimer.

                        *   Redistributions in binary form must reproduce the
                            above copyright notice, this list of conditions and
                            the following disclaimer in the documentation and/or
                            other materials provided with the distribution.

                        *   Neither the name of David A. Gray, nor the names of
                            his contributors may be used to endorse or promote
                            products derived from this software without specific
                            prior written permission.

                        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
                        CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
                        WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
                        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
                        PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
                        David A. Gray BE LIABLE FOR ANY DIRECT, INDIRECT,
                        INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
                        (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
                        SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
                        PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
                        ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
                        LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
                        ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
                        IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    Created:            Monday, 09 June 2014 and Sunday, 22 June 2014

    ============================================================================
    Revision History
    ============================================================================

    Date       By  Synopsis
    ========== === =============================================================
    2014/06/09 DAG Configuration file created and tested.

    2014/06/22 DAG Internal documentation added.

    2015/06/15 DAG Swap the values of the RecoverablelExceptionTextColor and
                   RecoverableExceptionBackgroundColor keys.

    2015/06/19 DAG Add a new key, DefaultWindowsEventSourceID, and set its value
                   to that of my long established default event source ID.

    2015/10/08 DAG Swap the foreground and background colors on the two
                   RecoverablelException color properties so that the background
                   color for fatal exceptions is red, while the background color
                   for the recoverable exceptions is yellow. Hence, it is always
                   the background color that distinguishes fatal and recoverable
                   exceptions.

    2016/06/05 DAG Amend the formatting of this head-note to conform to my
                   formatting convention, in preparation for making this version
                   once again the reference version, and updating all production
                   copies.

    2017/02/24 DAG Break this library apart, so that smaller subsets of classes
                   can be distributed and consumed independently.

                   This configuration file moved into WizardWrx.ConsoleStreams,
                   a new namespace, which is exported by a like named dynamic
                   link library.

                   Rename from WizardWrx.DLLServices2.dll.config to
                   WizardWrx.DLLConfigurationManager.dll.config, and again, to
                   WizardWrx.Core.dll.config.

    2017/02/25 DAG Rename from WizardWrx.Core.dll.config to
                   WizardWrx.ConsoleStreams.dll.config.

                   Since the ultimate goal is to be one configuration, shared
                   between two assemblies, the DefaultWindowsEventSourceID key
                   stays.

    2017/02/25 DAG Rename from WizardWrx.ConsoleStreams.dll.config. to
                   WizardWrx.DLLConfigurationManager.dll.config, which is its
                   final name.

                   The association with WizardWrx.DLLConfigurationManager.dll is
                   the most logical, because its ExceptionLogger needs,
                   directly or indirectly, all of the settings stored herein,
                   and having everything in one place simplifies configuration.

    2020/12/14 DAG Verify that the two configuration keys that are being listed
                   as missing are there, and fix a typographical error in the
                   comments.
    ============================================================================
-->

<configuration>
    <appSettings>
        <add key="FatalExceptionTextColor"             value="White"/>
        <add key="FatalExceptionBackgroundColor"       value="DarkRed"/>

        <add key="RecoverablelExceptionTextColor"      value="Black"/>
        <add key="RecoverableExceptionBackgroundColor" value="Yellow"/>

        <add key="DefaultWindowsEventSourceID"         value="WizardWrx"/>
    </appSettings>
</configuration>